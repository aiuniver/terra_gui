const layers = {
  Dense: {
    main: {
      units: {
        type: "int",
        default: 32,
      },
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {
      use_bias: {
        type: "bool",
        default: true,
      },
      kernel_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      kernel_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      kernel_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  Conv1D: {
    main: {
      filters: {
        type: "int",
        default: 32,
      },
      kernel_size: {
        type: "int",
        default: 5,
      },
      strides: {
        type: "int",
        default: 1,
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
      dilation_rate: {
        type: "int",
        default: 1,
      },
      groups: {
        type: "int",
        default: 1,
      },
      use_bias: {
        type: "bool",
        default: true,
      },
      kernel_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      kernel_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      kernel_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  Conv2D: {
    main: {
      filters: {
        type: "int",
        default: 32,
      },
      kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      strides: {
        type: "tuple",
        default: [1, 1],
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
      dilation_rate: {
        type: "tuple",
        default: [1, 1],
      },
      groups: {
        type: "int",
        default: 1,
      },
      use_bias: {
        type: "bool",
        default: true,
      },
      kernel_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      kernel_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      kernel_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  Conv3D: {
    main: {
      filters: {
        type: "int",
        default: 32,
      },
      kernel_size: {
        type: "tuple",
        default: [3, 3, 3],
      },
      strides: {
        type: "tuple",
        default: [1, 1, 1],
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
      dilation_rate: {
        type: "tuple",
        default: [1, 1, 1],
      },
      groups: {
        type: "int",
        default: 1,
      },
      use_bias: {
        type: "bool",
        default: true,
      },
      kernel_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      kernel_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      kernel_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  SeparableConv1D: {
    main: {
      filters: {
        type: "int",
        default: 32,
      },
      kernel_size: {
        type: "int",
        default: 3,
      },
      strides: {
        type: "int",
        default: 1,
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
      dilation_rate: {
        type: "int",
        default: 1,
      },
      depth_multiplier: {
        type: "int",
        default: 1,
      },
      use_bias: {
        type: "bool",
        default: true,
      },
      depthwise_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      pointwise_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      depthwise_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      pointwise_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      depthwise_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      pointwise_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  SeparableConv2D: {
    main: {
      filters: {
        type: "int",
        default: 32,
      },
      kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      strides: {
        type: "tuple",
        default: [1, 1],
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
      dilation_rate: {
        type: "tuple",
        default: [1, 1],
      },
      depth_multiplier: {
        type: "int",
        default: 1,
      },
      use_bias: {
        type: "bool",
        default: true,
      },
      depthwise_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      pointwise_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      depthwise_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      pointwise_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      depthwise_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      pointwise_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  DepthwiseConv2D: {
    main: {
      kernel_size: {
        type: "tuple",
        default: [1, 1],
      },
      strides: {
        type: "tuple",
        default: [1, 1],
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
      dilation_rate: {
        type: "tuple",
        default: [1, 1],
      },
      depth_multiplier: {
        type: "int",
        default: 1,
      },
      use_bias: {
        type: "bool",
        default: true,
      },
      depthwise_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      depthwise_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      depthwise_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  Conv1DTranspose: {
    main: {
      filters: {
        type: "int",
        default: 32,
      },
      kernel_size: {
        type: "int",
        default: 3,
      },
      strides: {
        type: "int",
        default: 1,
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {
      output_padding: {
        type: "int",
        default: null,
      },
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
      dilation_rate: {
        type: "int",
        default: 1,
      },
      use_bias: {
        type: "bool",
        default: true,
      },
      kernel_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      kernel_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      kernel_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  Conv2DTranspose: {
    main: {
      filters: {
        type: "int",
        default: 32,
      },
      kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      strides: {
        type: "tuple",
        default: [1, 1],
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {
      output_padding: {
        type: "tuple",
        default: null,
      },
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
      dilation_rate: {
        type: "tuple",
        default: [1, 1],
      },
      use_bias: {
        type: "bool",
        default: true,
      },
      kernel_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      kernel_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      kernel_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  UpSampling1D: {
    main: {
      size: {
        type: "int",
        default: 2,
      },
    },
    extra: {},
  },
  UpSampling2D: {
    main: {
      size: {
        type: "tuple",
        default: [2, 2],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
      interpolation: {
        type: "str",
        default: "nearest",
        list: true,
        available: ["nearest", "bilinear"],
      },
    },
  },
  ZeroPadding2D: {
    main: {
      padding: {
        type: "tuple",
        default: [
          [1, 1],
          [1, 1],
        ],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  MaxPooling1D: {
    main: {
      pool_size: {
        type: "int",
        default: 2,
      },
      strides: {
        type: "int",
        default: null,
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  MaxPooling2D: {
    main: {
      pool_size: {
        type: "tuple",
        default: [2, 2],
      },
      strides: {
        type: "tuple",
        default: null,
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  AveragePooling1D: {
    main: {
      pool_size: {
        type: "int",
        default: 2,
      },
      strides: {
        type: "int",
        default: null,
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  AveragePooling2D: {
    main: {
      pool_size: {
        type: "tuple",
        default: [2, 2],
      },
      strides: {
        type: "tuple",
        default: null,
      },
      padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  Cropping2D: {
    main: {
      cropping: {
        type: "tuple",
        default: [0, 0],
      },
    },
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  Concatenate: {
    main: {
      axis: {
        type: "int",
        default: -1,
      },
    },
    extra: {},
  },
  Add: {
    main: {},
    extra: {},
  },
  Multiply: {
    main: {},
    extra: {},
  },
  Average: {
    main: {},
    extra: {},
  },
  Attention: {
    main: {},
    extra: {
      use_scale: {
        type: "bool",
        default: false,
      },
    },
  },
  Activation: {
    main: {
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {},
  },
  LeakyReLU: {
    main: {
      alpha: {
        type: "float",
        default: 0.3,
      },
    },
    extra: {},
  },
  PReLU: {
    main: {},
    extra: {
      alpha_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      alpha_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      alpha_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      shared_axes: {
        type: "list",
        default: null,
      },
    },
  },
  ReLU: {
    main: {},
    extra: {
      max_value: {
        type: "float",
        default: null,
      },
      negative_slope: {
        type: "float",
        default: 0,
      },
      threshold: {
        type: "float",
        default: 0,
      },
    },
  },
  Softmax: {
    main: {},
    extra: {
      axis: {
        type: "int",
        default: -1,
      },
    },
  },
  ELU: {
    main: {},
    extra: {
      alpha: {
        type: "float",
        default: 1,
      },
    },
  },
  ThresholdedReLU: {
    main: {},
    extra: {
      theta: {
        type: "float",
        default: 1,
      },
    },
  },
  Dropout: {
    main: {
      rate: {
        type: "float",
        default: 0.1,
      },
    },
    extra: {
      noise_shape: {
        type: "tensor",
        default: null,
      },
      seed: {
        type: "int",
        default: null,
      },
    },
  },
  BatchNormalization: {
    main: {},
    extra: {
      axis: {
        type: "int",
        default: -1,
      },
      momentum: {
        type: "float",
        default: 0.99,
      },
      epsilon: {
        type: "float",
        default: 0.001,
      },
      center: {
        type: "bool",
        default: true,
      },
      scale: {
        type: "bool",
        default: true,
      },
      beta_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      gamma_initializer: {
        type: "str",
        default: "ones",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      moving_mean_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      moving_variance_initializer: {
        type: "str",
        default: "ones",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      beta_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      gamma_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      beta_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      gamma_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  InstanceNormalization: {
    main: {},
    extra: {
      axis: {
        type: "int",
        default: -1,
      },
      epsilon: {
        type: "float",
        default: 0.001,
      },
      center: {
        type: "bool",
        default: true,
      },
      scale: {
        type: "bool",
        default: true,
      },
      beta_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      gamma_initializer: {
        type: "str",
        default: "ones",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      beta_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      gamma_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      beta_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      gamma_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
    },
  },
  Normalization: {
    main: {},
    extra: {
      axis: {
        type: "int",
        default: -1,
      },
      mean: {
        type: "float",
        default: null,
      },
      variance: {
        type: "float",
        default: null,
      },
    },
  },
  Embedding: {
    main: {
      input_dim: {
        type: "int",
        default: null,
      },
      output_dim: {
        type: "int",
        default: null,
      },
    },
    extra: {
      embeddings_initializer: {
        type: "str",
        default: "uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      embeddings_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      embeddings_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      mask_zero: {
        type: "bool",
        default: false,
      },
      input_length: {
        type: "int",
        default: null,
      },
    },
  },
  LSTM: {
    main: {
      units: {
        type: "int",
        default: 32,
      },
      return_sequences: {
        type: "bool",
        default: false,
      },
      return_state: {
        type: "bool",
        default: false,
      },
    },
    extra: {
      activation: {
        type: "str",
        default: "tanh",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      recurrent_activation: {
        type: "str",
        default: "sigmoid",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      use_bias: {
        type: "bool",
        default: true,
      },
      kernel_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      recurrent_initializer: {
        type: "str",
        default: "orthogonal",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      unit_forget_bias: {
        type: "bool",
        default: true,
      },
      kernel_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      recurrent_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      kernel_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      recurrent_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      dropout: {
        type: "float",
        default: 0,
      },
      recurrent_dropout: {
        type: "float",
        default: 0,
      },
      go_backwards: {
        type: "bool",
        default: false,
      },
      stateful: {
        type: "bool",
        default: false,
      },
      time_major: {
        type: "bool",
        default: false,
      },
      unroll: {
        type: "bool",
        default: false,
      },
    },
  },
  GRU: {
    main: {
      units: {
        type: "int",
        default: 32,
      },
      return_sequences: {
        type: "bool",
        default: false,
      },
      return_state: {
        type: "bool",
        default: false,
      },
    },
    extra: {
      activation: {
        type: "str",
        default: "tanh",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      recurrent_activation: {
        type: "str",
        default: "sigmoid",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      use_bias: {
        type: "bool",
        default: true,
      },
      kernel_initializer: {
        type: "str",
        default: "glorot_uniform",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      recurrent_initializer: {
        type: "str",
        default: "orthogonal",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      bias_initializer: {
        type: "str",
        default: "zeros",
        list: true,
        available: [
          "random_normal",
          "random_uniform",
          "truncated_normal",
          "zeros",
          "ones",
          "glorot_normal",
          "glorot_uniform",
          "uniform",
          "identity",
          "orthogonal",
          "constant",
          "variance_scaling",
          "lecun_normal",
          "lecun_uniform",
          "variance_scaling",
          "he_normal",
          "he_uniform",
        ],
      },
      kernel_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      recurrent_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      bias_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      activity_regularizer: {
        type: "str",
        default: null,
        list: true,
        available: [null, "l1", "l2", "l1_l2"],
      },
      kernel_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      recurrent_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      bias_constraint: {
        type: "str",
        default: null,
        list: true,
        available: [
          null,
          "max_norm",
          "min_max_norm",
          "non_neg",
          "unit_norm",
          "radial_constraint",
        ],
      },
      dropout: {
        type: "float",
        default: 0,
      },
      recurrent_dropout: {
        type: "float",
        default: 0,
      },
      go_backwards: {
        type: "bool",
        default: false,
      },
      stateful: {
        type: "bool",
        default: false,
      },
      time_major: {
        type: "bool",
        default: false,
      },
      unroll: {
        type: "bool",
        default: false,
      },
      reset_after: {
        type: "bool",
        default: true,
      },
    },
  },
  Flatten: {
    main: {},
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  Reshape: {
    main: {
      target_shape: {
        type: "tuple",
        default: null,
      },
    },
    extra: {},
  },
  GlobalMaxPooling1D: {
    main: {},
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  GlobalMaxPooling2D: {
    main: {},
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  GlobalAveragePooling1D: {
    main: {},
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  GlobalAveragePooling2D: {
    main: {},
    extra: {
      data_format: {
        type: "str",
        default: "channels_last",
        list: true,
        available: ["channels_last", "channels_first"],
      },
    },
  },
  RepeatVector: {
    main: {
      n: {
        type: "int",
        default: 8,
      },
    },
    extra: {},
  },
  Input: {
    main: {},
    extra: {},
  },
  Rescaling: {
    main: {
      scale: {
        type: "float",
        default: 1,
      },
      offset: {
        type: "float",
        default: 0,
      },
    },
    extra: {},
  },
  Resizing: {
    main: {
      height: {
        type: "int",
        default: 224,
      },
      width: {
        type: "int",
        default: 224,
      },
    },
    extra: {
      interpolation: {
        type: "str",
        default: "bilinear",
        list: true,
        available: [
          "bilinear",
          "nearest",
          "bicubic",
          "area",
          "lanczos3",
          "lanczos5",
          "gaussian",
          "mitchellcubic",
        ],
      },
    },
  },
  InceptionV3: {
    main: {
      include_top: {
        type: "bool",
        default: false,
      },
      weights: {
        type: "str",
        default: "imagenet",
        list: true,
        available: [null, "imagenet"],
      },
      output_layer: {
        type: "str",
        default: "last",
        list: true,
        available: [
          "mixed0",
          "mixed1",
          "mixed2",
          "mixed3",
          "mixed4",
          "mixed5",
          "mixed6",
          "mixed7",
          "mixed8",
          "mixed9",
          "last",
        ],
      },
      pooling: {
        type: "str",
        default: null,
        list: true,
        available: [null, "avg", "max"],
      },
      trainable: {
        type: "bool",
        default: false,
      },
    },
    extra: {
      classes: {
        type: "int",
        default: 1000,
      },
      classifier_activation: {
        type: "str",
        default: "softmax",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
  },
  ResNet50: {
    main: {
      include_top: {
        type: "bool",
        default: false,
      },
      weights: {
        type: "str",
        default: "imagenet",
        list: true,
        available: [null, "imagenet"],
      },
      output_layer: {
        type: "str",
        default: "last",
        list: true,
        available: [
          "conv2_block3_out",
          "conv3_block4_out",
          "conv4_block6_out",
          "last",
        ],
      },
      pooling: {
        type: "str",
        default: null,
        list: true,
        available: [null, "avg", "max"],
      },
      trainable: {
        type: "bool",
        default: false,
      },
    },
    extra: {
      classes: {
        type: "int",
        default: 1000,
      },
      classifier_activation: {
        type: "str",
        default: "softmax",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
  },
  VGG16: {
    main: {
      include_top: {
        type: "bool",
        default: false,
      },
      weights: {
        type: "str",
        default: "imagenet",
        list: true,
        available: [null, "imagenet"],
      },
      output_layer: {
        type: "str",
        default: "last",
        list: true,
        available: [
          "block1_conv2",
          "block2_conv2",
          "block3_conv3",
          "block4_conv3",
          "block5_conv3",
          "last",
        ],
      },
      pooling: {
        type: "str",
        default: null,
        list: true,
        available: [null, "avg", "max"],
      },
      trainable: {
        type: "bool",
        default: false,
      },
    },
    extra: {
      classes: {
        type: "int",
        default: 1000,
      },
      classifier_activation: {
        type: "str",
        default: "softmax",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
  },
  Xception: {
    main: {
      include_top: {
        type: "bool",
        default: false,
      },
      weights: {
        type: "str",
        default: "imagenet",
        list: true,
        available: [null, "imagenet"],
      },
      output_layer: {
        type: "str",
        default: "last",
        list: true,
        available: ["last"],
      },
      pooling: {
        type: "str",
        default: null,
        list: true,
        available: [null, "avg", "max"],
      },
      trainable: {
        type: "bool",
        default: false,
      },
    },
    extra: {
      classes: {
        type: "int",
        default: 1000,
      },
      classifier_activation: {
        type: "str",
        default: "softmax",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
  },
  CustomUNETBlock: {
    main: {
      filters: {
        type: "int",
        default: 32,
      },
      activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {},
  },
  Conv2DBNDrop: {
    main: {
      L1_Conv2D_filters: {
        type: "int",
        default: 32,
      },
      L1_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L1_Conv2D_strides: {
        type: "tuple",
        default: [2, 2],
      },
      L1_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L1_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L3_Dropout_rate: {
        type: "float",
        default: 0.2,
      },
    },
    extra: {},
  },
  Conv2DBNLeaky: {
    main: {
      L1_Conv2D_filters: {
        type: "int",
        default: 32,
      },
      L1_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L1_Conv2D_strides: {
        type: "tuple",
        default: [2, 2],
      },
      L1_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L1_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L3_LeakyReLU_alpha: {
        type: "float",
        default: 0.1,
      },
    },
    extra: {},
  },
  CustomResBlock: {
    main: {
      L1_Conv2D_filters: {
        type: "int",
        default: 32,
      },
      L1_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L1_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L1_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L1_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L3_LeakyReLU_alpha: {
        type: "float",
        default: 0.1,
      },
      L4_Conv2D_filters: {
        type: "int",
        default: 32,
      },
      L4_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L4_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L4_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L4_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L6_LeakyReLU_alpha: {
        type: "float",
        default: 0.1,
      },
    },
    extra: {},
  },
  Resnet50Block: {
    main: {
      L1_Conv2D_filters: {
        type: "int",
        default: 64,
      },
      L1_Conv2D_kernel_size: {
        type: "tuple",
        default: [1, 1],
      },
      L1_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L1_Conv2D_padding: {
        type: "str",
        default: "valid",
        list: true,
        available: ["same", "valid"],
      },
      L1_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L3_Activation_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L4_Conv2D_filters: {
        type: "int",
        default: 64,
      },
      L4_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L4_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L4_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L4_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L6_Activation_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L7_Conv2D_filters: {
        type: "int",
        default: 256,
      },
      L7_Conv2D_kernel_size: {
        type: "tuple",
        default: [1, 1],
      },
      L7_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L7_Conv2D_padding: {
        type: "str",
        default: "valid",
        list: true,
        available: ["same", "valid"],
      },
      L7_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L10_Activation_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {},
  },
  PSPBlock: {
    main: {
      L1_Conv2D_filters: {
        type: "int",
        default: 32,
      },
      L1_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L1_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L1_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L1_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L2_MaxPooling2D_pool_size: {
        type: "tuple",
        default: [2, 2],
      },
      L2_MaxPooling2D_strides: {
        type: "tuple",
        default: null,
      },
      L2_MaxPooling2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L3_Conv2D_filters: {
        type: "int",
        default: 64,
      },
      L3_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L3_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L3_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L3_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L4_Conv2DTranspose_filters: {
        type: "int",
        default: 64,
      },
      L4_Conv2DTranspose_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L4_Conv2DTranspose_strides: {
        type: "tuple",
        default: [2, 2],
      },
      L4_Conv2DTranspose_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L4_Conv2DTranspose_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L5_MaxPooling2D_pool_size: {
        type: "tuple",
        default: [4, 4],
      },
      L5_MaxPooling2D_strides: {
        type: "tuple",
        default: null,
      },
      L5_MaxPooling2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L6_Conv2D_filters: {
        type: "int",
        default: 128,
      },
      L6_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L6_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L6_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L6_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L7_Conv2DTranspose_filters: {
        type: "int",
        default: 128,
      },
      L7_Conv2DTranspose_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L7_Conv2DTranspose_strides: {
        type: "tuple",
        default: [4, 4],
      },
      L7_Conv2DTranspose_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L7_Conv2DTranspose_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L8_MaxPooling2D_pool_size: {
        type: "tuple",
        default: [8, 8],
      },
      L8_MaxPooling2D_strides: {
        type: "tuple",
        default: null,
      },
      L8_MaxPooling2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L9_Conv2D_filters: {
        type: "int",
        default: 256,
      },
      L9_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L9_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L9_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L9_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L10_Conv2DTranspose_filters: {
        type: "int",
        default: 256,
      },
      L10_Conv2DTranspose_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L10_Conv2DTranspose_strides: {
        type: "tuple",
        default: [8, 8],
      },
      L10_Conv2DTranspose_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L10_Conv2DTranspose_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L11_Concatenate_axis: {
        type: "int",
        default: -1,
      },
      L12_Conv2D_filters: {
        type: "int",
        default: 32,
      },
      L12_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L12_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L12_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L12_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {},
  },
  UNETBlock: {
    main: {
      L1_Conv2D_filters: {
        type: "int",
        default: 64,
      },
      L1_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L1_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L1_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L1_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L3_MaxPooling2D_pool_size: {
        type: "tuple",
        default: [2, 2],
      },
      L3_MaxPooling2D_strides: {
        type: "tuple",
        default: [2, 2],
      },
      L3_MaxPooling2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L4_Conv2D_filters: {
        type: "int",
        default: 128,
      },
      L4_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L4_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L4_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L4_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L6_MaxPooling2D_pool_size: {
        type: "tuple",
        default: [2, 2],
      },
      L6_MaxPooling2D_strides: {
        type: "tuple",
        default: [2, 2],
      },
      L6_MaxPooling2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L7_Conv2D_filters: {
        type: "int",
        default: 256,
      },
      L7_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L7_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L7_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L7_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L9_Conv2D_filters: {
        type: "int",
        default: 256,
      },
      L9_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L9_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L9_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L9_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L11_Conv2DTranspose_filters: {
        type: "int",
        default: 128,
      },
      L11_Conv2DTranspose_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L11_Conv2DTranspose_strides: {
        type: "tuple",
        default: [2, 2],
      },
      L11_Conv2DTranspose_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L11_Conv2DTranspose_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L13_Concatenate_axis: {
        type: "int",
        default: -1,
      },
      L14_Conv2D_filters: {
        type: "int",
        default: 128,
      },
      L14_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L14_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L14_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L14_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L16_Conv2DTranspose_filters: {
        type: "int",
        default: 64,
      },
      L16_Conv2DTranspose_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L16_Conv2DTranspose_strides: {
        type: "tuple",
        default: [2, 2],
      },
      L16_Conv2DTranspose_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L16_Conv2DTranspose_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L18_Concatenate_axis: {
        type: "int",
        default: -1,
      },
      L19_Conv2D_filters: {
        type: "int",
        default: 64,
      },
      L19_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L19_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L19_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L19_Conv2D_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
    },
    extra: {},
  },
  XceptionBlock: {
    main: {
      L1_SeparableConv2D_filters: {
        type: "int",
        default: 128,
      },
      L1_SeparableConv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L1_SeparableConv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L1_SeparableConv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L1_SeparableConv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L3_Activation_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L4_SeparableConv2D_filters: {
        type: "int",
        default: 128,
      },
      L4_SeparableConv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L4_SeparableConv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L4_SeparableConv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L4_SeparableConv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L6_Conv2D_filters: {
        type: "int",
        default: 128,
      },
      L6_Conv2D_kernel_size: {
        type: "tuple",
        default: [1, 1],
      },
      L6_Conv2D_strides: {
        type: "tuple",
        default: [2, 2],
      },
      L6_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L6_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L7_MaxPooling2D_pool_size: {
        type: "tuple",
        default: [3, 3],
      },
      L7_MaxPooling2D_strides: {
        type: "tuple",
        default: [2, 2],
      },
      L7_MaxPooling2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
    },
    extra: {},
  },
  InceptionV3block: {
    main: {
      L1_Conv2D_filters: {
        type: "int",
        default: 64,
      },
      L1_Conv2D_kernel_size: {
        type: "tuple",
        default: [1, 1],
      },
      L1_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L1_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L1_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L3_Activation_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L4_Conv2D_filters: {
        type: "int",
        default: 96,
      },
      L4_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L4_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L4_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L4_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L6_Activation_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L7_Conv2D_filters: {
        type: "int",
        default: 96,
      },
      L7_Conv2D_kernel_size: {
        type: "tuple",
        default: [3, 3],
      },
      L7_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L7_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L7_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L9_Conv2D_filters: {
        type: "int",
        default: 48,
      },
      L9_Conv2D_kernel_size: {
        type: "tuple",
        default: [1, 1],
      },
      L9_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L9_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L9_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L11_Activation_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L12_Conv2D_filters: {
        type: "int",
        default: 64,
      },
      L12_Conv2D_kernel_size: {
        type: "tuple",
        default: [5, 5],
      },
      L12_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L12_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L12_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L14_Activation_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L15_AveragePooling2D_pool_size: {
        type: "tuple",
        default: [3, 3],
      },
      L15_AveragePooling2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L15_AveragePooling2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L16_Conv2D_filters: {
        type: "int",
        default: 32,
      },
      L16_Conv2D_kernel_size: {
        type: "tuple",
        default: [1, 1],
      },
      L16_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L16_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L16_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L18_Activation_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L19_Conv2D_filters: {
        type: "int",
        default: 64,
      },
      L19_Conv2D_kernel_size: {
        type: "tuple",
        default: [1, 1],
      },
      L19_Conv2D_strides: {
        type: "tuple",
        default: [1, 1],
      },
      L19_Conv2D_padding: {
        type: "str",
        default: "same",
        list: true,
        available: ["same", "valid"],
      },
      L19_Conv2D_activation: {
        type: "str",
        default: "linear",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L21_Activation_activation: {
        type: "str",
        default: "relu",
        list: true,
        available: [
          null,
          "relu",
          "sigmoid",
          "softmax",
          "softplus",
          "softsign",
          "tanh",
          "linear",
          "selu",
          "elu",
          "exponential",
          "hard_sigmoid",
          "gelu",
          "swish",
        ],
      },
      L22_Concatenate_axis: {
        type: "int",
        default: -1,
      },
    },
    extra: {},
  },
};

const list = Object.keys(layers).map((key, i ) => {
  return { name: key, value: key, id: ++i };
});

export { list, layers };
