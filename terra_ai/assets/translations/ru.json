{
    "field required": "Не указано обязательное поле",
    "extra fields not permitted": "Не допускаются дополнительные поля",
    "none is not an allowed value": "Получено пустое значение",
    "value is not none": "Полученное значение должен быть пустым",
    "value is not None": "Полученное значение должен быть пустым",
    "value could not be parsed to a boolean": "Невозможно получить логическое значение поля",
    "byte type expected": "Ожидался байтовый тип",
    "value is not a valid dict": "Полученное значение не соответствует типу Dict",
    "value is not a valid email address": "Полученное значение не является почтовым адресом",
    "invalid or missing URL scheme": "Полученное значение не соответствует корректной схеме URL",
    "URL scheme not permitted": "Подобная схема URL недопустима",
    "userinfo required in URL but missing": "Отсутствуют необходимые пользовательские данные в URL",
    "URL host invalid": "URL-хост не валиден",
    "URL host invalid, top level domain required": "URL-хост не валиден, требуется домен верхнего уровня",
    "URL port invalid, port cannot exceed 65535": "URL-порт не валиден, порт не может быть выше 65535",
    "URL invalid, extra characters found after valid URL: {}": "URL не валиден и содержит недопустимые символы: {}",
    "{} is not a valid Enum instance": "{} не является валидным объектом Enum",
    "{} is not a valid IntEnum instance": "{} не является валидным объектом IntEnum",
    "value is not a valid integer": "Полученное значение не является числом",
    "value is not a valid float": "Полученное значение не является вещественным числом",
    "value is not a valid path": "Полученное значение не является путем",
    "file or directory at path \"{}\" does not exist": "Файл или директория по пути \"{}\" отсутствует",
    "path \"{}\" does not point to a file": "Путь \"{}\" не указывает на файл",
    "path \"{}\" does not point to a directory": "Путь \"{}\" не указывает на директорию",
    "ensure this value contains valid import path or valid callable: {}": "Убедитесь, что это значение содержит допустимый путь импорта или является вызываемым: {}",
    "value is not a valid sequence": "Полученное значение не является последовательностью",
    "value is not a valid list": "Полученное значение не является списком",
    "value is not a valid set": "Полученное значение не является множеством",
    "value is not a valid frozenset": "Полученное значение не принадлежит типу Frozenset",
    "value is not a valid tuple": "Полученное значение не является кортежем",
    "wrong tuple length {}": "Неверная длина кортежа {}",
    "ensure this value has at least {} items": "Значение должен состоять как минимум из {} элементов",
    "ensure this value has at most {} items": "Значение может состоять максимум из {} элементов",
    "ensure this value has at least {} characters": "Значение должен состоять как минимум из {} символов",
    "ensure this value has at most {} characters": "Значение может состоять максимум из {} символов",
    "str type expected": "Ожидалась строка",
    "string does not match regex \"{}\"": "Строка не соответствует регулярному выражению \"{}\"",
    "ensure this value is greater than {}": "Значение должно быть выше чем {}",
    "ensure this value is greater than or equal to {}": "Значение должно быть выше или равно {}",
    "ensure this value is less than {}": "Значение должно быть ниже чем {}",
    "ensure this value is less than or equal to {}": "Значение должно быть ниже или равно {}",
    "ensure this value is a multiple of {}": "Значение должно быть кратно {}",
    "value is not a valid decimal": "Полученное значение не является десятичным числом",
    "ensure that there are no more than {} digits in total": "Максимальное количество цифр в десятичной дроби - это {}",
    "ensure that there are no more than {} decimal places": "Максимальное количество цифр после запятой {}",
    "ensure that there are no more than {} digits before the decimal point": "Максимальное количество цифр до запятой {}",
    "invalid datetime format": "Неверный формат Datetime",
    "invalid date format": "Неверный формат даты",
    "invalid time format": "Неверный формат времени",
    "invalid duration format": "Неверный формат длительности",
    "value is not a valid hashable": "Полученное значение не является хэшируемым",
    "value is not a valid uuid": "Неверный формат UUID",
    "uuid version {} expected": "Полученное значение не соответствует UUID версии {} ",
    "instance of {} expected": "Ожидался экземпляр класса {}",
    "a class is expected": "Ожидался класс",
    "subclass of {} expected": "Ожидался дочерний класс класса {}",
    "Invalid JSON": "Невалидный JSON",
    "JSON object must be str, bytes or bytearray": "JSON должен принадлежать типу str, bytes или bytearray",
    "Invalid regular expression": "Невалидное регулярное выражение",
    "instance of {}, tuple or dict expected": "Экземпляр класса {}, ожидается список или словарь",
    "{} is not callable": "{} не является вызываемым объектом",
    "value is not a valid IPv4 or IPv6 address": "Полученное значение не соответствует формату адреса IPv4 или IPv6",
    "value is not a valid IPv4 or IPv6 interface": "Полученное значение не соответствует формату интерфейса IPv4 или IPv6",
    "value is not a valid IPv4 or IPv6 network": "Полученное значение не соответствует формату сети IPv4 или IPv6",
    "value is not a valid IPv4 address": "Полученное значение не соответствует формату адреса IPv4",
    "value is not a valid IPv6 address": "Полученное значение не соответствует формату адреса IPv6",
    "value is not a valid IPv4 network": "Полученное значение не соответствует формату сети IPv4",
    "value is not a valid IPv6 network": "Полученное значение не соответствует формату сети IPv6",
    "value is not a valid IPv4 interface": "Полученное значение не соответствует формату интерфейса IPv4",
    "value is not a valid IPv6 interface": "Полученное значение не соответствует формату интерфейса IPv6",
    "value is not a valid color: {}": "Получено невалидное значение цвета: {}",
    "value is not a valid boolean": "Не удалось привести к логическому типу полученное значение",
    "card number is not all digits": "В номере карты обнаружены не только цифры",
    "card number is not luhn valid": "Номер карты не прошел валидацию по алгоритму Луна",
    "Length for a {}": "Length for a {}",
    "could not parse value and unit from byte string": "Невалидная длина байт-строки",
    "could not interpret byte unit: {}": "Не удалось интерпретировать байт-единицу: {}",
    "value is not a valid enumeration member; permitted: {}": "Передаваемое значение должно быть экземляром одного из классов: {}"
}