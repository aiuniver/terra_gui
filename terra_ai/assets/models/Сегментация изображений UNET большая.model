{"alias": "segmentatsija_izobrazhenij_unet_bolshaja", "name": "\u0421\u0435\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 UNET \u0431\u043e\u043b\u044c\u0448\u0430\u044f", "image": "", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [3]}, "shape": {"input": [[176, 320, 3]], "output": [[176, 320, 3]]}, "task": "Image", "num_classes": 1, "position": [-315, -214], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "\u0412\u044b\u0445\u043e\u0434 2", "type": "Conv2D", "group": "output", "bind": {"up": [55], "down": []}, "shape": {"input": [[176, 320, 64]], "output": [[176, 320, 2]]}, "task": "Segmentation", "num_classes": 2, "position": [-283, 2755], "parameters": {"main": {"filters": 2, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "softmax"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Entry block", "type": "Conv2D", "group": "middle", "bind": {"up": [1], "down": [4]}, "shape": {"input": [[176, 320, 3]], "output": [[176, 320, 64]]}, "task": null, "num_classes": null, "position": [-315, -135], "parameters": {"main": {"filters": 64, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 2", "type": "BatchNormalization", "group": "middle", "bind": {"up": [3], "down": [5]}, "shape": {"input": [[176, 320, 64]], "output": [[176, 320, 64]]}, "task": null, "num_classes": null, "position": [-315, -72], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 5, "name": "Layer 3", "type": "Conv2D", "group": "middle", "bind": {"up": [4], "down": [6]}, "shape": {"input": [[176, 320, 64]], "output": [[176, 320, 64]]}, "task": null, "num_classes": null, "position": [-315, -9], "parameters": {"main": {"filters": 64, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 6, "name": "Layer 4", "type": "BatchNormalization", "group": "middle", "bind": {"up": [5], "down": [7, 51]}, "shape": {"input": [[176, 320, 64]], "output": [[176, 320, 64]]}, "task": null, "num_classes": null, "position": [-316, 53], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 7, "name": "1st DownSampling Block", "type": "MaxPool2D", "group": "middle", "bind": {"up": [6], "down": [8]}, "shape": {"input": [[176, 320, 64]], "output": [[88, 160, 64]]}, "task": null, "num_classes": null, "position": [-62, 68], "parameters": {"main": {"pool_size": [2, 2], "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 8, "name": "Layer 6", "type": "Conv2D", "group": "middle", "bind": {"up": [7], "down": [9]}, "shape": {"input": [[88, 160, 64]], "output": [[88, 160, 128]]}, "task": null, "num_classes": null, "position": [-62, 130], "parameters": {"main": {"filters": 128, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 9, "name": "Layer 7", "type": "BatchNormalization", "group": "middle", "bind": {"up": [8], "down": [10]}, "shape": {"input": [[88, 160, 128]], "output": [[88, 160, 128]]}, "task": null, "num_classes": null, "position": [-62, 190], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 10, "name": "Layer 8", "type": "Conv2D", "group": "middle", "bind": {"up": [9], "down": [11]}, "shape": {"input": [[88, 160, 128]], "output": [[88, 160, 128]]}, "task": null, "num_classes": null, "position": [-62, 251], "parameters": {"main": {"filters": 128, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 11, "name": "Layer 9", "type": "BatchNormalization", "group": "middle", "bind": {"up": [10], "down": [16, 44]}, "shape": {"input": [[88, 160, 128]], "output": [[88, 160, 128]]}, "task": null, "num_classes": null, "position": [-62, 307], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 12, "name": "Layer 11", "type": "Conv2D", "group": "middle", "bind": {"up": [16], "down": [13]}, "shape": {"input": [[44, 80, 128]], "output": [[44, 80, 256]]}, "task": null, "num_classes": null, "position": [183, 391], "parameters": {"main": {"filters": 256, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 13, "name": "Layer 12", "type": "BatchNormalization", "group": "middle", "bind": {"up": [12], "down": [14]}, "shape": {"input": [[44, 80, 256]], "output": [[44, 80, 256]]}, "task": null, "num_classes": null, "position": [184, 450], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 14, "name": "Layer 13", "type": "Conv2D", "group": "middle", "bind": {"up": [13], "down": [15]}, "shape": {"input": [[44, 80, 256]], "output": [[44, 80, 256]]}, "task": null, "num_classes": null, "position": [184, 509], "parameters": {"main": {"filters": 256, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 15, "name": "Layer 14", "type": "BatchNormalization", "group": "middle", "bind": {"up": [14], "down": [17, 37]}, "shape": {"input": [[44, 80, 256]], "output": [[44, 80, 256]]}, "task": null, "num_classes": null, "position": [183, 571], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 16, "name": "2nd DownSampling Block", "type": "MaxPool2D", "group": "middle", "bind": {"up": [11], "down": [12]}, "shape": {"input": [[88, 160, 128]], "output": [[44, 80, 128]]}, "task": null, "num_classes": null, "position": [182, 331], "parameters": {"main": {"pool_size": [2, 2], "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 17, "name": "3rd DownSampling Block", "type": "MaxPool2D", "group": "middle", "bind": {"up": [15], "down": [18]}, "shape": {"input": [[44, 80, 256]], "output": [[22, 40, 256]]}, "task": null, "num_classes": null, "position": [427, 591], "parameters": {"main": {"pool_size": [2, 2], "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 18, "name": "Layer 16", "type": "Conv2D", "group": "middle", "bind": {"up": [17], "down": [19]}, "shape": {"input": [[22, 40, 256]], "output": [[22, 40, 512]]}, "task": null, "num_classes": null, "position": [429, 651], "parameters": {"main": {"filters": 512, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 19, "name": "Layer 17", "type": "BatchNormalization", "group": "middle", "bind": {"up": [18], "down": [21]}, "shape": {"input": [[22, 40, 512]], "output": [[22, 40, 512]]}, "task": null, "num_classes": null, "position": [428, 711], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 21, "name": "Layer 18", "type": "Conv2D", "group": "middle", "bind": {"up": [19], "down": [22]}, "shape": {"input": [[22, 40, 512]], "output": [[22, 40, 512]]}, "task": null, "num_classes": null, "position": [428, 767], "parameters": {"main": {"filters": 512, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 22, "name": "Layer 19", "type": "BatchNormalization", "group": "middle", "bind": {"up": [21], "down": [23, 30]}, "shape": {"input": [[22, 40, 512]], "output": [[22, 40, 512]]}, "task": null, "num_classes": null, "position": [427, 824], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 23, "name": "4th DownSampling Block", "type": "MaxPool2D", "group": "middle", "bind": {"up": [22], "down": [24]}, "shape": {"input": [[22, 40, 512]], "output": [[11, 20, 512]]}, "task": null, "num_classes": null, "position": [673, 846], "parameters": {"main": {"pool_size": [2, 2], "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 24, "name": "Layer 21", "type": "Conv2D", "group": "middle", "bind": {"up": [23], "down": [25]}, "shape": {"input": [[11, 20, 512]], "output": [[11, 20, 1024]]}, "task": null, "num_classes": null, "position": [674, 907], "parameters": {"main": {"filters": 1024, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 25, "name": "Layer 22", "type": "BatchNormalization", "group": "middle", "bind": {"up": [24], "down": [26]}, "shape": {"input": [[11, 20, 1024]], "output": [[11, 20, 1024]]}, "task": null, "num_classes": null, "position": [674, 968], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 26, "name": "Layer 23", "type": "Conv2D", "group": "middle", "bind": {"up": [25], "down": [27]}, "shape": {"input": [[11, 20, 1024]], "output": [[11, 20, 1024]]}, "task": null, "num_classes": null, "position": [678, 1029], "parameters": {"main": {"filters": 1024, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 27, "name": "Layer 24", "type": "BatchNormalization", "group": "middle", "bind": {"up": [26], "down": [28]}, "shape": {"input": [[11, 20, 1024]], "output": [[11, 20, 1024]]}, "task": null, "num_classes": null, "position": [678, 1086], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 28, "name": "1st UpSampling Block", "type": "Conv2DTranspose", "group": "middle", "bind": {"up": [27], "down": [29]}, "shape": {"input": [[11, 20, 1024]], "output": [[22, 40, 512]]}, "task": null, "num_classes": null, "position": [421, 1112], "parameters": {"main": {"filters": 512, "kernel_size": [2, 2], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"output_padding": null, "data_format": "channels_last", "dilation_rate": [1, 1], "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 29, "name": "Layer 26", "type": "BatchNormalization", "group": "middle", "bind": {"up": [28], "down": [30]}, "shape": {"input": [[22, 40, 512]], "output": [[22, 40, 512]]}, "task": null, "num_classes": null, "position": [422, 1171], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 30, "name": "Layer 27", "type": "Concatenate", "group": "middle", "bind": {"up": [22, 29], "down": [31]}, "shape": {"input": [[22, 40, 512], [22, 40, 512]], "output": [[22, 40, 1024]]}, "task": null, "num_classes": null, "position": [274, 1231], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 31, "name": "Layer 28", "type": "Conv2D", "group": "middle", "bind": {"up": [30], "down": [32]}, "shape": {"input": [[22, 40, 1024]], "output": [[22, 40, 512]]}, "task": null, "num_classes": null, "position": [423, 1291], "parameters": {"main": {"filters": 512, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 32, "name": "Layer 29", "type": "BatchNormalization", "group": "middle", "bind": {"up": [31], "down": [33]}, "shape": {"input": [[22, 40, 512]], "output": [[22, 40, 512]]}, "task": null, "num_classes": null, "position": [422, 1346], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 33, "name": "Layer 30", "type": "Conv2D", "group": "middle", "bind": {"up": [32], "down": [34]}, "shape": {"input": [[22, 40, 512]], "output": [[22, 40, 512]]}, "task": null, "num_classes": null, "position": [422, 1401], "parameters": {"main": {"filters": 512, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 34, "name": "Layer 31", "type": "BatchNormalization", "group": "middle", "bind": {"up": [33], "down": [35]}, "shape": {"input": [[22, 40, 512]], "output": [[22, 40, 512]]}, "task": null, "num_classes": null, "position": [423, 1458], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 35, "name": "2nd UpSampling Block", "type": "Conv2DTranspose", "group": "middle", "bind": {"up": [34], "down": [36]}, "shape": {"input": [[22, 40, 512]], "output": [[44, 80, 256]]}, "task": null, "num_classes": null, "position": [196, 1492], "parameters": {"main": {"filters": 256, "kernel_size": [2, 2], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"output_padding": null, "data_format": "channels_last", "dilation_rate": [1, 1], "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 36, "name": "Layer 33", "type": "BatchNormalization", "group": "middle", "bind": {"up": [35], "down": [37]}, "shape": {"input": [[44, 80, 256]], "output": [[44, 80, 256]]}, "task": null, "num_classes": null, "position": [194, 1541], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 37, "name": "Layer 34", "type": "Concatenate", "group": "middle", "bind": {"up": [15, 36], "down": [38]}, "shape": {"input": [[44, 80, 256], [44, 80, 256]], "output": [[44, 80, 512]]}, "task": null, "num_classes": null, "position": [45, 1600], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 38, "name": "Layer 35", "type": "Conv2D", "group": "middle", "bind": {"up": [37], "down": [39]}, "shape": {"input": [[44, 80, 512]], "output": [[44, 80, 256]]}, "task": null, "num_classes": null, "position": [197, 1661], "parameters": {"main": {"filters": 256, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 39, "name": "Layer 36", "type": "BatchNormalization", "group": "middle", "bind": {"up": [38], "down": [40]}, "shape": {"input": [[44, 80, 256]], "output": [[44, 80, 256]]}, "task": null, "num_classes": null, "position": [199, 1723], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 40, "name": "Layer 37", "type": "Conv2D", "group": "middle", "bind": {"up": [39], "down": [41]}, "shape": {"input": [[44, 80, 256]], "output": [[44, 80, 256]]}, "task": null, "num_classes": null, "position": [198, 1777], "parameters": {"main": {"filters": 256, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 41, "name": "Layer 38", "type": "BatchNormalization", "group": "middle", "bind": {"up": [40], "down": [42]}, "shape": {"input": [[44, 80, 256]], "output": [[44, 80, 256]]}, "task": null, "num_classes": null, "position": [198, 1835], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 42, "name": "3rd UpSampling Block", "type": "Conv2DTranspose", "group": "middle", "bind": {"up": [41], "down": [43]}, "shape": {"input": [[44, 80, 256]], "output": [[88, 160, 128]]}, "task": null, "num_classes": null, "position": [-35, 1885], "parameters": {"main": {"filters": 128, "kernel_size": [2, 2], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"output_padding": null, "data_format": "channels_last", "dilation_rate": [1, 1], "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 43, "name": "Layer 40", "type": "BatchNormalization", "group": "middle", "bind": {"up": [42], "down": [44]}, "shape": {"input": [[88, 160, 128]], "output": [[88, 160, 128]]}, "task": null, "num_classes": null, "position": [-35, 1947], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 44, "name": "Layer 41", "type": "Concatenate", "group": "middle", "bind": {"up": [11, 43], "down": [45]}, "shape": {"input": [[88, 160, 128], [88, 160, 128]], "output": [[88, 160, 256]]}, "task": null, "num_classes": null, "position": [-174, 2010], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 45, "name": "Layer 42", "type": "Conv2D", "group": "middle", "bind": {"up": [44], "down": [46]}, "shape": {"input": [[88, 160, 256]], "output": [[88, 160, 128]]}, "task": null, "num_classes": null, "position": [-35, 2076], "parameters": {"main": {"filters": 128, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 46, "name": "Layer 43", "type": "BatchNormalization", "group": "middle", "bind": {"up": [45], "down": [47]}, "shape": {"input": [[88, 160, 128]], "output": [[88, 160, 128]]}, "task": null, "num_classes": null, "position": [-37, 2131], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 47, "name": "Layer 44", "type": "Conv2D", "group": "middle", "bind": {"up": [46], "down": [48]}, "shape": {"input": [[88, 160, 128]], "output": [[88, 160, 128]]}, "task": null, "num_classes": null, "position": [-36, 2186], "parameters": {"main": {"filters": 128, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 48, "name": "Layer 45", "type": "BatchNormalization", "group": "middle", "bind": {"up": [47], "down": [49]}, "shape": {"input": [[88, 160, 128]], "output": [[88, 160, 128]]}, "task": null, "num_classes": null, "position": [-36, 2244], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 49, "name": "4th UpSampling Block", "type": "Conv2DTranspose", "group": "middle", "bind": {"up": [48], "down": [50]}, "shape": {"input": [[88, 160, 128]], "output": [[176, 320, 64]]}, "task": null, "num_classes": null, "position": [-288, 2297], "parameters": {"main": {"filters": 64, "kernel_size": [2, 2], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"output_padding": null, "data_format": "channels_last", "dilation_rate": [1, 1], "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 50, "name": "Layer 47", "type": "BatchNormalization", "group": "middle", "bind": {"up": [49], "down": [51]}, "shape": {"input": [[176, 320, 64]], "output": [[176, 320, 64]]}, "task": null, "num_classes": null, "position": [-288, 2355], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 51, "name": "Layer 48", "type": "Concatenate", "group": "middle", "bind": {"up": [6, 50], "down": [52]}, "shape": {"input": [[176, 320, 64], [176, 320, 64]], "output": [[176, 320, 128]]}, "task": null, "num_classes": null, "position": [-418, 2432], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 52, "name": "Layer 49", "type": "Conv2D", "group": "middle", "bind": {"up": [51], "down": [53]}, "shape": {"input": [[176, 320, 128]], "output": [[176, 320, 64]]}, "task": null, "num_classes": null, "position": [-282, 2500], "parameters": {"main": {"filters": 64, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 53, "name": "Layer 50", "type": "BatchNormalization", "group": "middle", "bind": {"up": [52], "down": [54]}, "shape": {"input": [[176, 320, 64]], "output": [[176, 320, 64]]}, "task": null, "num_classes": null, "position": [-282, 2556], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 54, "name": "Layer 51", "type": "Conv2D", "group": "middle", "bind": {"up": [53], "down": [55]}, "shape": {"input": [[176, 320, 64]], "output": [[176, 320, 64]]}, "task": null, "num_classes": null, "position": [-282, 2613], "parameters": {"main": {"filters": 64, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 55, "name": "Layer 52", "type": "BatchNormalization", "group": "middle", "bind": {"up": [54], "down": [2]}, "shape": {"input": [[176, 320, 64]], "output": [[176, 320, 64]]}, "task": null, "num_classes": null, "position": [-283, 2667], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.layers import MaxPool2D\nfrom tensorflow.keras.layers import Conv2DTranspose\nfrom tensorflow.keras.layers import Concatenate\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(176, 320, 3), name='1')\nx_3 = Conv2D(filters=64, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_3')(input_1)\nx_4 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_4')(x_3)\nx_5 = Conv2D(filters=64, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_5')(x_4)\nx_6 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_6')(x_5)\nx_7 = MaxPool2D(pool_size=[2, 2], strides=None, padding='same', data_format='channels_last', name='MaxPool2D_7')(x_6)\nx_8 = Conv2D(filters=128, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_8')(x_7)\nx_9 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_9')(x_8)\nx_10 = Conv2D(filters=128, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_10')(x_9)\nx_11 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_11')(x_10)\nx_16 = MaxPool2D(pool_size=[2, 2], strides=None, padding='same', data_format='channels_last', name='MaxPool2D_16')(x_11)\nx_12 = Conv2D(filters=256, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_12')(x_16)\nx_13 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_13')(x_12)\nx_14 = Conv2D(filters=256, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_14')(x_13)\nx_15 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_15')(x_14)\nx_17 = MaxPool2D(pool_size=[2, 2], strides=None, padding='same', data_format='channels_last', name='MaxPool2D_17')(x_15)\nx_18 = Conv2D(filters=512, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_18')(x_17)\nx_19 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_19')(x_18)\nx_21 = Conv2D(filters=512, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_21')(x_19)\nx_22 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_22')(x_21)\nx_23 = MaxPool2D(pool_size=[2, 2], strides=None, padding='same', data_format='channels_last', name='MaxPool2D_23')(x_22)\nx_24 = Conv2D(filters=1024, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_24')(x_23)\nx_25 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_25')(x_24)\nx_26 = Conv2D(filters=1024, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_26')(x_25)\nx_27 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_27')(x_26)\nx_28 = Conv2DTranspose(filters=512, kernel_size=[2, 2], strides=[2, 2], padding='same', activation='relu', output_padding=None, data_format='channels_last', dilation_rate=[1, 1], use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2DTranspose_28')(x_27)\nx_29 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_29')(x_28)\nx_30 = Concatenate(axis=-1, name='Concatenate_30')([x_22, x_29])\nx_31 = Conv2D(filters=512, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_31')(x_30)\nx_32 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_32')(x_31)\nx_33 = Conv2D(filters=512, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_33')(x_32)\nx_34 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_34')(x_33)\nx_35 = Conv2DTranspose(filters=256, kernel_size=[2, 2], strides=[2, 2], padding='same', activation='relu', output_padding=None, data_format='channels_last', dilation_rate=[1, 1], use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2DTranspose_35')(x_34)\nx_36 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_36')(x_35)\nx_37 = Concatenate(axis=-1, name='Concatenate_37')([x_15, x_36])\nx_38 = Conv2D(filters=256, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_38')(x_37)\nx_39 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_39')(x_38)\nx_40 = Conv2D(filters=256, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_40')(x_39)\nx_41 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_41')(x_40)\nx_42 = Conv2DTranspose(filters=128, kernel_size=[2, 2], strides=[2, 2], padding='same', activation='relu', output_padding=None, data_format='channels_last', dilation_rate=[1, 1], use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2DTranspose_42')(x_41)\nx_43 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_43')(x_42)\nx_44 = Concatenate(axis=-1, name='Concatenate_44')([x_11, x_43])\nx_45 = Conv2D(filters=128, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_45')(x_44)\nx_46 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_46')(x_45)\nx_47 = Conv2D(filters=128, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_47')(x_46)\nx_48 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_48')(x_47)\nx_49 = Conv2DTranspose(filters=64, kernel_size=[2, 2], strides=[2, 2], padding='same', activation='relu', output_padding=None, data_format='channels_last', dilation_rate=[1, 1], use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2DTranspose_49')(x_48)\nx_50 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_50')(x_49)\nx_51 = Concatenate(axis=-1, name='Concatenate_51')([x_6, x_50])\nx_52 = Conv2D(filters=64, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_52')(x_51)\nx_53 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_53')(x_52)\nx_54 = Conv2D(filters=64, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_54')(x_53)\nx_55 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_55')(x_54)\noutput_2 = Conv2D(filters=2, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='softmax', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_55)\n\nmodel = Model([input_1], [output_2])", "references": [], "input_shape": "[(176, 320, 3)]"}