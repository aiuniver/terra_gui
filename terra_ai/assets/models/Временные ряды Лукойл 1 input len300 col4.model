{"alias": "vremennye_rjady_1_input_len300_col4", "name": "\u0412\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u0440\u044f\u0434\u044b 1 input len300 col4", "image": "", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [6]}, "shape": {"input": [[300, 4]], "output": [[300, 4]]}, "task": "Dataframe", "num_classes": null, "position": [-85, -275], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "\u0412\u044b\u0445\u043e\u0434 2", "type": "Conv1D", "group": "output", "bind": {"up": [3], "down": []}, "shape": {"input": [[14, 32]], "output": [[5, 2]]}, "task": "Timeseries", "num_classes": 2, "position": [-81, 127], "parameters": {"main": {"filters": 2, "kernel_size": 5, "strides": 2, "padding": "valid", "activation": "sigmoid"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Layer 3", "type": "Conv1D", "group": "middle", "bind": {"up": [4], "down": [2]}, "shape": {"input": [[33, 32]], "output": [[14, 32]]}, "task": null, "num_classes": null, "position": [-82, 40], "parameters": {"main": {"filters": 32, "kernel_size": 7, "strides": 2, "padding": "valid", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 4", "type": "Conv1D", "group": "middle", "bind": {"up": [5], "down": [3]}, "shape": {"input": [[71, 32]], "output": [[33, 32]]}, "task": null, "num_classes": null, "position": [-83, -46], "parameters": {"main": {"filters": 32, "kernel_size": 7, "strides": 2, "padding": "valid", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 5, "name": "Layer 5", "type": "Conv1D", "group": "middle", "bind": {"up": [6], "down": [4]}, "shape": {"input": [[147, 32]], "output": [[71, 32]]}, "task": null, "num_classes": null, "position": [-82, -120], "parameters": {"main": {"filters": 32, "kernel_size": 7, "strides": 2, "padding": "valid", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 6, "name": "Layer 6", "type": "Conv1D", "group": "middle", "bind": {"up": [1], "down": [5]}, "shape": {"input": [[300, 4]], "output": [[147, 32]]}, "task": null, "num_classes": null, "position": [-83, -211], "parameters": {"main": {"filters": 32, "kernel_size": 7, "strides": 2, "padding": "valid", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Conv1D\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(300, 4), name='1')\nx_6 = Conv1D(filters=32, kernel_size=7, strides=2, padding='valid', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_6')(input_1)\nx_5 = Conv1D(filters=32, kernel_size=7, strides=2, padding='valid', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_5')(x_6)\nx_4 = Conv1D(filters=32, kernel_size=7, strides=2, padding='valid', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_4')(x_5)\nx_3 = Conv1D(filters=32, kernel_size=7, strides=2, padding='valid', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_3')(x_4)\noutput_2 = Conv1D(filters=2, kernel_size=5, strides=2, padding='valid', activation='sigmoid', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_3)\n\nmodel = Model([input_1], [output_2])", "references": [], "input_shape": "[(300, 4)]"}