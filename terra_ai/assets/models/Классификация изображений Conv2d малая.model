{"alias": "klassifikatsija_izobrazhenija_conv2d_malaja", "name": "\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f Conv2d \u043c\u0430\u043b\u0430\u044f", "image": "", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [3]}, "shape": {"input": [[108, 192, 3]], "output": [[108, 192, 3]]}, "task": null, "num_classes": null, "position": [0, -200], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "\u0412\u044b\u0445\u043e\u0434  2", "type": "Dense", "group": "output", "bind": {"up": [6], "down": []}, "shape": {"input": [[128]], "output": [[3]]}, "task": null, "num_classes": null, "position": [0, 151], "parameters": {"main": {"units": 3, "activation": "softmax"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Layer 3", "type": "Conv2D", "group": "middle", "bind": {"up": [1], "down": [4]}, "shape": {"input": [[108, 192, 3]], "output": [[108, 192, 32]]}, "task": null, "num_classes": null, "position": [0, -130], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 4", "type": "Conv2D", "group": "middle", "bind": {"up": [3], "down": [5]}, "shape": {"input": [[108, 192, 32]], "output": [[108, 192, 16]]}, "task": null, "num_classes": null, "position": [0, -60], "parameters": {"main": {"filters": 16, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 5, "name": "Layer 5", "type": "Flatten", "group": "middle", "bind": {"up": [4], "down": [6]}, "shape": {"input": [[108, 192, 16]], "output": [[331776]]}, "task": null, "num_classes": null, "position": [0, 10], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 6, "name": "Layer 6", "type": "Dense", "group": "middle", "bind": {"up": [5], "down": [2]}, "shape": {"input": [[331776]], "output": [[128]]}, "task": null, "num_classes": null, "position": [0, 79], "parameters": {"main": {"units": 128, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(108, 192, 3), name='1')\nx_3 = Conv2D(filters=32, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_3')(input_1)\nx_4 = Conv2D(filters=16, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_4')(x_3)\nx_5 = Flatten(data_format='channels_last', name='Flatten_5')(x_4)\nx_6 = Dense(units=128, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_6')(x_5)\noutput_2 = Dense(units=3, activation='softmax', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_6)\n\nmodel = Model([input_1], [output_2])", "references": [], "input_shape": "[(108, 192, 3)]"}