{"alias": "klassifikatsija_audio_umnyj_dom_conv_bolshaja", "name": "\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0410\u0443\u0434\u0438\u043e \u0423\u043c\u043d\u044b\u0439 \u0414\u043e\u043c Conv \u0411\u043e\u043b\u044c\u0448\u0430\u044f", "image": "", "layers": [{"id": 1, "name": "MFCC", "type": "Input", "group": "input", "bind": {"up": [null], "down": [19]}, "shape": {"input": [[20, 44]], "output": [[20, 44]]}, "task": "Audio", "num_classes": 4, "position": [-191, -228], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "Chroma STFT", "type": "Input", "group": "input", "bind": {"up": [null], "down": [20]}, "shape": {"input": [[12, 44]], "output": [[12, 44]]}, "task": "Audio", "num_classes": 4, "position": [39, -227], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 3, "name": "RMS", "type": "Input", "group": "input", "bind": {"up": [null], "down": [16]}, "shape": {"input": [[44]], "output": [[44]]}, "task": "Audio", "num_classes": 4, "position": [264, -227], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 4, "name": "\u041c\u0435\u0442\u043a\u0438 \u043a\u043b\u0430\u0441\u0441\u043e\u0432", "type": "Dense", "group": "output", "bind": {"up": [26], "down": []}, "shape": {"input": [[512]], "output": [[4]]}, "task": "Classification", "num_classes": 4, "position": [43, 691], "parameters": {"main": {"units": 4, "activation": "softmax"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 7, "name": "Layer 6", "type": "Conv1D", "group": "middle", "bind": {"up": [16], "down": [25]}, "shape": {"input": [[44, 1]], "output": [[44, 64]]}, "task": null, "num_classes": null, "position": [264, -63], "parameters": {"main": {"filters": 64, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 8, "name": "Layer 4", "type": "Conv2D", "group": "middle", "bind": {"up": [19], "down": [10]}, "shape": {"input": [[20, 44, 1]], "output": [[20, 44, 64]]}, "task": null, "num_classes": null, "position": [-191, -65], "parameters": {"main": {"filters": 64, "kernel_size": [5, 5], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 9, "name": "Layer 5", "type": "Conv2D", "group": "middle", "bind": {"up": [20], "down": [11]}, "shape": {"input": [[12, 44, 1]], "output": [[12, 44, 64]]}, "task": null, "num_classes": null, "position": [40, -65], "parameters": {"main": {"filters": 64, "kernel_size": [5, 5], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 10, "name": "Layer 7", "type": "Conv2D", "group": "middle", "bind": {"up": [8], "down": [21]}, "shape": {"input": [[20, 44, 64]], "output": [[20, 44, 64]]}, "task": null, "num_classes": null, "position": [-191, 12], "parameters": {"main": {"filters": 64, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 11, "name": "Layer 8", "type": "Conv2D", "group": "middle", "bind": {"up": [9], "down": [22]}, "shape": {"input": [[12, 44, 64]], "output": [[12, 44, 64]]}, "task": null, "num_classes": null, "position": [40, 12], "parameters": {"main": {"filters": 64, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 13, "name": "Layer 15", "type": "Concatenate", "group": "middle", "bind": {"up": [23, 24], "down": [14]}, "shape": {"input": [[20, 44, 64], [12, 44, 64]], "output": [[32, 44, 64]]}, "task": null, "num_classes": null, "position": [-78, 265], "parameters": {"main": {}, "extra": {"axis": 1}}, "reference": null}, {"id": 14, "name": "Layer 16", "type": "GlobalMaxPool2D", "group": "middle", "bind": {"up": [13], "down": [17]}, "shape": {"input": [[32, 44, 64]], "output": [[64]]}, "task": null, "num_classes": null, "position": [-77, 340], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 15, "name": "Layer 12", "type": "GlobalMaxPool1D", "group": "middle", "bind": {"up": [25], "down": [17]}, "shape": {"input": [[44, 64]], "output": [[64]]}, "task": null, "num_classes": null, "position": [264, 93], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 16, "name": "Layer 3", "type": "Reshape", "group": "middle", "bind": {"up": [3], "down": [7]}, "shape": {"input": [[44]], "output": [[44, 1]]}, "task": null, "num_classes": null, "position": [264, -143], "parameters": {"main": {"target_shape": [44, 1]}, "extra": {}}, "reference": null}, {"id": 17, "name": "Layer 17", "type": "Concatenate", "group": "middle", "bind": {"up": [14, 15], "down": [18]}, "shape": {"input": [[64], [64]], "output": [[128]]}, "task": null, "num_classes": null, "position": [43, 449], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 18, "name": "Layer 18", "type": "Dense", "group": "middle", "bind": {"up": [17], "down": [26]}, "shape": {"input": [[128]], "output": [[512]]}, "task": null, "num_classes": null, "position": [43, 527], "parameters": {"main": {"units": 512, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 19, "name": "Layer 1", "type": "Reshape", "group": "middle", "bind": {"up": [1], "down": [8]}, "shape": {"input": [[20, 44]], "output": [[20, 44, 1]]}, "task": null, "num_classes": null, "position": [-191, -146], "parameters": {"main": {"target_shape": [20, 44, 1]}, "extra": {}}, "reference": null}, {"id": 20, "name": "Layer 2", "type": "Reshape", "group": "middle", "bind": {"up": [2], "down": [9]}, "shape": {"input": [[12, 44]], "output": [[12, 44, 1]]}, "task": null, "num_classes": null, "position": [40, -145], "parameters": {"main": {"target_shape": [12, 44, 1]}, "extra": {}}, "reference": null}, {"id": 21, "name": "Layer 10", "type": "BatchNormalization", "group": "middle", "bind": {"up": [10], "down": [24]}, "shape": {"input": [[20, 44, 64]], "output": [[20, 44, 64]]}, "task": null, "num_classes": null, "position": [-191, 88], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 22, "name": "Layer 11", "type": "BatchNormalization", "group": "middle", "bind": {"up": [11], "down": [23]}, "shape": {"input": [[12, 44, 64]], "output": [[12, 44, 64]]}, "task": null, "num_classes": null, "position": [40, 89], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 23, "name": "Layer 14", "type": "Dropout", "group": "middle", "bind": {"up": [22], "down": [13]}, "shape": {"input": [[12, 44, 64]], "output": [[12, 44, 64]]}, "task": null, "num_classes": null, "position": [40, 167], "parameters": {"main": {"rate": 0.2}, "extra": {"noise_shape": null, "seed": null}}, "reference": null}, {"id": 24, "name": "Layer 13", "type": "Dropout", "group": "middle", "bind": {"up": [21], "down": [13]}, "shape": {"input": [[20, 44, 64]], "output": [[20, 44, 64]]}, "task": null, "num_classes": null, "position": [-190, 166], "parameters": {"main": {"rate": 0.2}, "extra": {"noise_shape": null, "seed": null}}, "reference": null}, {"id": 25, "name": "Layer 9", "type": "Conv1D", "group": "middle", "bind": {"up": [7], "down": [15]}, "shape": {"input": [[44, 64]], "output": [[44, 64]]}, "task": null, "num_classes": null, "position": [264, 14], "parameters": {"main": {"filters": 64, "kernel_size": 3, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 26, "name": "Layer 19", "type": "Dense", "group": "middle", "bind": {"up": [18], "down": [4]}, "shape": {"input": [[512]], "output": [[512]]}, "task": null, "num_classes": null, "position": [43, 610], "parameters": {"main": {"units": 512, "activation": "sigmoid"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Reshape\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import Conv1D\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.layers import GlobalMaxPool1D\nfrom tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.layers import Concatenate\nfrom tensorflow.keras.layers import GlobalMaxPool2D\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(20, 44), name='1')\ninput_2 = Input(shape=(12, 44), name='2')\ninput_3 = Input(shape=(44,), name='3')\nx_19 = Reshape(target_shape=[20, 44, 1], name='Reshape_19')(input_1)\nx_20 = Reshape(target_shape=[12, 44, 1], name='Reshape_20')(input_2)\nx_16 = Reshape(target_shape=[44, 1], name='Reshape_16')(input_3)\nx_8 = Conv2D(filters=64, kernel_size=[5, 5], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_8')(x_19)\nx_9 = Conv2D(filters=64, kernel_size=[5, 5], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_9')(x_20)\nx_7 = Conv1D(filters=64, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_7')(x_16)\nx_10 = Conv2D(filters=64, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_10')(x_8)\nx_11 = Conv2D(filters=64, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_11')(x_9)\nx_25 = Conv1D(filters=64, kernel_size=3, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_25')(x_7)\nx_21 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_21')(x_10)\nx_22 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_22')(x_11)\nx_15 = GlobalMaxPool1D(data_format='channels_last', name='GlobalMaxPool1D_15')(x_25)\nx_24 = Dropout(rate=0.2, noise_shape=None, seed=None, name='Dropout_24')(x_21)\nx_23 = Dropout(rate=0.2, noise_shape=None, seed=None, name='Dropout_23')(x_22)\nx_13 = Concatenate(axis=1, name='Concatenate_13')([x_23, x_24])\nx_14 = GlobalMaxPool2D(data_format='channels_last', name='GlobalMaxPool2D_14')(x_13)\nx_17 = Concatenate(axis=-1, name='Concatenate_17')([x_14, x_15])\nx_18 = Dense(units=512, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_18')(x_17)\nx_26 = Dense(units=512, activation='sigmoid', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_26')(x_18)\noutput_4 = Dense(units=4, activation='softmax', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='4')(x_26)\n\nmodel = Model([input_1, input_2, input_3], [output_4])", "references": [], "input_shape": "[(20, 44), (12, 44), (44,)]"}