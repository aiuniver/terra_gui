{"alias": "klassifikatsija_audio_zhanry_muzyki_conv1d_bolshaja", "name": "\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0410\u0443\u0434\u0438\u043e \u0416\u0430\u043d\u0440\u044b \u041c\u0443\u0437\u044b\u043a\u0438 Conv1d \u0411\u043e\u043b\u044c\u0448\u0430\u044f", "image": "", "layers": [{"id": 1, "name": "MFCC", "type": "Input", "group": "input", "bind": {"up": [null], "down": [8]}, "shape": {"input": [[20, 1292]], "output": [[20, 1292]]}, "task": "Audio", "num_classes": 10, "position": [-191, -146], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "Chroma STFT", "type": "Input", "group": "input", "bind": {"up": [null], "down": [9]}, "shape": {"input": [[12, 1292]], "output": [[12, 1292]]}, "task": "Audio", "num_classes": 10, "position": [39, -147], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 3, "name": "RMS", "type": "Input", "group": "input", "bind": {"up": [null], "down": [27]}, "shape": {"input": [[1292]], "output": [[1292]]}, "task": "Audio", "num_classes": 10, "position": [264, -149], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 4, "name": "\u041c\u0435\u0442\u043a\u0438 \u043a\u043b\u0430\u0441\u0441\u043e\u0432", "type": "Dense", "group": "output", "bind": {"up": [26], "down": []}, "shape": {"input": [[512]], "output": [[10]]}, "task": "Classification", "num_classes": 10, "position": [43, 691], "parameters": {"main": {"units": 10, "activation": "softmax"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 8, "name": "Layer 1", "type": "Conv1D", "group": "middle", "bind": {"up": [1], "down": [10]}, "shape": {"input": [[20, 1292]], "output": [[20, 32]]}, "task": null, "num_classes": null, "position": [-191, -65], "parameters": {"main": {"filters": 32, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 9, "name": "Layer 2", "type": "Conv1D", "group": "middle", "bind": {"up": [2], "down": [11]}, "shape": {"input": [[12, 1292]], "output": [[12, 32]]}, "task": null, "num_classes": null, "position": [40, -65], "parameters": {"main": {"filters": 32, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 10, "name": "Layer 4", "type": "Conv1D", "group": "middle", "bind": {"up": [8], "down": [21]}, "shape": {"input": [[20, 32]], "output": [[20, 32]]}, "task": null, "num_classes": null, "position": [-191, 12], "parameters": {"main": {"filters": 32, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 11, "name": "Layer 5", "type": "Conv1D", "group": "middle", "bind": {"up": [9], "down": [22]}, "shape": {"input": [[12, 32]], "output": [[12, 32]]}, "task": null, "num_classes": null, "position": [40, 12], "parameters": {"main": {"filters": 32, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 13, "name": "Layer 11", "type": "Concatenate", "group": "middle", "bind": {"up": [23, 24], "down": [14]}, "shape": {"input": [[20, 32], [12, 32]], "output": [[32, 32]]}, "task": null, "num_classes": null, "position": [-78, 265], "parameters": {"main": {}, "extra": {"axis": 1}}, "reference": null}, {"id": 14, "name": "Layer 12", "type": "GlobalMaxPool1D", "group": "middle", "bind": {"up": [13], "down": [17]}, "shape": {"input": [[32, 32]], "output": [[32]]}, "task": null, "num_classes": null, "position": [-77, 340], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 17, "name": "Layer 13", "type": "Concatenate", "group": "middle", "bind": {"up": [14, 28], "down": [18]}, "shape": {"input": [[512], [32]], "output": [[544]]}, "task": null, "num_classes": null, "position": [43, 449], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 18, "name": "Layer 14", "type": "Dense", "group": "middle", "bind": {"up": [17], "down": [26]}, "shape": {"input": [[544]], "output": [[512]]}, "task": null, "num_classes": null, "position": [43, 527], "parameters": {"main": {"units": 512, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 21, "name": "Layer 7", "type": "BatchNormalization", "group": "middle", "bind": {"up": [10], "down": [24]}, "shape": {"input": [[20, 32]], "output": [[20, 32]]}, "task": null, "num_classes": null, "position": [-191, 88], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 22, "name": "Layer 8", "type": "BatchNormalization", "group": "middle", "bind": {"up": [11], "down": [23]}, "shape": {"input": [[12, 32]], "output": [[12, 32]]}, "task": null, "num_classes": null, "position": [40, 89], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 23, "name": "Layer 10", "type": "Dropout", "group": "middle", "bind": {"up": [22], "down": [13]}, "shape": {"input": [[12, 32]], "output": [[12, 32]]}, "task": null, "num_classes": null, "position": [40, 167], "parameters": {"main": {"rate": 0.2}, "extra": {"noise_shape": null, "seed": null}}, "reference": null}, {"id": 24, "name": "Layer 9", "type": "Dropout", "group": "middle", "bind": {"up": [21], "down": [13]}, "shape": {"input": [[20, 32]], "output": [[20, 32]]}, "task": null, "num_classes": null, "position": [-190, 166], "parameters": {"main": {"rate": 0.2}, "extra": {"noise_shape": null, "seed": null}}, "reference": null}, {"id": 26, "name": "Layer 15", "type": "Dense", "group": "middle", "bind": {"up": [18], "down": [4]}, "shape": {"input": [[512]], "output": [[512]]}, "task": null, "num_classes": null, "position": [42, 610], "parameters": {"main": {"units": 512, "activation": "sigmoid"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 27, "name": "Layer 3", "type": "Dense", "group": "middle", "bind": {"up": [3], "down": [28]}, "shape": {"input": [[1292]], "output": [[512]]}, "task": null, "num_classes": null, "position": [265, -65], "parameters": {"main": {"units": 512, "activation": "linear"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 28, "name": "Layer 6", "type": "Dense", "group": "middle", "bind": {"up": [27], "down": [17]}, "shape": {"input": [[512]], "output": [[512]]}, "task": null, "num_classes": null, "position": [265, 13], "parameters": {"main": {"units": 512, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Conv1D\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.layers import Concatenate\nfrom tensorflow.keras.layers import GlobalMaxPool1D\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(20, 1292), name='1')\ninput_2 = Input(shape=(12, 1292), name='2')\ninput_3 = Input(shape=(1292,), name='3')\nx_8 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_8')(input_1)\nx_9 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_9')(input_2)\nx_27 = Dense(units=512, activation='linear', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_27')(input_3)\nx_10 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_10')(x_8)\nx_11 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_11')(x_9)\nx_28 = Dense(units=512, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_28')(x_27)\nx_21 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_21')(x_10)\nx_22 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_22')(x_11)\nx_24 = Dropout(rate=0.2, noise_shape=None, seed=None, name='Dropout_24')(x_21)\nx_23 = Dropout(rate=0.2, noise_shape=None, seed=None, name='Dropout_23')(x_22)\nx_13 = Concatenate(axis=1, name='Concatenate_13')([x_23, x_24])\nx_14 = GlobalMaxPool1D(data_format='channels_last', name='GlobalMaxPool1D_14')(x_13)\nx_17 = Concatenate(axis=-1, name='Concatenate_17')([x_14, x_28])\nx_18 = Dense(units=512, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_18')(x_17)\nx_26 = Dense(units=512, activation='sigmoid', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_26')(x_18)\noutput_4 = Dense(units=10, activation='softmax', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='4')(x_26)\n\nmodel = Model([input_1, input_2, input_3], [output_4])", "references": [], "input_shape": "[(20, 1292), (12, 1292), (1292,)]"}