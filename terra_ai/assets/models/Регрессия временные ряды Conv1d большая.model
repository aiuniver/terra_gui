{"alias": "tseries_trejding_heavy", "name": "tSeries. \u0422\u0440\u0435\u0439\u0434\u0438\u043d\u0433 Heavy", "image": "", "layers": [{"id": 1, "name": "Input 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [6]}, "shape": {"input": [[4, 30]], "output": [[4, 30]]}, "task": "Dataframe", "num_classes": null, "position": [-89, -197], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "Output 1", "type": "Dense", "group": "output", "bind": {"up": [9], "down": []}, "shape": {"input": [[1000]], "output": [[1]]}, "task": "Timeseries", "num_classes": 3, "position": [-89, 425], "parameters": {"main": {"units": 1, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Layer 2", "type": "Conv1D", "group": "middle", "bind": {"up": [6], "down": [7]}, "shape": {"input": [[4, 1000]], "output": [[4, 256]]}, "task": null, "num_classes": null, "position": [-89, -47], "parameters": {"main": {"filters": 256, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "tanh"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 4", "type": "Flatten", "group": "middle", "bind": {"up": [7], "down": [5]}, "shape": {"input": [[4, 128]], "output": [[512]]}, "task": null, "num_classes": null, "position": [-89, 106], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 5, "name": "Layer 5", "type": "Dense", "group": "middle", "bind": {"up": [4], "down": [8]}, "shape": {"input": [[512]], "output": [[1000]]}, "task": null, "num_classes": null, "position": [-89, 185], "parameters": {"main": {"units": 1000, "activation": "linear"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 6, "name": "Layer 1", "type": "Dense", "group": "middle", "bind": {"up": [1], "down": [3]}, "shape": {"input": [[4, 30]], "output": [[4, 1000]]}, "task": null, "num_classes": null, "position": [-89, -121], "parameters": {"main": {"units": 1000, "activation": "elu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 7, "name": "Layer 3", "type": "Conv1D", "group": "middle", "bind": {"up": [3], "down": [4]}, "shape": {"input": [[4, 256]], "output": [[4, 128]]}, "task": null, "num_classes": null, "position": [-89, 29], "parameters": {"main": {"filters": 128, "kernel_size": 4, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 8, "name": "Layer 6", "type": "Dense", "group": "middle", "bind": {"up": [5], "down": [9]}, "shape": {"input": [[1000]], "output": [[1000]]}, "task": null, "num_classes": null, "position": [-89, 263], "parameters": {"main": {"units": 1000, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 9, "name": "Layer 7", "type": "Dropout", "group": "middle", "bind": {"up": [8], "down": [2]}, "shape": {"input": [[1000]], "output": [[1000]]}, "task": null, "num_classes": null, "position": [-88, 342], "parameters": {"main": {"rate": 0.1}, "extra": {"noise_shape": null, "seed": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Conv1D\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(4, 30), name='1')\nx_6 = Dense(units=1000, activation='elu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_6')(input_1)\nx_3 = Conv1D(filters=256, kernel_size=5, strides=1, padding='same', activation='tanh', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_3')(x_6)\nx_7 = Conv1D(filters=128, kernel_size=4, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_7')(x_3)\nx_4 = Flatten(data_format='channels_last', name='Flatten_4')(x_7)\nx_5 = Dense(units=1000, activation='linear', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_5')(x_4)\nx_8 = Dense(units=1000, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_8')(x_5)\nx_9 = Dropout(rate=0.1, noise_shape=None, seed=None, name='Dropout_9')(x_8)\noutput_2 = Dense(units=1, activation='elu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_9)\n\nmodel = Model([input_1], [output_2])", "references": [], "input_shape": "[(4, 30)]"}