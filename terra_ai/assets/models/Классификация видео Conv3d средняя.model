{"alias": "klassifikatsija_video_conv3d_srednjaja", "name": "\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0432\u0438\u0434\u0435\u043e Conv3d \u0441\u0440\u0435\u0434\u043d\u044f\u044f", "image": "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", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [3]}, "shape": {"input": [[70, 80, 110, 3]], "output": [[70, 80, 110, 3]]}, "task": null, "num_classes": null, "position": [2, -194], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "\u0412\u044b\u0445\u043e\u0434  1", "type": "Dense", "group": "output", "bind": {"up": [6], "down": []}, "shape": {"input": [[512]], "output": [[3]]}, "task": null, "num_classes": null, "position": [0, 289], "parameters": {"main": {"units": 3, "activation": "softmax"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Layer 2", "type": "Conv3D", "group": "middle", "bind": {"up": [1], "down": [4]}, "shape": {"input": [[70, 80, 110, 3]], "output": [[70, 80, 110, 32]]}, "task": null, "num_classes": null, "position": [2, -121], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3, 3], "strides": [1, 1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 3", "type": "MaxPool3D", "group": "middle", "bind": {"up": [3], "down": [7]}, "shape": {"input": [[70, 80, 110, 32]], "output": [[35, 40, 55, 32]]}, "task": null, "num_classes": null, "position": [2, -57], "parameters": {"main": {"pool_size": [2, 2, 2], "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 5, "name": "Layer 6", "type": "Flatten", "group": "middle", "bind": {"up": [8], "down": [6]}, "shape": {"input": [[18, 20, 28, 32]], "output": [[322560]]}, "task": null, "num_classes": null, "position": [1, 145], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 6, "name": "Layer 7", "type": "Dense", "group": "middle", "bind": {"up": [5], "down": [2]}, "shape": {"input": [[322560]], "output": [[512]]}, "task": null, "num_classes": null, "position": [1, 215], "parameters": {"main": {"units": 512, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 7, "name": "Layer 4", "type": "Conv3D", "group": "middle", "bind": {"up": [4], "down": [8]}, "shape": {"input": [[35, 40, 55, 32]], "output": [[35, 40, 55, 32]]}, "task": null, "num_classes": null, "position": [1, 10], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3, 3], "strides": [1, 1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 8, "name": "Layer 5", "type": "MaxPool3D", "group": "middle", "bind": {"up": [7], "down": [5]}, "shape": {"input": [[35, 40, 55, 32]], "output": [[18, 20, 28, 32]]}, "task": null, "num_classes": null, "position": [1, 77], "parameters": {"main": {"pool_size": [2, 2, 2], "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Conv3D\nfrom tensorflow.keras.layers import MaxPool3D\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(70, 80, 110, 3), name='1')\nx_3 = Conv3D(filters=32, kernel_size=[3, 3, 3], strides=[1, 1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv3D_3')(input_1)\nx_4 = MaxPool3D(pool_size=[2, 2, 2], strides=None, padding='same', data_format='channels_last', name='MaxPool3D_4')(x_3)\nx_7 = Conv3D(filters=32, kernel_size=[3, 3, 3], strides=[1, 1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv3D_7')(x_4)\nx_8 = MaxPool3D(pool_size=[2, 2, 2], strides=None, padding='same', data_format='channels_last', name='MaxPool3D_8')(x_7)\nx_5 = Flatten(data_format='channels_last', name='Flatten_5')(x_8)\nx_6 = Dense(units=512, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_6')(x_5)\noutput_2 = Dense(units=3, activation='softmax', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_6)\n\nmodel = Model([input_1], [output_2])", "references": [], "input_shape": "[(70, 80, 110, 3)]"}