{"alias": "tseries_trejding_light", "name": "tSeries. \u0422\u0440\u0435\u0439\u0434\u0438\u043d\u0433 Light", "image": "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", "layers": [{"id": 1, "name": "Input 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [3]}, "shape": {"input": [[4, 30]], "output": [[4, 30]]}, "task": "Dataframe", "num_classes": null, "position": [-90, -192], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "Output 1", "type": "Dense", "group": "output", "bind": {"up": [5], "down": []}, "shape": {"input": [[128]], "output": [[1]]}, "task": "Timeseries", "num_classes": 3, "position": [-89, 107], "parameters": {"main": {"units": 1, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Layer 1", "type": "Conv1D", "group": "middle", "bind": {"up": [1], "down": [4]}, "shape": {"input": [[4, 30]], "output": [[4, 32]]}, "task": null, "num_classes": null, "position": [-90, -117], "parameters": {"main": {"filters": 32, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 2", "type": "Flatten", "group": "middle", "bind": {"up": [3], "down": [5]}, "shape": {"input": [[4, 32]], "output": [[128]]}, "task": null, "num_classes": null, "position": [-90, -42], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 5, "name": "Layer 3", "type": "Dense", "group": "middle", "bind": {"up": [4], "down": [2]}, "shape": {"input": [[128]], "output": [[128]]}, "task": null, "num_classes": null, "position": [-90, 32], "parameters": {"main": {"units": 128, "activation": "linear"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Conv1D\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(4, 30), name='1')\nx_3 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_3')(input_1)\nx_4 = Flatten(data_format='channels_last', name='Flatten_4')(x_3)\nx_5 = Dense(units=128, activation='linear', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_5')(x_4)\noutput_2 = Dense(units=1, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_5)\n\nmodel = Model([input_1], [output_2])", "references": [], "input_shape": "[(4, 30)]"}