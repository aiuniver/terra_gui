{"alias": "klassifikatsija_audio_1_vhod_conv2d_srednjaja", "name": "\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0430\u0443\u0434\u0438\u043e 1 \u0432\u0445\u043e\u0434 conv2d  \u0441\u0440\u0435\u0434\u043d\u044f\u044f", "image": "", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [11]}, "shape": {"input": [[12, 44]], "output": [[12, 44]]}, "task": null, "num_classes": null, "position": [-2, -265], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "\u0412\u044b\u0445\u043e\u0434  2", "type": "Dense", "group": "output", "bind": {"up": [14], "down": []}, "shape": {"input": [[500]], "output": [[3]]}, "task": null, "num_classes": null, "position": [2, 304], "parameters": {"main": {"units": 3, "activation": "softmax"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Layer 2", "type": "Conv2D", "group": "middle", "bind": {"up": [11], "down": [4]}, "shape": {"input": [[12, 44, 1]], "output": [[12, 44, 32]]}, "task": null, "num_classes": null, "position": [-2, -126], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 3", "type": "Conv2D", "group": "middle", "bind": {"up": [3], "down": [13]}, "shape": {"input": [[12, 44, 32]], "output": [[12, 44, 32]]}, "task": null, "num_classes": null, "position": [-1, -58], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 5, "name": "Layer 6", "type": "Flatten", "group": "middle", "bind": {"up": [12], "down": [14]}, "shape": {"input": [[12, 44, 32]], "output": [[16896]]}, "task": null, "num_classes": null, "position": [1, 161], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 11, "name": "Layer 1", "type": "Reshape", "group": "middle", "bind": {"up": [1], "down": [3]}, "shape": {"input": [[12, 44]], "output": [[12, 44, 1]]}, "task": null, "num_classes": null, "position": [-2, -194], "parameters": {"main": {"target_shape": [12, 44, 1]}, "extra": {}}, "reference": null}, {"id": 12, "name": "Layer 5", "type": "Conv2D", "group": "middle", "bind": {"up": [13], "down": [5]}, "shape": {"input": [[12, 44, 32]], "output": [[12, 44, 32]]}, "task": null, "num_classes": null, "position": [0, 89], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 13, "name": "Layer 4", "type": "BatchNormalization", "group": "middle", "bind": {"up": [4], "down": [12]}, "shape": {"input": [[12, 44, 32]], "output": [[12, 44, 32]]}, "task": null, "num_classes": null, "position": [-1, 15], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 14, "name": "Layer 7", "type": "Dense", "group": "middle", "bind": {"up": [5], "down": [2]}, "shape": {"input": [[16896]], "output": [[500]]}, "task": null, "num_classes": null, "position": [1, 233], "parameters": {"main": {"units": 500, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Reshape\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(12, 44), name='1')\nx_11 = Reshape(target_shape=[12, 44, 1], name='Reshape_11')(input_1)\nx_3 = Conv2D(filters=32, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_3')(x_11)\nx_4 = Conv2D(filters=32, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_4')(x_3)\nx_13 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_13')(x_4)\nx_12 = Conv2D(filters=32, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_12')(x_13)\nx_5 = Flatten(data_format='channels_last', name='Flatten_5')(x_12)\nx_14 = Dense(units=500, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_14')(x_5)\noutput_2 = Dense(units=3, activation='softmax', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_14)\n\nmodel = Model([input_1], [output_2])", "references": [], "input_shape": "[(12, 44)]"}