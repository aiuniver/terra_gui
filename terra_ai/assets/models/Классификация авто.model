{"alias": "klassifikatsija_avto", "name": "\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0430\u0432\u0442\u043e", "image": "", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [3]}, "shape": {"input": [[128, 176, 3]], "output": [[128, 176, 3]]}, "task": null, "num_classes": null, "position": [0, -200], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "\u0412\u044b\u0445\u043e\u0434  2", "type": "Dense", "group": "output", "bind": {"up": [5], "down": []}, "shape": {"input": [[360448]], "output": [[32]]}, "task": null, "num_classes": null, "position": [0, 80], "parameters": {"main": {"units": 32, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Layer 3", "type": "Conv2D", "group": "middle", "bind": {"up": [1], "down": [4]}, "shape": {"input": [[128, 176, 3]], "output": [[128, 176, 16]]}, "task": null, "num_classes": null, "position": [0, -130], "parameters": {"main": {"filters": 16, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 4", "type": "Conv2D", "group": "middle", "bind": {"up": [3], "down": [5]}, "shape": {"input": [[128, 176, 16]], "output": [[128, 176, 16]]}, "task": null, "num_classes": null, "position": [0, -60], "parameters": {"main": {"filters": 16, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 5, "name": "Layer 5", "type": "Flatten", "group": "middle", "bind": {"up": [4], "down": [2]}, "shape": {"input": [[128, 176, 16]], "output": [[360448]]}, "task": null, "num_classes": null, "position": [0, 10], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}], "references": [], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(128, 176, 3), name='1')\nx_3 = Conv2D(filters=16, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_3')(input_1)\nx_4 = Conv2D(filters=16, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_4')(x_3)\nx_5 = Flatten(data_format='channels_last', name='Flatten_5')(x_4)\noutput_2 = Dense(units=32, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_5)\n\nmodel = Model([input_1], [output_2])"}