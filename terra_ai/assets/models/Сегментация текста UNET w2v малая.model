{"alias": "segmentatsija_teksta_unet_w2v_malaja", "name": "\u0421\u0435\u0433\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0442\u0435\u043a\u0441\u0442\u0430 UNET w2v \u043c\u0430\u043b\u0430\u044f", "image": "", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [3]}, "shape": {"input": [[100, 200]], "output": [[100, 200]]}, "task": "Image", "num_classes": 1, "position": [-315, -213], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "\u0412\u044b\u0445\u043e\u0434 2", "type": "Conv1D", "group": "output", "bind": {"up": [55], "down": []}, "shape": {"input": [[100, 32]], "output": [[100, 6]]}, "task": "Segmentation", "num_classes": 2, "position": [-282, 1671], "parameters": {"main": {"filters": 6, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "sigmoid"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Entry block", "type": "Conv1D", "group": "middle", "bind": {"up": [1], "down": [4]}, "shape": {"input": [[100, 200]], "output": [[100, 16]]}, "task": null, "num_classes": null, "position": [-315, -135], "parameters": {"main": {"filters": 16, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 2", "type": "BatchNormalization", "group": "middle", "bind": {"up": [3], "down": [5]}, "shape": {"input": [[100, 16]], "output": [[100, 16]]}, "task": null, "num_classes": null, "position": [-315, -72], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 5, "name": "Layer 3", "type": "Conv1D", "group": "middle", "bind": {"up": [4], "down": [6]}, "shape": {"input": [[100, 16]], "output": [[100, 16]]}, "task": null, "num_classes": null, "position": [-315, -9], "parameters": {"main": {"filters": 16, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 6, "name": "Layer 4", "type": "BatchNormalization", "group": "middle", "bind": {"up": [5], "down": [7, 51]}, "shape": {"input": [[100, 16]], "output": [[100, 16]]}, "task": null, "num_classes": null, "position": [-316, 53], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 7, "name": "1st DownSampling Block", "type": "MaxPool1D", "group": "middle", "bind": {"up": [6], "down": [8]}, "shape": {"input": [[100, 16]], "output": [[50, 16]]}, "task": null, "num_classes": null, "position": [-62, 68], "parameters": {"main": {"pool_size": 2, "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 8, "name": "Layer 6", "type": "Conv1D", "group": "middle", "bind": {"up": [7], "down": [9]}, "shape": {"input": [[50, 16]], "output": [[50, 64]]}, "task": null, "num_classes": null, "position": [-62, 130], "parameters": {"main": {"filters": 64, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 9, "name": "Layer 7", "type": "BatchNormalization", "group": "middle", "bind": {"up": [8], "down": [10]}, "shape": {"input": [[50, 64]], "output": [[50, 64]]}, "task": null, "num_classes": null, "position": [-62, 190], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 10, "name": "Layer 8", "type": "Conv1D", "group": "middle", "bind": {"up": [9], "down": [11]}, "shape": {"input": [[50, 64]], "output": [[50, 64]]}, "task": null, "num_classes": null, "position": [-62, 251], "parameters": {"main": {"filters": 64, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 11, "name": "Layer 9", "type": "BatchNormalization", "group": "middle", "bind": {"up": [10], "down": [16, 44]}, "shape": {"input": [[50, 64]], "output": [[50, 64]]}, "task": null, "num_classes": null, "position": [-62, 307], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 12, "name": "Layer 11", "type": "Conv1D", "group": "middle", "bind": {"up": [16], "down": [13]}, "shape": {"input": [[25, 64]], "output": [[25, 128]]}, "task": null, "num_classes": null, "position": [183, 391], "parameters": {"main": {"filters": 128, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 13, "name": "Layer 12", "type": "BatchNormalization", "group": "middle", "bind": {"up": [12], "down": [14]}, "shape": {"input": [[25, 128]], "output": [[25, 128]]}, "task": null, "num_classes": null, "position": [184, 450], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 14, "name": "Layer 13", "type": "Conv1D", "group": "middle", "bind": {"up": [13], "down": [15]}, "shape": {"input": [[25, 128]], "output": [[25, 128]]}, "task": null, "num_classes": null, "position": [184, 509], "parameters": {"main": {"filters": 128, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 15, "name": "Layer 14", "type": "BatchNormalization", "group": "middle", "bind": {"up": [14], "down": [42]}, "shape": {"input": [[25, 128]], "output": [[25, 128]]}, "task": null, "num_classes": null, "position": [183, 571], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 16, "name": "2nd DownSampling Block", "type": "MaxPool1D", "group": "middle", "bind": {"up": [11], "down": [12]}, "shape": {"input": [[50, 64]], "output": [[25, 64]]}, "task": null, "num_classes": null, "position": [182, 331], "parameters": {"main": {"pool_size": 2, "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 42, "name": "3rd UpSampling Block", "type": "Conv1DTranspose", "group": "middle", "bind": {"up": [15], "down": [43]}, "shape": {"input": [[25, 128]], "output": [[50, 64]]}, "task": null, "num_classes": null, "position": [-60, 744], "parameters": {"main": {"filters": 64, "kernel_size": 2, "strides": 2, "padding": "same", "activation": "relu"}, "extra": {"output_padding": null, "data_format": "channels_last", "dilation_rate": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 43, "name": "Layer 40", "type": "BatchNormalization", "group": "middle", "bind": {"up": [42], "down": [44]}, "shape": {"input": [[50, 64]], "output": [[50, 64]]}, "task": null, "num_classes": null, "position": [-63, 805], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 44, "name": "Layer 41", "type": "Concatenate", "group": "middle", "bind": {"up": [11, 43], "down": [45]}, "shape": {"input": [[50, 64], [50, 64]], "output": [[50, 128]]}, "task": null, "num_classes": null, "position": [-200, 873], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 45, "name": "Layer 42", "type": "Conv1D", "group": "middle", "bind": {"up": [44], "down": [46]}, "shape": {"input": [[50, 128]], "output": [[50, 64]]}, "task": null, "num_classes": null, "position": [-63, 941], "parameters": {"main": {"filters": 64, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 46, "name": "Layer 43", "type": "BatchNormalization", "group": "middle", "bind": {"up": [45], "down": [47]}, "shape": {"input": [[50, 64]], "output": [[50, 64]]}, "task": null, "num_classes": null, "position": [-64, 997], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 47, "name": "Layer 44", "type": "Conv1D", "group": "middle", "bind": {"up": [46], "down": [48]}, "shape": {"input": [[50, 64]], "output": [[50, 64]]}, "task": null, "num_classes": null, "position": [-63, 1056], "parameters": {"main": {"filters": 64, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 48, "name": "Layer 45", "type": "BatchNormalization", "group": "middle", "bind": {"up": [47], "down": [49]}, "shape": {"input": [[50, 64]], "output": [[50, 64]]}, "task": null, "num_classes": null, "position": [-64, 1113], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 49, "name": "4th UpSampling Block", "type": "Conv1DTranspose", "group": "middle", "bind": {"up": [48], "down": [50]}, "shape": {"input": [[50, 64]], "output": [[100, 32]]}, "task": null, "num_classes": null, "position": [-283, 1197], "parameters": {"main": {"filters": 32, "kernel_size": 2, "strides": 2, "padding": "same", "activation": "relu"}, "extra": {"output_padding": null, "data_format": "channels_last", "dilation_rate": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 50, "name": "Layer 47", "type": "BatchNormalization", "group": "middle", "bind": {"up": [49], "down": [51]}, "shape": {"input": [[100, 32]], "output": [[100, 32]]}, "task": null, "num_classes": null, "position": [-283, 1261], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 51, "name": "Layer 48", "type": "Concatenate", "group": "middle", "bind": {"up": [6, 50], "down": [52]}, "shape": {"input": [[100, 16], [100, 32]], "output": [[100, 48]]}, "task": null, "num_classes": null, "position": [-433, 1327], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 52, "name": "Layer 49", "type": "Conv1D", "group": "middle", "bind": {"up": [51], "down": [53]}, "shape": {"input": [[100, 48]], "output": [[100, 32]]}, "task": null, "num_classes": null, "position": [-282, 1396], "parameters": {"main": {"filters": 32, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 53, "name": "Layer 50", "type": "BatchNormalization", "group": "middle", "bind": {"up": [52], "down": [54]}, "shape": {"input": [[100, 32]], "output": [[100, 32]]}, "task": null, "num_classes": null, "position": [-282, 1460], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 54, "name": "Layer 51", "type": "Conv1D", "group": "middle", "bind": {"up": [53], "down": [55]}, "shape": {"input": [[100, 32]], "output": [[100, 32]]}, "task": null, "num_classes": null, "position": [-283, 1528], "parameters": {"main": {"filters": 32, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 55, "name": "Layer 52", "type": "BatchNormalization", "group": "middle", "bind": {"up": [54], "down": [2]}, "shape": {"input": [[100, 32]], "output": [[100, 32]]}, "task": null, "num_classes": null, "position": [-283, 1596], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Conv1D\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.layers import MaxPool1D\nfrom tensorflow.keras.layers import Conv1DTranspose\nfrom tensorflow.keras.layers import Concatenate\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(100, 200), name='1')\nx_3 = Conv1D(filters=16, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_3')(input_1)\nx_4 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_4')(x_3)\nx_5 = Conv1D(filters=16, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_5')(x_4)\nx_6 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_6')(x_5)\nx_7 = MaxPool1D(pool_size=2, strides=None, padding='same', data_format='channels_last', name='MaxPool1D_7')(x_6)\nx_8 = Conv1D(filters=64, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_8')(x_7)\nx_9 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_9')(x_8)\nx_10 = Conv1D(filters=64, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_10')(x_9)\nx_11 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_11')(x_10)\nx_16 = MaxPool1D(pool_size=2, strides=None, padding='same', data_format='channels_last', name='MaxPool1D_16')(x_11)\nx_12 = Conv1D(filters=128, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_12')(x_16)\nx_13 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_13')(x_12)\nx_14 = Conv1D(filters=128, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_14')(x_13)\nx_15 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_15')(x_14)\nx_42 = Conv1DTranspose(filters=64, kernel_size=2, strides=2, padding='same', activation='relu', output_padding=None, data_format='channels_last', dilation_rate=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1DTranspose_42')(x_15)\nx_43 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_43')(x_42)\nx_44 = Concatenate(axis=-1, name='Concatenate_44')([x_11, x_43])\nx_45 = Conv1D(filters=64, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_45')(x_44)\nx_46 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_46')(x_45)\nx_47 = Conv1D(filters=64, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_47')(x_46)\nx_48 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_48')(x_47)\nx_49 = Conv1DTranspose(filters=32, kernel_size=2, strides=2, padding='same', activation='relu', output_padding=None, data_format='channels_last', dilation_rate=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1DTranspose_49')(x_48)\nx_50 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_50')(x_49)\nx_51 = Concatenate(axis=-1, name='Concatenate_51')([x_6, x_50])\nx_52 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_52')(x_51)\nx_53 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_53')(x_52)\nx_54 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_54')(x_53)\nx_55 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_55')(x_54)\noutput_2 = Conv1D(filters=6, kernel_size=5, strides=1, padding='same', activation='sigmoid', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_55)\n\nmodel = Model([input_1], [output_2])", "references": [], "input_shape": "[(100, 200)]"}