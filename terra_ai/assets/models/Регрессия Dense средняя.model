{"alias": "regressija_dense_srednjaja", "name": "\u0420\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f Dense \u0441\u0440\u0435\u0434\u043d\u044f\u044f", "image": "", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [4]}, "shape": {"input": [[1010]], "output": [[1010]]}, "task": null, "num_classes": null, "position": [-108, -128], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "\u0412\u044b\u0445\u043e\u0434  2", "type": "Dense", "group": "output", "bind": {"up": [8], "down": []}, "shape": {"input": [[100]], "output": [[1]]}, "task": null, "num_classes": null, "position": [-108, 377], "parameters": {"main": {"units": 1, "activation": "linear"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Layer 3", "type": "Dense", "group": "middle", "bind": {"up": [4], "down": [5]}, "shape": {"input": [[500]], "output": [[500]]}, "task": null, "num_classes": null, "position": [-108, 19], "parameters": {"main": {"units": 500, "activation": "elu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 2", "type": "Dense", "group": "middle", "bind": {"up": [1], "down": [3]}, "shape": {"input": [[1010]], "output": [[500]]}, "task": null, "num_classes": null, "position": [-108, -54], "parameters": {"main": {"units": 500, "activation": "linear"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 5, "name": "Layer 4", "type": "BatchNormalization", "group": "middle", "bind": {"up": [3], "down": [6]}, "shape": {"input": [[500]], "output": [[500]]}, "task": null, "num_classes": null, "position": [-108, 88], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 6, "name": "Layer 5", "type": "Dropout", "group": "middle", "bind": {"up": [5], "down": [7]}, "shape": {"input": [[500]], "output": [[500]]}, "task": null, "num_classes": null, "position": [-108, 158], "parameters": {"main": {"rate": 0.1}, "extra": {"noise_shape": null, "seed": null}}, "reference": null}, {"id": 7, "name": "Layer 6", "type": "Dense", "group": "middle", "bind": {"up": [6], "down": [8]}, "shape": {"input": [[500]], "output": [[500]]}, "task": null, "num_classes": null, "position": [-108, 230], "parameters": {"main": {"units": 500, "activation": "selu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 8, "name": "Layer 7", "type": "Dense", "group": "middle", "bind": {"up": [7], "down": [2]}, "shape": {"input": [[500]], "output": [[100]]}, "task": null, "num_classes": null, "position": [-108, 301], "parameters": {"main": {"units": 100, "activation": "linear"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(1010,), name='1')\nx_4 = Dense(units=500, activation='linear', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_4')(input_1)\nx_3 = Dense(units=500, activation='elu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_3')(x_4)\nx_5 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_5')(x_3)\nx_6 = Dropout(rate=0.1, noise_shape=None, seed=None, name='Dropout_6')(x_5)\nx_7 = Dense(units=500, activation='selu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_7')(x_6)\nx_8 = Dense(units=100, activation='linear', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_8')(x_7)\noutput_2 = Dense(units=1, activation='linear', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_8)\n\nmodel = Model([input_1], [output_2])", "references": [], "input_shape": "[(1010,)]"}