{"alias": "regressija_2_vhoda_ohe_bow_malaja", "name": "\u0420\u0435\u0433\u0440\u0435\u0441\u0441\u0438\u044f 2 \u0432\u0445\u043e\u0434\u0430 OHE BoW \u043c\u0430\u043b\u0430\u044f", "image": "", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [4]}, "shape": {"input": [[1010]], "output": [[1010]]}, "task": null, "num_classes": null, "position": [-100, -140], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "\u0412\u0445\u043e\u0434 2", "type": "Input", "group": "input", "bind": {"up": [null], "down": [5]}, "shape": {"input": [[5000]], "output": [[5000]]}, "task": null, "num_classes": null, "position": [100, -140], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 3, "name": "\u0412\u044b\u0445\u043e\u0434  3", "type": "Dense", "group": "output", "bind": {"up": [7], "down": []}, "shape": {"input": [[128]], "output": [[1]]}, "task": null, "num_classes": null, "position": [0, 140], "parameters": {"main": {"units": 1, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 4", "type": "Dense", "group": "middle", "bind": {"up": [1], "down": [6]}, "shape": {"input": [[1010]], "output": [[128]]}, "task": null, "num_classes": null, "position": [-100, -70], "parameters": {"main": {"units": 128, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 5, "name": "Layer 5", "type": "Dense", "group": "middle", "bind": {"up": [2], "down": [6]}, "shape": {"input": [[5000]], "output": [[128]]}, "task": null, "num_classes": null, "position": [100, -70], "parameters": {"main": {"units": 128, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 6, "name": "Layer 6", "type": "Concatenate", "group": "middle", "bind": {"up": [4, 5], "down": [7]}, "shape": {"input": [[128], [128]], "output": [[256]]}, "task": null, "num_classes": null, "position": [0, 0], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 7, "name": "Layer 7", "type": "Dense", "group": "middle", "bind": {"up": [6], "down": [3]}, "shape": {"input": [[256]], "output": [[128]]}, "task": null, "num_classes": null, "position": [0, 70], "parameters": {"main": {"units": 128, "activation": "linear"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Concatenate\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(1010,), name='1')\ninput_2 = Input(shape=(5000,), name='2')\nx_4 = Dense(units=128, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_4')(input_1)\nx_5 = Dense(units=128, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_5')(input_2)\nx_6 = Concatenate(axis=-1, name='Concatenate_6')([x_4, x_5])\nx_7 = Dense(units=128, activation='linear', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_7')(x_6)\noutput_3 = Dense(units=1, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='3')(x_7)\n\nmodel = Model([input_1, input_2], [output_3])", "references": [], "input_shape": "[(1010,), (5000,)]"}