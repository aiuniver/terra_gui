{"alias": "tseries_sber_heavy", "name": "tSeries. Sber Heavy", "image": "", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [5]}, "shape": {"input": [[4, 30]], "output": [[4, 30]]}, "task": null, "num_classes": null, "position": [-85, -166], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 3, "name": "\u0412\u044b\u0445\u043e\u0434  1", "type": "Conv1D", "group": "output", "bind": {"up": [4], "down": []}, "shape": {"input": [[2, 32]], "output": [[2, 2]]}, "task": null, "num_classes": null, "position": [-83, 372], "parameters": {"main": {"filters": 2, "kernel_size": 1, "strides": 1, "padding": "same", "activation": "linear"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 7", "type": "MaxPool1D", "group": "middle", "bind": {"up": [9], "down": [3]}, "shape": {"input": [[4, 32]], "output": [[2, 32]]}, "task": null, "num_classes": null, "position": [-84, 292], "parameters": {"main": {"pool_size": 2, "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 5, "name": "Layer 2", "type": "Conv1D", "group": "middle", "bind": {"up": [1], "down": [6]}, "shape": {"input": [[4, 30]], "output": [[4, 32]]}, "task": null, "num_classes": null, "position": [-85, -95], "parameters": {"main": {"filters": 128, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 6, "name": "Layer 3", "type": "Conv1D", "group": "middle", "bind": {"up": [5], "down": [7]}, "shape": {"input": [[4, 32]], "output": [[4, 32]]}, "task": null, "num_classes": null, "position": [-85, -18], "parameters": {"main": {"filters": 64, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 7, "name": "Layer 4", "type": "Dropout", "group": "middle", "bind": {"up": [6], "down": [8]}, "shape": {"input": [[4, 32]], "output": [[4, 32]]}, "task": null, "num_classes": null, "position": [-85, 59], "parameters": {"main": {"rate": 0.2}, "extra": {"noise_shape": null, "seed": null}}, "reference": null}, {"id": 8, "name": "Layer 5", "type": "Dense", "group": "middle", "bind": {"up": [7], "down": [9]}, "shape": {"input": [], "output": []}, "task": null, "num_classes": null, "position": [-85, 136], "parameters": {"main": {"units": 1000, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 9, "name": "Layer 6", "type": "Dense", "group": "middle", "bind": {"up": [8], "down": [4]}, "shape": {"input": [], "output": []}, "task": null, "num_classes": null, "position": [-84, 214], "parameters": {"main": {"units": 1000, "activation": "linear"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Conv1D\nfrom tensorflow.keras.layers import Dropout\nfrom tensorflow.keras.layers import MaxPool1D\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(4, 30), name='1')\nx_5 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_5')(input_1)\nx_6 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_6')(x_5)\nx_7 = Dropout(rate=0.1, noise_shape=None, seed=None, name='Dropout_7')(x_6)\nx_4 = MaxPool1D(pool_size=2, strides=None, padding='same', data_format='channels_last', name='MaxPool1D_4')(x_7)\noutput_3 = Conv1D(filters=2, kernel_size=1, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='3')(x_4)\n\nmodel = Model([input_1], [output_3])", "references": [], "input_shape": "[(4, 30)]"}