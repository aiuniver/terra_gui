{"alias": "klassifikatsija_audio_3_vhoda_umnyj_dom_conv1d_2d_srednjaja", "name": "\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0430\u0443\u0434\u0438\u043e 3 \u0432\u0445\u043e\u0434\u0430 \u0423\u043c\u043d\u044b\u0439 \u0414\u043e\u043c Conv1d_2d \u0421\u0440\u0435\u0434\u043d\u044f\u044f", "image": "", "layers": [{"id": 1, "name": "MFCC", "type": "Input", "group": "input", "bind": {"up": [null], "down": [19]}, "shape": {"input": [[44, 20]], "output": [[44, 20]]}, "task": "Audio", "num_classes": 4, "position": [-191, -228], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "Chroma STFT", "type": "Input", "group": "input", "bind": {"up": [null], "down": [20]}, "shape": {"input": [[44, 12]], "output": [[44, 12]]}, "task": "Audio", "num_classes": 4, "position": [41, -227], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 3, "name": "RMS", "type": "Input", "group": "input", "bind": {"up": [null], "down": [16]}, "shape": {"input": [[44]], "output": [[44]]}, "task": "Audio", "num_classes": 4, "position": [264, -227], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 4, "name": "\u041c\u0435\u0442\u043a\u0438 \u043a\u043b\u0430\u0441\u0441\u043e\u0432", "type": "Dense", "group": "output", "bind": {"up": [18], "down": []}, "shape": {"input": [[256]], "output": [[4]]}, "task": "Classification", "num_classes": 4, "position": [57, 382], "parameters": {"main": {"units": 4, "activation": "softmax"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 7, "name": "Layer 6", "type": "Conv1D", "group": "middle", "bind": {"up": [16], "down": [15]}, "shape": {"input": [[44, 1]], "output": [[44, 32]]}, "task": null, "num_classes": null, "position": [264, -63], "parameters": {"main": {"filters": 32, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 8, "name": "Layer 4", "type": "Conv2D", "group": "middle", "bind": {"up": [19], "down": [10]}, "shape": {"input": [[44, 20, 1]], "output": [[22, 10, 32]]}, "task": null, "num_classes": null, "position": [-191, -65], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 9, "name": "Layer 5", "type": "Conv2D", "group": "middle", "bind": {"up": [20], "down": [11]}, "shape": {"input": [[44, 12, 1]], "output": [[22, 6, 32]]}, "task": null, "num_classes": null, "position": [40, -65], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 10, "name": "Layer 7", "type": "Conv2D", "group": "middle", "bind": {"up": [8], "down": [13]}, "shape": {"input": [[22, 10, 32]], "output": [[11, 5, 32]]}, "task": null, "num_classes": null, "position": [-191, 12], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 11, "name": "Layer 8", "type": "Conv2D", "group": "middle", "bind": {"up": [9], "down": [13]}, "shape": {"input": [[22, 6, 32]], "output": [[11, 3, 32]]}, "task": null, "num_classes": null, "position": [40, 12], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 13, "name": "Layer 10", "type": "Concatenate", "group": "middle", "bind": {"up": [10, 11], "down": [14]}, "shape": {"input": [[11, 5, 32], [11, 3, 32]], "output": [[11, 8, 32]]}, "task": null, "num_classes": null, "position": [-80, 85], "parameters": {"main": {}, "extra": {"axis": 2}}, "reference": null}, {"id": 14, "name": "Layer 11", "type": "GlobalMaxPool2D", "group": "middle", "bind": {"up": [13], "down": [17]}, "shape": {"input": [[11, 8, 32]], "output": [[32]]}, "task": null, "num_classes": null, "position": [-80, 154], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 15, "name": "Layer 9", "type": "GlobalMaxPool1D", "group": "middle", "bind": {"up": [7], "down": [17]}, "shape": {"input": [[44, 32]], "output": [[32]]}, "task": null, "num_classes": null, "position": [264, 12], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 16, "name": "Layer 3", "type": "Reshape", "group": "middle", "bind": {"up": [3], "down": [7]}, "shape": {"input": [[44]], "output": [[44, 1]]}, "task": null, "num_classes": null, "position": [264, -143], "parameters": {"main": {"target_shape": [44, 1]}, "extra": {}}, "reference": null}, {"id": 17, "name": "Layer 12", "type": "Concatenate", "group": "middle", "bind": {"up": [14, 15], "down": [18]}, "shape": {"input": [[32], [32]], "output": [[64]]}, "task": null, "num_classes": null, "position": [58, 236], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 18, "name": "Layer 13", "type": "Dense", "group": "middle", "bind": {"up": [17], "down": [4]}, "shape": {"input": [[64]], "output": [[256]]}, "task": null, "num_classes": null, "position": [57, 306], "parameters": {"main": {"units": 256, "activation": "sigmoid"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 19, "name": "Layer 1", "type": "Reshape", "group": "middle", "bind": {"up": [1], "down": [8]}, "shape": {"input": [[44, 20]], "output": [[44, 20, 1]]}, "task": null, "num_classes": null, "position": [-191, -146], "parameters": {"main": {"target_shape": [44, 20, 1]}, "extra": {}}, "reference": null}, {"id": 20, "name": "Layer 2", "type": "Reshape", "group": "middle", "bind": {"up": [2], "down": [9]}, "shape": {"input": [[44, 12]], "output": [[44, 12, 1]]}, "task": null, "num_classes": null, "position": [40, -145], "parameters": {"main": {"target_shape": [44, 12, 1]}, "extra": {}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Reshape\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import Conv1D\nfrom tensorflow.keras.layers import GlobalMaxPool1D\nfrom tensorflow.keras.layers import Concatenate\nfrom tensorflow.keras.layers import GlobalMaxPool2D\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(44, 20), name='1')\ninput_2 = Input(shape=(44, 12), name='2')\ninput_3 = Input(shape=(44,), name='3')\nx_19 = Reshape(target_shape=[44, 20, 1], name='Reshape_19')(input_1)\nx_20 = Reshape(target_shape=[44, 12, 1], name='Reshape_20')(input_2)\nx_16 = Reshape(target_shape=[44, 1], name='Reshape_16')(input_3)\nx_8 = Conv2D(filters=32, kernel_size=[3, 3], strides=[2, 2], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_8')(x_19)\nx_9 = Conv2D(filters=32, kernel_size=[3, 3], strides=[2, 2], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_9')(x_20)\nx_7 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_7')(x_16)\nx_10 = Conv2D(filters=32, kernel_size=[3, 3], strides=[2, 2], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_10')(x_8)\nx_11 = Conv2D(filters=32, kernel_size=[3, 3], strides=[2, 2], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_11')(x_9)\nx_15 = GlobalMaxPool1D(data_format='channels_last', name='GlobalMaxPool1D_15')(x_7)\nx_13 = Concatenate(axis=2, name='Concatenate_13')([x_10, x_11])\nx_14 = GlobalMaxPool2D(data_format='channels_last', name='GlobalMaxPool2D_14')(x_13)\nx_17 = Concatenate(axis=-1, name='Concatenate_17')([x_14, x_15])\nx_18 = Dense(units=256, activation='sigmoid', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_18')(x_17)\noutput_4 = Dense(units=4, activation='softmax', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='4')(x_18)\n\nmodel = Model([input_1, input_2, input_3], [output_4])", "references": [], "input_shape": "[(44, 20), (44, 12), (44,)]"}