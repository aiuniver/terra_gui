{"alias": "klassifikatsija_audio_3_vhoda_conv1d_malaja", "name": "\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0430\u0443\u0434\u0438\u043e 3 \u0432\u0445\u043e\u0434\u0430 Conv1d \u043c\u0430\u043b\u0430\u044f", "image": "", "layers": [{"id": 1, "name": "MFCC", "type": "Input", "group": "input", "bind": {"up": [null], "down": [5]}, "shape": {"input": [[44, 20]], "output": [[44, 20]]}, "task": "Audio", "num_classes": 4, "position": [-213, -86], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "Chroma STFT", "type": "Input", "group": "input", "bind": {"up": [null], "down": [5]}, "shape": {"input": [[44, 12]], "output": [[44, 12]]}, "task": "Audio", "num_classes": 4, "position": [-6, -85], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 3, "name": "RMS", "type": "Input", "group": "input", "bind": {"up": [null], "down": [9]}, "shape": {"input": [[44]], "output": [[44]]}, "task": "Audio", "num_classes": 4, "position": [196, -86], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 4, "name": "\u041c\u0435\u0442\u043a\u0438 \u043a\u043b\u0430\u0441\u0441\u043e\u0432", "type": "Dense", "group": "output", "bind": {"up": [11], "down": []}, "shape": {"input": [[32]], "output": [[4]]}, "task": "Classification", "num_classes": 4, "position": [3, 440], "parameters": {"main": {"units": 4, "activation": "softmax"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 5, "name": "Layer 5", "type": "Concatenate", "group": "middle", "bind": {"up": [1, 2], "down": [6]}, "shape": {"input": [[44, 20], [44, 12]], "output": [[44, 32]]}, "task": null, "num_classes": null, "position": [-105, -1], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 6, "name": "Layer 6", "type": "Conv1D", "group": "middle", "bind": {"up": [5], "down": [7]}, "shape": {"input": [[44, 32]], "output": [[44, 32]]}, "task": null, "num_classes": null, "position": [-105, 68], "parameters": {"main": {"filters": 32, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 7, "name": "Layer 7", "type": "Conv1D", "group": "middle", "bind": {"up": [6], "down": [8]}, "shape": {"input": [[44, 32]], "output": [[44, 32]]}, "task": null, "num_classes": null, "position": [-104, 135], "parameters": {"main": {"filters": 32, "kernel_size": 5, "strides": 1, "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": 1, "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 8, "name": "Layer 8", "type": "Flatten", "group": "middle", "bind": {"up": [7], "down": [10]}, "shape": {"input": [[44, 32]], "output": [[1408]]}, "task": null, "num_classes": null, "position": [-103, 202], "parameters": {"main": {}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 9, "name": "Layer 9", "type": "Dense", "group": "middle", "bind": {"up": [3], "down": [10]}, "shape": {"input": [[44]], "output": [[256]]}, "task": null, "num_classes": null, "position": [196, 0], "parameters": {"main": {"units": 256, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 10, "name": "Layer 10", "type": "Concatenate", "group": "middle", "bind": {"up": [8, 9], "down": [11]}, "shape": {"input": [[256], [1408]], "output": [[1664]]}, "task": null, "num_classes": null, "position": [3, 282], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 11, "name": "Layer 11", "type": "Dense", "group": "middle", "bind": {"up": [10], "down": [4]}, "shape": {"input": [[1664]], "output": [[32]]}, "task": null, "num_classes": null, "position": [3, 360], "parameters": {"main": {"units": 32, "activation": "relu"}, "extra": {"use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Concatenate\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.layers import Conv1D\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(44, 20), name='1')\ninput_2 = Input(shape=(44, 12), name='2')\ninput_3 = Input(shape=(44,), name='3')\nx_5 = Concatenate(axis=-1, name='Concatenate_5')([input_1, input_2])\nx_9 = Dense(units=256, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_9')(input_3)\nx_6 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_6')(x_5)\nx_7 = Conv1D(filters=32, kernel_size=5, strides=1, padding='same', activation='relu', data_format='channels_last', dilation_rate=1, groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv1D_7')(x_6)\nx_8 = Flatten(data_format='channels_last', name='Flatten_8')(x_7)\nx_10 = Concatenate(axis=-1, name='Concatenate_10')([x_8, x_9])\nx_11 = Dense(units=32, activation='relu', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Dense_11')(x_10)\noutput_4 = Dense(units=4, activation='softmax', use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='4')(x_11)\n\nmodel = Model([input_1, input_2, input_3], [output_4])", "references": [], "input_shape": "[(44, 20), (44, 12), (44,)]"}