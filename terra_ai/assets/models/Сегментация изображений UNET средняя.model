{"alias": "imsegm_airplanes_unet_medium_", "name": "imSegm Airplanes UNET Medium_", "image": "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", "layers": [{"id": 1, "name": "\u0412\u0445\u043e\u0434 1", "type": "Input", "group": "input", "bind": {"up": [null], "down": [3]}, "shape": {"input": [[176, 320, 3]], "output": [[176, 320, 3]]}, "task": "Image", "num_classes": 1, "position": [-315, -214], "parameters": {"main": {}, "extra": {}}, "reference": null}, {"id": 2, "name": "\u0412\u044b\u0445\u043e\u0434 2", "type": "Conv2D", "group": "output", "bind": {"up": [55], "down": []}, "shape": {"input": [[176, 320, 16]], "output": [[176, 320, 2]]}, "task": "Segmentation", "num_classes": 2, "position": [-283, 2755], "parameters": {"main": {"filters": 2, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "sigmoid"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 3, "name": "Entry block", "type": "Conv2D", "group": "middle", "bind": {"up": [1], "down": [4]}, "shape": {"input": [[176, 320, 3]], "output": [[176, 320, 16]]}, "task": null, "num_classes": null, "position": [-315, -135], "parameters": {"main": {"filters": 16, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 4, "name": "Layer 2", "type": "BatchNormalization", "group": "middle", "bind": {"up": [3], "down": [5]}, "shape": {"input": [[176, 320, 16]], "output": [[176, 320, 16]]}, "task": null, "num_classes": null, "position": [-315, -72], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 5, "name": "Layer 3", "type": "Conv2D", "group": "middle", "bind": {"up": [4], "down": [6]}, "shape": {"input": [[176, 320, 16]], "output": [[176, 320, 16]]}, "task": null, "num_classes": null, "position": [-315, -9], "parameters": {"main": {"filters": 16, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 6, "name": "Layer 4", "type": "BatchNormalization", "group": "middle", "bind": {"up": [5], "down": [7, 51]}, "shape": {"input": [[176, 320, 16]], "output": [[176, 320, 16]]}, "task": null, "num_classes": null, "position": [-316, 53], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 7, "name": "1st DownSampling Block", "type": "MaxPool2D", "group": "middle", "bind": {"up": [6], "down": [8]}, "shape": {"input": [[176, 320, 16]], "output": [[88, 160, 16]]}, "task": null, "num_classes": null, "position": [-62, 68], "parameters": {"main": {"pool_size": [2, 2], "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 8, "name": "Layer 6", "type": "Conv2D", "group": "middle", "bind": {"up": [7], "down": [9]}, "shape": {"input": [[88, 160, 16]], "output": [[88, 160, 32]]}, "task": null, "num_classes": null, "position": [-62, 130], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 9, "name": "Layer 7", "type": "BatchNormalization", "group": "middle", "bind": {"up": [8], "down": [10]}, "shape": {"input": [[88, 160, 32]], "output": [[88, 160, 32]]}, "task": null, "num_classes": null, "position": [-62, 190], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 10, "name": "Layer 8", "type": "Conv2D", "group": "middle", "bind": {"up": [9], "down": [11]}, "shape": {"input": [[88, 160, 32]], "output": [[88, 160, 32]]}, "task": null, "num_classes": null, "position": [-62, 251], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 11, "name": "Layer 9", "type": "BatchNormalization", "group": "middle", "bind": {"up": [10], "down": [16, 44]}, "shape": {"input": [[88, 160, 32]], "output": [[88, 160, 32]]}, "task": null, "num_classes": null, "position": [-62, 307], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 12, "name": "Layer 11", "type": "Conv2D", "group": "middle", "bind": {"up": [16], "down": [13]}, "shape": {"input": [[44, 80, 32]], "output": [[44, 80, 64]]}, "task": null, "num_classes": null, "position": [183, 391], "parameters": {"main": {"filters": 64, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 13, "name": "Layer 12", "type": "BatchNormalization", "group": "middle", "bind": {"up": [12], "down": [14]}, "shape": {"input": [[44, 80, 64]], "output": [[44, 80, 64]]}, "task": null, "num_classes": null, "position": [184, 450], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 14, "name": "Layer 13", "type": "Conv2D", "group": "middle", "bind": {"up": [13], "down": [15]}, "shape": {"input": [[44, 80, 64]], "output": [[44, 80, 64]]}, "task": null, "num_classes": null, "position": [184, 509], "parameters": {"main": {"filters": 64, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 15, "name": "Layer 14", "type": "BatchNormalization", "group": "middle", "bind": {"up": [14], "down": [17, 37]}, "shape": {"input": [[44, 80, 64]], "output": [[44, 80, 64]]}, "task": null, "num_classes": null, "position": [183, 571], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 16, "name": "2nd DownSampling Block", "type": "MaxPool2D", "group": "middle", "bind": {"up": [11], "down": [12]}, "shape": {"input": [[88, 160, 32]], "output": [[44, 80, 32]]}, "task": null, "num_classes": null, "position": [182, 331], "parameters": {"main": {"pool_size": [2, 2], "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 17, "name": "3rd DownSampling Block", "type": "MaxPool2D", "group": "middle", "bind": {"up": [15], "down": [18]}, "shape": {"input": [[44, 80, 64]], "output": [[22, 40, 64]]}, "task": null, "num_classes": null, "position": [427, 591], "parameters": {"main": {"pool_size": [2, 2], "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 18, "name": "Layer 16", "type": "Conv2D", "group": "middle", "bind": {"up": [17], "down": [19]}, "shape": {"input": [[22, 40, 64]], "output": [[22, 40, 128]]}, "task": null, "num_classes": null, "position": [429, 651], "parameters": {"main": {"filters": 128, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 19, "name": "Layer 17", "type": "BatchNormalization", "group": "middle", "bind": {"up": [18], "down": [21]}, "shape": {"input": [[22, 40, 128]], "output": [[22, 40, 128]]}, "task": null, "num_classes": null, "position": [428, 711], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 21, "name": "Layer 18", "type": "Conv2D", "group": "middle", "bind": {"up": [19], "down": [22]}, "shape": {"input": [[22, 40, 128]], "output": [[22, 40, 128]]}, "task": null, "num_classes": null, "position": [428, 767], "parameters": {"main": {"filters": 128, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 22, "name": "Layer 19", "type": "BatchNormalization", "group": "middle", "bind": {"up": [21], "down": [23, 30]}, "shape": {"input": [[22, 40, 128]], "output": [[22, 40, 128]]}, "task": null, "num_classes": null, "position": [427, 824], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 23, "name": "4th DownSampling Block", "type": "MaxPool2D", "group": "middle", "bind": {"up": [22], "down": [24]}, "shape": {"input": [[22, 40, 128]], "output": [[11, 20, 128]]}, "task": null, "num_classes": null, "position": [673, 846], "parameters": {"main": {"pool_size": [2, 2], "strides": null, "padding": "same"}, "extra": {"data_format": "channels_last"}}, "reference": null}, {"id": 24, "name": "Layer 21", "type": "Conv2D", "group": "middle", "bind": {"up": [23], "down": [25]}, "shape": {"input": [[11, 20, 128]], "output": [[11, 20, 256]]}, "task": null, "num_classes": null, "position": [674, 907], "parameters": {"main": {"filters": 256, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 25, "name": "Layer 22", "type": "BatchNormalization", "group": "middle", "bind": {"up": [24], "down": [26]}, "shape": {"input": [[11, 20, 256]], "output": [[11, 20, 256]]}, "task": null, "num_classes": null, "position": [674, 968], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 26, "name": "Layer 23", "type": "Conv2D", "group": "middle", "bind": {"up": [25], "down": [27]}, "shape": {"input": [[11, 20, 256]], "output": [[11, 20, 256]]}, "task": null, "num_classes": null, "position": [678, 1029], "parameters": {"main": {"filters": 256, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 27, "name": "Layer 24", "type": "BatchNormalization", "group": "middle", "bind": {"up": [26], "down": [28]}, "shape": {"input": [[11, 20, 256]], "output": [[11, 20, 256]]}, "task": null, "num_classes": null, "position": [678, 1086], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 28, "name": "1st UpSampling Block", "type": "Conv2DTranspose", "group": "middle", "bind": {"up": [27], "down": [29]}, "shape": {"input": [[11, 20, 256]], "output": [[22, 40, 128]]}, "task": null, "num_classes": null, "position": [421, 1112], "parameters": {"main": {"filters": 128, "kernel_size": [2, 2], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"output_padding": null, "data_format": "channels_last", "dilation_rate": [1, 1], "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 29, "name": "Layer 26", "type": "BatchNormalization", "group": "middle", "bind": {"up": [28], "down": [30]}, "shape": {"input": [[22, 40, 128]], "output": [[22, 40, 128]]}, "task": null, "num_classes": null, "position": [422, 1171], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 30, "name": "Layer 27", "type": "Concatenate", "group": "middle", "bind": {"up": [22, 29], "down": [31]}, "shape": {"input": [[22, 40, 128], [22, 40, 128]], "output": [[22, 40, 256]]}, "task": null, "num_classes": null, "position": [274, 1231], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 31, "name": "Layer 28", "type": "Conv2D", "group": "middle", "bind": {"up": [30], "down": [32]}, "shape": {"input": [[22, 40, 256]], "output": [[22, 40, 128]]}, "task": null, "num_classes": null, "position": [423, 1291], "parameters": {"main": {"filters": 128, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 32, "name": "Layer 29", "type": "BatchNormalization", "group": "middle", "bind": {"up": [31], "down": [33]}, "shape": {"input": [[22, 40, 128]], "output": [[22, 40, 128]]}, "task": null, "num_classes": null, "position": [422, 1346], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 33, "name": "Layer 30", "type": "Conv2D", "group": "middle", "bind": {"up": [32], "down": [34]}, "shape": {"input": [[22, 40, 128]], "output": [[22, 40, 128]]}, "task": null, "num_classes": null, "position": [422, 1401], "parameters": {"main": {"filters": 128, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 34, "name": "Layer 31", "type": "BatchNormalization", "group": "middle", "bind": {"up": [33], "down": [35]}, "shape": {"input": [[22, 40, 128]], "output": [[22, 40, 128]]}, "task": null, "num_classes": null, "position": [423, 1458], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 35, "name": "2nd UpSampling Block", "type": "Conv2DTranspose", "group": "middle", "bind": {"up": [34], "down": [36]}, "shape": {"input": [[22, 40, 128]], "output": [[44, 80, 64]]}, "task": null, "num_classes": null, "position": [196, 1492], "parameters": {"main": {"filters": 64, "kernel_size": [2, 2], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"output_padding": null, "data_format": "channels_last", "dilation_rate": [1, 1], "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 36, "name": "Layer 33", "type": "BatchNormalization", "group": "middle", "bind": {"up": [35], "down": [37]}, "shape": {"input": [[44, 80, 64]], "output": [[44, 80, 64]]}, "task": null, "num_classes": null, "position": [194, 1541], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 37, "name": "Layer 34", "type": "Concatenate", "group": "middle", "bind": {"up": [15, 36], "down": [38]}, "shape": {"input": [[44, 80, 64], [44, 80, 64]], "output": [[44, 80, 128]]}, "task": null, "num_classes": null, "position": [45, 1600], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 38, "name": "Layer 35", "type": "Conv2D", "group": "middle", "bind": {"up": [37], "down": [39]}, "shape": {"input": [[44, 80, 128]], "output": [[44, 80, 64]]}, "task": null, "num_classes": null, "position": [197, 1661], "parameters": {"main": {"filters": 64, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 39, "name": "Layer 36", "type": "BatchNormalization", "group": "middle", "bind": {"up": [38], "down": [40]}, "shape": {"input": [[44, 80, 64]], "output": [[44, 80, 64]]}, "task": null, "num_classes": null, "position": [199, 1723], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 40, "name": "Layer 37", "type": "Conv2D", "group": "middle", "bind": {"up": [39], "down": [41]}, "shape": {"input": [[44, 80, 64]], "output": [[44, 80, 64]]}, "task": null, "num_classes": null, "position": [198, 1777], "parameters": {"main": {"filters": 64, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 41, "name": "Layer 38", "type": "BatchNormalization", "group": "middle", "bind": {"up": [40], "down": [42]}, "shape": {"input": [[44, 80, 64]], "output": [[44, 80, 64]]}, "task": null, "num_classes": null, "position": [198, 1835], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 42, "name": "3rd UpSampling Block", "type": "Conv2DTranspose", "group": "middle", "bind": {"up": [41], "down": [43]}, "shape": {"input": [[44, 80, 64]], "output": [[88, 160, 32]]}, "task": null, "num_classes": null, "position": [-35, 1885], "parameters": {"main": {"filters": 32, "kernel_size": [2, 2], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"output_padding": null, "data_format": "channels_last", "dilation_rate": [1, 1], "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 43, "name": "Layer 40", "type": "BatchNormalization", "group": "middle", "bind": {"up": [42], "down": [44]}, "shape": {"input": [[88, 160, 32]], "output": [[88, 160, 32]]}, "task": null, "num_classes": null, "position": [-35, 1947], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 44, "name": "Layer 41", "type": "Concatenate", "group": "middle", "bind": {"up": [11, 43], "down": [45]}, "shape": {"input": [[88, 160, 32], [88, 160, 32]], "output": [[88, 160, 64]]}, "task": null, "num_classes": null, "position": [-174, 2010], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 45, "name": "Layer 42", "type": "Conv2D", "group": "middle", "bind": {"up": [44], "down": [46]}, "shape": {"input": [[88, 160, 64]], "output": [[88, 160, 32]]}, "task": null, "num_classes": null, "position": [-35, 2076], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 46, "name": "Layer 43", "type": "BatchNormalization", "group": "middle", "bind": {"up": [45], "down": [47]}, "shape": {"input": [[88, 160, 32]], "output": [[88, 160, 32]]}, "task": null, "num_classes": null, "position": [-37, 2131], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 47, "name": "Layer 44", "type": "Conv2D", "group": "middle", "bind": {"up": [46], "down": [48]}, "shape": {"input": [[88, 160, 32]], "output": [[88, 160, 32]]}, "task": null, "num_classes": null, "position": [-36, 2186], "parameters": {"main": {"filters": 32, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 48, "name": "Layer 45", "type": "BatchNormalization", "group": "middle", "bind": {"up": [47], "down": [49]}, "shape": {"input": [[88, 160, 32]], "output": [[88, 160, 32]]}, "task": null, "num_classes": null, "position": [-36, 2244], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 49, "name": "4th UpSampling Block", "type": "Conv2DTranspose", "group": "middle", "bind": {"up": [48], "down": [50]}, "shape": {"input": [[88, 160, 32]], "output": [[176, 320, 16]]}, "task": null, "num_classes": null, "position": [-288, 2297], "parameters": {"main": {"filters": 16, "kernel_size": [2, 2], "strides": [2, 2], "padding": "same", "activation": "relu"}, "extra": {"output_padding": null, "data_format": "channels_last", "dilation_rate": [1, 1], "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 50, "name": "Layer 47", "type": "BatchNormalization", "group": "middle", "bind": {"up": [49], "down": [51]}, "shape": {"input": [[176, 320, 16]], "output": [[176, 320, 16]]}, "task": null, "num_classes": null, "position": [-288, 2355], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 51, "name": "Layer 48", "type": "Concatenate", "group": "middle", "bind": {"up": [6, 50], "down": [52]}, "shape": {"input": [[176, 320, 16], [176, 320, 16]], "output": [[176, 320, 32]]}, "task": null, "num_classes": null, "position": [-418, 2432], "parameters": {"main": {}, "extra": {"axis": -1}}, "reference": null}, {"id": 52, "name": "Layer 49", "type": "Conv2D", "group": "middle", "bind": {"up": [51], "down": [53]}, "shape": {"input": [[176, 320, 32]], "output": [[176, 320, 16]]}, "task": null, "num_classes": null, "position": [-282, 2500], "parameters": {"main": {"filters": 16, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 53, "name": "Layer 50", "type": "BatchNormalization", "group": "middle", "bind": {"up": [52], "down": [54]}, "shape": {"input": [[176, 320, 16]], "output": [[176, 320, 16]]}, "task": null, "num_classes": null, "position": [-282, 2556], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}, {"id": 54, "name": "Layer 51", "type": "Conv2D", "group": "middle", "bind": {"up": [53], "down": [55]}, "shape": {"input": [[176, 320, 16]], "output": [[176, 320, 16]]}, "task": null, "num_classes": null, "position": [-282, 2613], "parameters": {"main": {"filters": 16, "kernel_size": [3, 3], "strides": [1, 1], "padding": "same", "activation": "relu"}, "extra": {"data_format": "channels_last", "dilation_rate": [1, 1], "groups": 1, "use_bias": true, "kernel_initializer": "glorot_uniform", "bias_initializer": "zeros", "kernel_regularizer": null, "bias_regularizer": null, "activity_regularizer": null, "kernel_constraint": null, "bias_constraint": null}}, "reference": null}, {"id": 55, "name": "Layer 52", "type": "BatchNormalization", "group": "middle", "bind": {"up": [54], "down": [2]}, "shape": {"input": [[176, 320, 16]], "output": [[176, 320, 16]]}, "task": null, "num_classes": null, "position": [-283, 2667], "parameters": {"main": {}, "extra": {"axis": -1, "momentum": 0.99, "epsilon": 0.001, "center": true, "scale": true, "beta_initializer": "zeros", "gamma_initializer": "ones", "moving_mean_initializer": "zeros", "moving_variance_initializer": "ones", "beta_regularizer": null, "gamma_regularizer": null, "beta_constraint": null, "gamma_constraint": null}}, "reference": null}], "keras": "from tensorflow.keras.layers import Input\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.layers import MaxPool2D\nfrom tensorflow.keras.layers import Conv2DTranspose\nfrom tensorflow.keras.layers import Concatenate\nfrom tensorflow.keras.models import Model\n\ninput_1 = Input(shape=(176, 320, 3), name='1')\nx_3 = Conv2D(filters=16, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_3')(input_1)\nx_4 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_4')(x_3)\nx_5 = Conv2D(filters=16, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_5')(x_4)\nx_6 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_6')(x_5)\nx_7 = MaxPool2D(pool_size=[2, 2], strides=None, padding='same', data_format='channels_last', name='MaxPool2D_7')(x_6)\nx_8 = Conv2D(filters=32, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_8')(x_7)\nx_9 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_9')(x_8)\nx_10 = Conv2D(filters=32, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_10')(x_9)\nx_11 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_11')(x_10)\nx_16 = MaxPool2D(pool_size=[2, 2], strides=None, padding='same', data_format='channels_last', name='MaxPool2D_16')(x_11)\nx_12 = Conv2D(filters=64, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_12')(x_16)\nx_13 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_13')(x_12)\nx_14 = Conv2D(filters=64, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_14')(x_13)\nx_15 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_15')(x_14)\nx_17 = MaxPool2D(pool_size=[2, 2], strides=None, padding='same', data_format='channels_last', name='MaxPool2D_17')(x_15)\nx_18 = Conv2D(filters=128, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_18')(x_17)\nx_19 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_19')(x_18)\nx_21 = Conv2D(filters=128, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_21')(x_19)\nx_22 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_22')(x_21)\nx_23 = MaxPool2D(pool_size=[2, 2], strides=None, padding='same', data_format='channels_last', name='MaxPool2D_23')(x_22)\nx_24 = Conv2D(filters=256, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_24')(x_23)\nx_25 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_25')(x_24)\nx_26 = Conv2D(filters=256, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_26')(x_25)\nx_27 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_27')(x_26)\nx_28 = Conv2DTranspose(filters=128, kernel_size=[2, 2], strides=[2, 2], padding='same', activation='relu', output_padding=None, data_format='channels_last', dilation_rate=[1, 1], use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2DTranspose_28')(x_27)\nx_29 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_29')(x_28)\nx_30 = Concatenate(axis=-1, name='Concatenate_30')([x_22, x_29])\nx_31 = Conv2D(filters=128, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_31')(x_30)\nx_32 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_32')(x_31)\nx_33 = Conv2D(filters=128, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_33')(x_32)\nx_34 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_34')(x_33)\nx_35 = Conv2DTranspose(filters=64, kernel_size=[2, 2], strides=[2, 2], padding='same', activation='relu', output_padding=None, data_format='channels_last', dilation_rate=[1, 1], use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2DTranspose_35')(x_34)\nx_36 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_36')(x_35)\nx_37 = Concatenate(axis=-1, name='Concatenate_37')([x_15, x_36])\nx_38 = Conv2D(filters=64, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_38')(x_37)\nx_39 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_39')(x_38)\nx_40 = Conv2D(filters=64, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_40')(x_39)\nx_41 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_41')(x_40)\nx_42 = Conv2DTranspose(filters=32, kernel_size=[2, 2], strides=[2, 2], padding='same', activation='relu', output_padding=None, data_format='channels_last', dilation_rate=[1, 1], use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2DTranspose_42')(x_41)\nx_43 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_43')(x_42)\nx_44 = Concatenate(axis=-1, name='Concatenate_44')([x_11, x_43])\nx_45 = Conv2D(filters=32, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_45')(x_44)\nx_46 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_46')(x_45)\nx_47 = Conv2D(filters=32, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_47')(x_46)\nx_48 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_48')(x_47)\nx_49 = Conv2DTranspose(filters=16, kernel_size=[2, 2], strides=[2, 2], padding='same', activation='relu', output_padding=None, data_format='channels_last', dilation_rate=[1, 1], use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2DTranspose_49')(x_48)\nx_50 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_50')(x_49)\nx_51 = Concatenate(axis=-1, name='Concatenate_51')([x_6, x_50])\nx_52 = Conv2D(filters=16, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_52')(x_51)\nx_53 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_53')(x_52)\nx_54 = Conv2D(filters=16, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='relu', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='Conv2D_54')(x_53)\nx_55 = BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001, center=True, scale=True, beta_initializer='zeros', gamma_initializer='ones', moving_mean_initializer='zeros', moving_variance_initializer='ones', beta_regularizer=None, gamma_regularizer=None, beta_constraint=None, gamma_constraint=None, name='BatchNormalization_55')(x_54)\noutput_2 = Conv2D(filters=2, kernel_size=[3, 3], strides=[1, 1], padding='same', activation='sigmoid', data_format='channels_last', dilation_rate=[1, 1], groups=1, use_bias=True, kernel_initializer='glorot_uniform', bias_initializer='zeros', kernel_regularizer=None, bias_regularizer=None, activity_regularizer=None, kernel_constraint=None, bias_constraint=None, name='2')(x_55)\n\nmodel = Model([input_1], [output_2])", "references": [], "input_shape": "[(176, 320, 3)]"}