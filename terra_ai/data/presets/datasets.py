from enum import Enum

from terra_ai.data.datasets.extra import (
    DatasetGroupChoice,
    LayerInputTypeChoice,
    LayerOutputTypeChoice,
    LayerEncodingChoice,
)
from terra_ai.data.modeling.extra import LayerTypeChoice
from terra_ai.data.modeling.layers.extra import ActivationChoice
from terra_ai.data.training.extra import ArchitectureChoice


class Tags(dict, Enum):
    image = {"alias": "image", "name": "Image"}
    video = {"alias": "video", "name": "Video"}
    classification = {"alias": "classification", "name": "Classification"}
    tensorflow_keras = {"alias": "tensorflow_keras", "name": "Tensorflow.keras"}
    text = {"alias": "text", "name": "Text"}
    english = {"alias": "english", "name": "English"}
    russian = {"alias": "russian", "name": "Russian"}
    regression = {"alias": "regression", "name": "Regression"}
    timeseries = {"alias": "timeseries", "name": "Timeseries"}
    timeseriestrend = {"alias": "timeseriestrend", "name": "TimeseriesTrend"}
    terra_ai = {"alias": "terra_ai", "name": "Terra AI"}
    object_detection = {"alias": "object_detection", "name": "Object detection"}
    segmentation = {"alias": "segmentation", "name": "Segmentation"}
    text_segmentation = {"alias": "text_segmentation", "name": "Text Segmentation"}
    audio = {"alias": "audio", "name": "Audio"}
    smart_home = {"alias": "smart_home", "name": "Smart home"}
    trading = {"alias": "trading", "name": "Trading"}
    tracker = {"alias": "tracker", "name": "Tracker"}
    text_to_speech = {"alias": "text_to_speech", "name": "Text-to-Speech"}
    speech_to_text = {"alias": "speech_to_text", "name": "Speech-to-Text"}


OutputLayersDefaults = {
    LayerOutputTypeChoice.Classification: {
        "DIM": {
            "type": LayerTypeChoice.Dense.value,
            "parameters": {
                "main": {
                    "activation": ActivationChoice.softmax.value,
                }
            },
        },
        "1D": {
            "type": LayerTypeChoice.Conv1D.value,
            "parameters": {
                "main": {
                    "activation": ActivationChoice.softmax.value,
                }
            },
        },
    },
    LayerOutputTypeChoice.Segmentation: {
        "1D": {
            "type": LayerTypeChoice.Conv1D.value,
            "parameters": {
                "main": {
                    "activation": ActivationChoice.softmax.value,
                }
            },
        },
        "2D": {
            "type": LayerTypeChoice.Conv2D.value,
            "parameters": {
                "main": {
                    "activation": ActivationChoice.softmax.value,
                }
            },
        },
        "3D": {
            "type": LayerTypeChoice.Conv3D.value,
            "parameters": {
                "main": {
                    "activation": ActivationChoice.softmax.value,
                }
            },
        },
    },
    LayerOutputTypeChoice.TextSegmentation: {
        "DIM": {
            "type": LayerTypeChoice.Dense.value,
            "parameters": {
                "main": {
                    "activation": ActivationChoice.sigmoid.value,
                }
            },
        },
        "1D": {
            "type": LayerTypeChoice.Conv1D.value,
            "parameters": {
                "main": {
                    "activation": ActivationChoice.sigmoid.value,
                }
            },
        },
    },
    LayerOutputTypeChoice.Regression: {
        "DIM": {
            "type": LayerTypeChoice.Dense.value,
            "parameters": {
                "main": {
                    "activation": ActivationChoice.linear.value,
                }
            },
        }
    },
    LayerOutputTypeChoice.Timeseries: {
        "1D": {
            "type": LayerTypeChoice.Conv1D.value,
            "parameters": {
                "main": {
                    "activation": ActivationChoice.linear.value,
                }
            },
        },
        "DIM": {
            "type": LayerTypeChoice.Dense.value,
            "parameters": {
                "main": {
                    "activation": ActivationChoice.linear.value,
                }
            },
        },
    },
    LayerOutputTypeChoice.ObjectDetection: {
        "3D": {
            "type": LayerTypeChoice.Reshape.value,
            "parameters": {
                "main": {
                    "target_shape": "@shape",
                },
            },
        },
    },
    LayerOutputTypeChoice.ObjectDetection: {
        "3D": {
            "type": LayerTypeChoice.Reshape.value,
        },
    },
}


KerasInstructions = {
    "mnist": {
        1: {
            "1_mnist": {
                "cols_names": "1_mnist",
                "height": 28,
                "width": 28,
                "max_scaler": 1,
                "min_scaler": 0,
                "net": "convolutional",
                "put": 1,
                "put_type": "image",
                "scaler": "min_max_scaler",
            }
        },
        2: {
            "2_classification": {
                "one_hot_encoding": True,
                "type_processing": "categorical",
            }
        },
    },
    "fashion_mnist": {
        1: {
            "1_fashion_mnist": {
                "cols_names": "1_fashion_mnist",
                "height": 28,
                "width": 28,
                "max_scaler": 1,
                "min_scaler": 0,
                "net": "convolutional",
                "put": 1,
                "put_type": "image",
                "scaler": "min_max_scaler",
            }
        },
        2: {
            "2_classification": {
                "one_hot_encoding": True,
                "type_processing": "categorical",
            }
        },
    },
    "cifar10": {
        1: {
            "1_cifar10": {
                "cols_names": "1_cifar10",
                "height": 32,
                "width": 32,
                "max_scaler": 1,
                "min_scaler": 0,
                "net": "convolutional",
                "put": 1,
                "put_type": "image",
                "scaler": "min_max_scaler",
            }
        },
        2: {
            "2_classification": {
                "one_hot_encoding": True,
                "type_processing": "categorical",
            }
        },
    },
    "cifar100": {
        1: {
            "1_cifar100": {
                "cols_names": "1_cifar100",
                "height": 32,
                "width": 32,
                "max_scaler": 1,
                "min_scaler": 0,
                "net": "convolutional",
                "put": 1,
                "put_type": "image",
                "scaler": "min_max_scaler",
            }
        },
        2: {
            "2_classification": {
                "one_hot_encoding": True,
                "type_processing": "categorical",
            }
        },
    },
}


DatasetsGroups = [
    {
        "alias": "keras",
        "name": "Keras",
        "datasets": [
            {
                "alias": "mnist",
                "name": "Mnist",
                "group": "keras",
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Вход 1",
                        "shape": (28, 28, 1),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["mnist"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Выход 1",
                        "shape": (10,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 10,
                        "classes_names": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "columns": {
                    1: {
                        "1_mnist": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "name": "Вход 1",
                            "shape": (28, 28, 1),
                            "task": LayerInputTypeChoice.Image.value,
                            "num_classes": 1,
                            "classes_names": ["mnist"],
                            "encoding": LayerEncodingChoice.none.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "name": "Выход 1",
                            "shape": (10,),
                            "task": LayerOutputTypeChoice.Classification.value,
                            "num_classes": 10,
                            "classes_names": [
                                "0",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7",
                                "8",
                                "9",
                            ],
                            "encoding": LayerEncodingChoice.ohe.value,
                        }
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.tensorflow_keras.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "fashion_mnist",
                "name": "Fashion mnist",
                "group": DatasetGroupChoice.keras.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (28, 28, 1),
                        "name": "Вход 1",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["fashion_mnist"],
                        "num_classes": 1,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (10,),
                        "name": "Выход 1",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "T-shirt/top",
                            "Trouser",
                            "Pullover",
                            "Dress",
                            "Coat",
                            "Sandal",
                            "Shirt",
                            "Sneaker",
                            "Bag",
                            "Ankle boot",
                        ],
                        "num_classes": 10,
                        "encoding": "ohe",
                    }
                },
                "columns": {
                    1: {
                        "1_fashion_mnist": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "shape": (28, 28, 1),
                            "name": "Вход 1",
                            "task": LayerInputTypeChoice.Image.value,
                            "classes_names": ["fashion_mnist"],
                            "num_classes": 1,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "shape": (10,),
                            "name": "Выход 1",
                            "task": LayerOutputTypeChoice.Classification.value,
                            "classes_names": [
                                "T-shirt/top",
                                "Trouser",
                                "Pullover",
                                "Dress",
                                "Coat",
                                "Sandal",
                                "Shirt",
                                "Sneaker",
                                "Bag",
                                "Ankle boot",
                            ],
                            "num_classes": 10,
                            "encoding": "ohe",
                        }
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.tensorflow_keras.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "cifar10",
                "name": "Cifar 10",
                "group": DatasetGroupChoice.keras.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (32, 32, 3),
                        "name": "Вход 1",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["cifar10"],
                        "num_classes": 1,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (10,),
                        "name": "Выход 1",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "airplane",
                            "automobile",
                            "bird",
                            "cat",
                            "deer",
                            "dog",
                            "frog",
                            "horse",
                            "ship",
                            "truck",
                        ],
                        "num_classes": 10,
                        "encoding": "ohe",
                    }
                },
                "columns": {
                    1: {
                        "1_cifar10": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "shape": (32, 32, 3),
                            "name": "Вход 1",
                            "task": LayerInputTypeChoice.Image.value,
                            "classes_names": ["cifar10"],
                            "num_classes": 1,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "shape": (10,),
                            "name": "Выход 1",
                            "task": LayerOutputTypeChoice.Classification.value,
                            "classes_names": [
                                "airplane",
                                "automobile",
                                "bird",
                                "cat",
                                "deer",
                                "dog",
                                "frog",
                                "horse",
                                "ship",
                                "truck",
                            ],
                            "num_classes": 10,
                            "encoding": "ohe",
                        }
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.tensorflow_keras.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "cifar100",
                "name": "Сifar 100",
                "group": DatasetGroupChoice.keras.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (32, 32, 3),
                        "name": "Вход 1",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["cifar100"],
                        "num_classes": 1,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (100,),
                        "name": "Выход 1",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "apple",
                            "aquarium_fish",
                            "baby",
                            "bear",
                            "beaver",
                            "bed",
                            "bee",
                            "beetle",
                            "bicycle",
                            "bottle",
                            "bowl",
                            "boy",
                            "bridge",
                            "bus",
                            "butterfly",
                            "camel",
                            "can",
                            "castle",
                            "caterpillar",
                            "cattle",
                            "chair",
                            "chimpanzee",
                            "clock",
                            "cloud",
                            "cockroach",
                            "couch",
                            "cra",
                            "crocodile",
                            "cup",
                            "dinosaur",
                            "dolphin",
                            "elephant",
                            "flatfish",
                            "forest",
                            "fox",
                            "girl",
                            "hamster",
                            "house",
                            "kangaroo",
                            "keyboard",
                            "lamp",
                            "lawn_mower",
                            "leopard",
                            "lion",
                            "lizard",
                            "lobster",
                            "man",
                            "maple_tree",
                            "motorcycle",
                            "mountain",
                            "mouse",
                            "mushroom",
                            "oak_tree",
                            "orange",
                            "orchid",
                            "otter",
                            "palm_tree",
                            "pear",
                            "pickup_truck",
                            "pine_tree",
                            "plain",
                            "plate",
                            "poppy",
                            "porcupine",
                            "possum",
                            "rabbit",
                            "raccoon",
                            "ray",
                            "road",
                            "rocket",
                            "rose",
                            "sea",
                            "seal",
                            "shark",
                            "shrew",
                            "skunk",
                            "skyscraper",
                            "snail",
                            "snake",
                            "spider",
                            "squirrel",
                            "streetcar",
                            "sunflower",
                            "sweet_pepper",
                            "table",
                            "tank",
                            "telephone",
                            "television",
                            "tiger",
                            "tractor",
                            "train",
                            "trout",
                            "tulip",
                            "turtle",
                            "wardrobe",
                            "whale",
                            "willow_tree",
                            "wolf",
                            "woman",
                            "worm",
                        ],
                        "num_classes": 100,
                        "encoding": "ohe",
                    }
                },
                "columns": {
                    1: {
                        "1_cifar100": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "shape": (32, 32, 3),
                            "name": "Вход 1",
                            "task": LayerInputTypeChoice.Image.value,
                            "classes_names": ["cifar100"],
                            "num_classes": 1,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "shape": (100,),
                            "name": "Выход 1",
                            "task": LayerOutputTypeChoice.Classification.value,
                            "classes_names": [
                                "apple",
                                "aquarium_fish",
                                "baby",
                                "bear",
                                "beaver",
                                "bed",
                                "bee",
                                "beetle",
                                "bicycle",
                                "bottle",
                                "bowl",
                                "boy",
                                "bridge",
                                "bus",
                                "butterfly",
                                "camel",
                                "can",
                                "castle",
                                "caterpillar",
                                "cattle",
                                "chair",
                                "chimpanzee",
                                "clock",
                                "cloud",
                                "cockroach",
                                "couch",
                                "cra",
                                "crocodile",
                                "cup",
                                "dinosaur",
                                "dolphin",
                                "elephant",
                                "flatfish",
                                "forest",
                                "fox",
                                "girl",
                                "hamster",
                                "house",
                                "kangaroo",
                                "keyboard",
                                "lamp",
                                "lawn_mower",
                                "leopard",
                                "lion",
                                "lizard",
                                "lobster",
                                "man",
                                "maple_tree",
                                "motorcycle",
                                "mountain",
                                "mouse",
                                "mushroom",
                                "oak_tree",
                                "orange",
                                "orchid",
                                "otter",
                                "palm_tree",
                                "pear",
                                "pickup_truck",
                                "pine_tree",
                                "plain",
                                "plate",
                                "poppy",
                                "porcupine",
                                "possum",
                                "rabbit",
                                "raccoon",
                                "ray",
                                "road",
                                "rocket",
                                "rose",
                                "sea",
                                "seal",
                                "shark",
                                "shrew",
                                "skunk",
                                "skyscraper",
                                "snail",
                                "snake",
                                "spider",
                                "squirrel",
                                "streetcar",
                                "sunflower",
                                "sweet_pepper",
                                "table",
                                "tank",
                                "telephone",
                                "television",
                                "tiger",
                                "tractor",
                                "train",
                                "trout",
                                "tulip",
                                "turtle",
                                "wardrobe",
                                "whale",
                                "willow_tree",
                                "wolf",
                                "woman",
                                "worm",
                            ],
                            "num_classes": 100,
                            "encoding": "ohe",
                        }
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.tensorflow_keras.value,
                ],
                "use_generator": False,
            },
        ],
    },
    {
        "alias": "terra",
        "name": "Terra",
        "datasets": [
            # {
            #     "alias": "sberbank_timeseries",
            #     "name": "Акции сбербанка",
            #     "group": DatasetGroupChoice.terra.value,
            #     "tags": [
            #         Tags.timeseries.value,
            #         Tags.terra_ai.value,
            #     ],
            # },
            {
                "alias": "cars",
                "name": "Автомобили",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения автомобилей",
                        "shape": (120, 176, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 3,
                        "classes_names": ["Мерседес", "Рено", "Феррари"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (3,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 3,
                        "classes_names": ["Мерседес", "Рено", "Феррари"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "cars_30",
                "name": "Автомобили (30 классов)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения автомобилей",
                        "shape": (48, 96, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 30,
                        "classes_names": [
                            "Audi",
                            "BMW",
                            "Bentley",
                            "Cadillac",
                            "Chevrolet",
                            "Citroen",
                            "Dodge",
                            "Fiat",
                            "Ford",
                            "GMC",
                            "Honda",
                            "Infiniti",
                            "Jaguar",
                            "Jeep",
                            "KIA",
                            "Land_Rover",
                            "Lexus",
                            "Mazda",
                            "Mercedes_Benz",
                            "Nissan",
                            "Opel",
                            "Peugeot",
                            "Porsche",
                            "Renault",
                            "Rolls_Royce",
                            "Skoda",
                            "Subaru",
                            "Toyota",
                            "Volkswagen",
                            "Volvo",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (30,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 3,
                        "classes_names": [
                            "Audi",
                            "BMW",
                            "Bentley",
                            "Cadillac",
                            "Chevrolet",
                            "Citroen",
                            "Dodge",
                            "Fiat",
                            "Ford",
                            "GMC",
                            "Honda",
                            "Infiniti",
                            "Jaguar",
                            "Jeep",
                            "KIA",
                            "Land_Rover",
                            "Lexus",
                            "Mazda",
                            "Mercedes_Benz",
                            "Nissan",
                            "Opel",
                            "Peugeot",
                            "Porsche",
                            "Renault",
                            "Rolls_Royce",
                            "Skoda",
                            "Subaru",
                            "Toyota",
                            "Volkswagen",
                            "Volvo",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "airplane",
                "name": "Самолеты",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения самолетов",
                        "shape": (128, 160, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Самолеты"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "2D",
                        "dtype": "uint8",
                        "name": "Маски сегментации",
                        "shape": (128, 160, 2),
                        "task": LayerOutputTypeChoice.Segmentation.value,
                        "num_classes": 2,
                        "classes_names": ["Небо", "Самолет"],
                        "classes_colors": ["black", "red"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.image.value,
                    Tags.segmentation.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "guby",
                "name": "Губы",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения",
                        "shape": (128, 160, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Оригинальные изображения"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "2D",
                        "dtype": "uint8",
                        "name": "Маски сегментации",
                        "shape": (128, 160, 2),
                        "task": LayerOutputTypeChoice.Segmentation.value,
                        "num_classes": 2,
                        "classes_names": ["Фон", "Губы"],
                        "classes_colors": ["black", "lime"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.image.value,
                    Tags.segmentation.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "ljudi",
                "name": "Люди",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Вход 1",
                        "shape": (160, 128, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Оригинальные"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "2D",
                        "dtype": "uint8",
                        "name": "Выход 2",
                        "shape": (160, 128, 2),
                        "task": LayerOutputTypeChoice.Segmentation.value,
                        "num_classes": 2,
                        "classes_names": ["Окружение", "Человек"],
                        "classes_colors": ["black", "white"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.image.value,
                    Tags.segmentation.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "monety",
                "name": "Монеты",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Вход 1",
                        "shape": (160, 160, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Photo"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "2D",
                        "dtype": "uint8",
                        "name": "Выход 2",
                        "shape": (160, 160, 2),
                        "task": LayerOutputTypeChoice.Segmentation.value,
                        "num_classes": 2,
                        "classes_names": ["Фон", "Монета"],
                        "classes_colors": ["#3e371a", "#47d535"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.image.value,
                    Tags.segmentation.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "zapisi_s_videoregistratora",
                "name": "Записи с видеорегистратора",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Вход 1",
                        "shape": (128, 160, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Изображения"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "2D",
                        "dtype": "uint8",
                        "name": "Выход 2",
                        "shape": (128, 160, 3),
                        "task": LayerOutputTypeChoice.Segmentation.value,
                        "num_classes": 2,
                        "classes_names": ["Окружение", "Дорога", "Граница"],
                        "classes_colors": ["black", "#00dc6e", "white"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.image.value,
                    Tags.segmentation.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "video_new",
                "name": "Видео",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "3D",
                        "dtype": "float64",
                        "name": "Input 1",
                        "shape": (100, 128, 160, 3),
                        "task": LayerInputTypeChoice.Video.value,
                        "num_classes": 5,
                        "classes_names": [
                            "Cricket Shot",
                            "Playing Cello",
                            "Punch",
                            "Shaving Beard",
                            "Tennis Swing",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (5,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 5,
                        "classes_names": [
                            "Cricket Shot",
                            "Playing Cello",
                            "Punch",
                            "Shaving Beard",
                            "Tennis Swing",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.video.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "bus_passengers",
                "name": "Пассажиры автобусов",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения автомобилей",
                        "shape": (200, 100, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 2,
                        "classes_names": ["Входящий", "Выходящий"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (2,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["Входящий", "Выходящий"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "heads",
                "name": "Пассажиры автобусов (попарно)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Пассажир 1",
                        "shape": (100, 100, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Пассажир 2",
                        "shape": (100, 100, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["Входящий", "Выходящий"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    3: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метка класса",
                        "shape": (2,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["Не совпадают", "Совпадают"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "marki_moloka",
                "name": "Марки молока",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Молоко",
                        "shape": (200, 100, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 3,
                        "classes_names": [
                            "Parmalat",
                            "Кубанская бурёнка",
                            "Семейный формат",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (3,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 3,
                        "classes_names": [
                            "Parmalat",
                            "Кубанская бурёнка",
                            "Семейный формат",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "chess_v3",
                "name": "Шахматы v3",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения",
                        "shape": (416, 416, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Изображения"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (52, 52, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 13,
                        "classes_names": [
                            "black-knight",
                            "white-rook",
                            "white-pawn",
                            "white-king",
                            "white-bishop",
                            "black-rook",
                            "black-pawn",
                            "black-king",
                            "black-bishop",
                            "black-queen",
                            "white-queen",
                            "white-knight",
                            "bishop",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (26, 26, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 13,
                        "classes_names": [
                            "black-knight",
                            "white-rook",
                            "white-pawn",
                            "white-king",
                            "white-bishop",
                            "black-rook",
                            "black-pawn",
                            "black-king",
                            "black-bishop",
                            "black-queen",
                            "white-queen",
                            "white-knight",
                            "bishop",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    4: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (13, 13, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 13,
                        "classes_names": [
                            "black-knight",
                            "white-rook",
                            "white-pawn",
                            "white-king",
                            "white-bishop",
                            "black-rook",
                            "black-pawn",
                            "black-king",
                            "black-bishop",
                            "black-queen",
                            "white-queen",
                            "white-knight",
                            "bishop",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.object_detection.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "chess_v4_new",
                "name": "Шахматы v4 (генератор)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения",
                        "shape": (416, 416, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Изображения"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (52, 52, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 13,
                        "classes_names": [
                            "black-knight",
                            "white-rook",
                            "white-pawn",
                            "white-king",
                            "white-bishop",
                            "black-rook",
                            "black-pawn",
                            "black-king",
                            "black-bishop",
                            "black-queen",
                            "white-queen",
                            "white-knight",
                            "bishop",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (26, 26, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 13,
                        "classes_names": [
                            "black-knight",
                            "white-rook",
                            "white-pawn",
                            "white-king",
                            "white-bishop",
                            "black-rook",
                            "black-pawn",
                            "black-king",
                            "black-bishop",
                            "black-queen",
                            "white-queen",
                            "white-knight",
                            "bishop",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    4: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (13, 13, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 13,
                        "classes_names": [
                            "black-knight",
                            "white-rook",
                            "white-pawn",
                            "white-king",
                            "white-bishop",
                            "black-rook",
                            "black-pawn",
                            "black-king",
                            "black-bishop",
                            "black-queen",
                            "white-queen",
                            "white-knight",
                            "bishop",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.object_detection.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "milk_v4_new",
                "name": "Молоко v4 (генератор)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения",
                        "shape": (416, 416, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Images"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (52, 52, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Beloe Ozero",
                            "Domashkino",
                            "Domik v Derevne",
                            "Letnii-lug",
                            "Prostokvashino",
                            "Selo-zelenoe",
                            "Stanciya-otbornoe",
                            "Stanciya",
                            "Tashlinki-p",
                            "Tashlinki-u",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (26, 26, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Beloe Ozero",
                            "Domashkino",
                            "Domik v Derevne",
                            "Letnii-lug",
                            "Prostokvashino",
                            "Selo-zelenoe",
                            "Stanciya-otbornoe",
                            "Stanciya",
                            "Tashlinki-p",
                            "Tashlinki-u",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    4: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (13, 13, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Beloe Ozero",
                            "Domashkino",
                            "Domik v Derevne",
                            "Letnii-lug",
                            "Prostokvashino",
                            "Selo-zelenoe",
                            "Stanciya-otbornoe",
                            "Stanciya",
                            "Tashlinki-p",
                            "Tashlinki-u",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.object_detection.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "cards_v4",
                "name": "Игральные карты v4",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения",
                        "shape": (416, 416, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Images"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (52, 52, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 6,
                        "classes_names": [
                            "ace",
                            "jack",
                            "king",
                            "nine",
                            "queen",
                            "ten",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (26, 26, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 6,
                        "classes_names": [
                            "ace",
                            "jack",
                            "king",
                            "nine",
                            "queen",
                            "ten",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    4: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (13, 13, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 6,
                        "classes_names": [
                            "ace",
                            "jack",
                            "king",
                            "nine",
                            "queen",
                            "ten",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.object_detection.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "potholes_v4",
                "name": "Ямы на дорогах v4",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения",
                        "shape": (416, 416, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Images"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (52, 52, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 1,
                        "classes_names": ["pothole"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (26, 26, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 1,
                        "classes_names": ["pothole"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    4: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (13, 13, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 1,
                        "classes_names": ["pothole"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.object_detection.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "trash_v4_new",
                "name": "Подводный мусор v4 (генератор)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения",
                        "shape": (416, 416, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Images"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (52, 52, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 13,
                        "classes_names": [
                            "bio",
                            "cloth",
                            "fishing",
                            "metal",
                            "paper",
                            "papper",
                            "plastic",
                            "platstic",
                            "rov",
                            "rubber",
                            "timestamp",
                            "unknown",
                            "wood",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (26, 26, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 13,
                        "classes_names": [
                            "bio",
                            "cloth",
                            "fishing",
                            "metal",
                            "paper",
                            "papper",
                            "plastic",
                            "platstic",
                            "rov",
                            "rubber",
                            "timestamp",
                            "unknown",
                            "wood",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    4: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (13, 13, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 13,
                        "classes_names": [
                            "bio",
                            "cloth",
                            "fishing",
                            "metal",
                            "paper",
                            "papper",
                            "plastic",
                            "platstic",
                            "rov",
                            "rubber",
                            "timestamp",
                            "unknown",
                            "wood",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.object_detection.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "bus_split_new",
                "name": "Автобусы v4 (генератор)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Изображения",
                        "shape": (416, 416, 3),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Images"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (52, 52, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 1,
                        "classes_names": ["person"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (26, 26, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 1,
                        "classes_names": ["person"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    4: {
                        "datatype": "3D",
                        "dtype": "float32",
                        "name": "Bounding boxes",
                        "shape": (13, 13, 3, 18),
                        "task": LayerOutputTypeChoice.ObjectDetection.value,
                        "num_classes": 1,
                        "classes_names": ["person"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.object_detection.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "symptoms",
                "name": "Симптомы",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "int64",
                        "name": "Симптомы",
                        "shape": (100,),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (10,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "writers",
                "name": "Тексты писателей",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "int64",
                        "name": "Тексты писателей",
                        "shape": (1000,),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 6,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (6,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 6,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "tesla",
                "name": "Отзывы на Теслу",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "int64",
                        "name": "Отзывы",
                        "shape": (100,),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 2,
                        "classes_names": ["Негативные", "Позитивные"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (2,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["Негативные", "Позитивные"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "symptoms_bow",
                "name": "Симптомы (bow)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Симптомы",
                        "shape": (1200,),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (10,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "writers_bow",
                "name": "Тексты писателей (bow)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Тексты писателей",
                        "shape": (20000,),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 6,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (6,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 6,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "tesla_bow",
                "name": "Отзывы на Теслу (bow)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Отзывы",
                        "shape": (20000,),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 2,
                        "classes_names": ["Негативные", "Позитивные"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (2,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["Негативные", "Позитивные"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "symptoms_w2v",
                "name": "Симптомы (w2v)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "name": "Симптомы",
                        "shape": (100, 200),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (10,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "writers_w2v",
                "name": "Тексты писателей (w2v)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "name": "Тексты писателей",
                        "shape": (1000, 200),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 6,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (6,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 6,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "tesla_w2v",
                "name": "Отзывы на Теслу (w2v)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "name": "Отзывы",
                        "shape": (100, 200),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 2,
                        "classes_names": ["Негативные", "Позитивные"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (2,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["Негативные", "Позитивные"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "docs",
                "name": "Договоры",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "int64",
                        "name": "Вход 1",
                        "shape": (80,),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 1,
                        "classes_names": ["Договора432"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "1D",
                        "dtype": "uint8",
                        "name": "Выход 2",
                        "shape": (80, 6),
                        "task": LayerOutputTypeChoice.TextSegmentation.value,
                        "num_classes": 6,
                        "classes_names": [
                            "<s1>",
                            "<s2>",
                            "<s3>",
                            "<s4>",
                            "<s5>",
                            "<s6>",
                        ],
                        "encoding": LayerEncodingChoice.multi.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.text_segmentation.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "smarthome",
                "name": "Умный дом",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "name": "MFCC",
                        "shape": (44, 20),
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 4,
                        "classes_names": [
                            "1_Кондиционер",
                            "2_Свет",
                            "3_Телевизор",
                            "4_Шум",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "name": "Chroma STFT",
                        "shape": (44, 12),
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 4,
                        "classes_names": [
                            "1_Кондиционер",
                            "2_Свет",
                            "3_Телевизор",
                            "4_Шум",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "DIM",
                        "dtype": "float32",
                        "name": "RMS",
                        "shape": (44,),
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 4,
                        "classes_names": [
                            "1_Кондиционер",
                            "2_Свет",
                            "3_Телевизор",
                            "4_Шум",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    4: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (4,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 4,
                        "classes_names": [
                            "1_Кондиционер",
                            "2_Свет",
                            "3_Телевизор",
                            "4_Шум",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.audio.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "audio_genres",
                "name": "Жанры музыки",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "name": "MFCC",
                        "shape": (1292, 20),
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Блюз",
                            "Джаз",
                            "Диско",
                            "Кантри",
                            "Классика",
                            "Металл",
                            "Поп",
                            "Регги",
                            "Рок",
                            "ХипХоп",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "name": "Chroma STFT",
                        "shape": (1292, 12),
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Блюз",
                            "Джаз",
                            "Диско",
                            "Кантри",
                            "Классика",
                            "Металл",
                            "Поп",
                            "Регги",
                            "Рок",
                            "ХипХоп",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "DIM",
                        "dtype": "float32",
                        "name": "RMS",
                        "shape": (1292,),
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Блюз",
                            "Джаз",
                            "Диско",
                            "Кантри",
                            "Классика",
                            "Металл",
                            "Поп",
                            "Регги",
                            "Рок",
                            "ХипХоп",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    4: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (10,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 10,
                        "classes_names": [
                            "Блюз",
                            "Джаз",
                            "Диско",
                            "Кантри",
                            "Классика",
                            "Металл",
                            "Поп",
                            "Регги",
                            "Рок",
                            "ХипХоп",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.audio.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "esc_50",
                "name": "Окружающая среда",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "name": "MFCC",
                        "shape": (130, 20),
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 50,
                        "classes_names": [
                            "airplane",
                            "breathing",
                            "brushing_teeth",
                            "can_opening",
                            "car_horn",
                            "cat",
                            "chainsaw",
                            "chirping_birds",
                            "church_bells",
                            "clapping",
                            "clock_alarm",
                            "clock_tick",
                            "coughing",
                            "cow",
                            "crackling_fire",
                            "crickets",
                            "crow",
                            "crying_baby",
                            "dog",
                            "door_wood_creaks",
                            "door_wood_knock",
                            "drinking_sipping",
                            "engine",
                            "fireworks",
                            "footsteps",
                            "frog",
                            "glass_breaking",
                            "hand_saw",
                            "helicopter",
                            "hen",
                            "insects",
                            "keyboard_typing",
                            "laughing",
                            "mouse_click",
                            "pig",
                            "pouring_water",
                            "rain",
                            "rooster",
                            "sea_waves",
                            "sheep",
                            "siren",
                            "sneezing",
                            "snoring",
                            "thunderstorm",
                            "toilet_flush",
                            "train",
                            "vacuum_cleaner",
                            "washing_machine",
                            "water_drops",
                            "wind",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "name": "Chroma STFT",
                        "shape": (130, 12),
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 50,
                        "classes_names": [
                            "airplane",
                            "breathing",
                            "brushing_teeth",
                            "can_opening",
                            "car_horn",
                            "cat",
                            "chainsaw",
                            "chirping_birds",
                            "church_bells",
                            "clapping",
                            "clock_alarm",
                            "clock_tick",
                            "coughing",
                            "cow",
                            "crackling_fire",
                            "crickets",
                            "crow",
                            "crying_baby",
                            "dog",
                            "door_wood_creaks",
                            "door_wood_knock",
                            "drinking_sipping",
                            "engine",
                            "fireworks",
                            "footsteps",
                            "frog",
                            "glass_breaking",
                            "hand_saw",
                            "helicopter",
                            "hen",
                            "insects",
                            "keyboard_typing",
                            "laughing",
                            "mouse_click",
                            "pig",
                            "pouring_water",
                            "rain",
                            "rooster",
                            "sea_waves",
                            "sheep",
                            "siren",
                            "sneezing",
                            "snoring",
                            "thunderstorm",
                            "toilet_flush",
                            "train",
                            "vacuum_cleaner",
                            "washing_machine",
                            "water_drops",
                            "wind",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "DIM",
                        "dtype": "float32",
                        "name": "RMS",
                        "shape": (130,),
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 50,
                        "classes_names": [
                            "airplane",
                            "breathing",
                            "brushing_teeth",
                            "can_opening",
                            "car_horn",
                            "cat",
                            "chainsaw",
                            "chirping_birds",
                            "church_bells",
                            "clapping",
                            "clock_alarm",
                            "clock_tick",
                            "coughing",
                            "cow",
                            "crackling_fire",
                            "crickets",
                            "crow",
                            "crying_baby",
                            "dog",
                            "door_wood_creaks",
                            "door_wood_knock",
                            "drinking_sipping",
                            "engine",
                            "fireworks",
                            "footsteps",
                            "frog",
                            "glass_breaking",
                            "hand_saw",
                            "helicopter",
                            "hen",
                            "insects",
                            "keyboard_typing",
                            "laughing",
                            "mouse_click",
                            "pig",
                            "pouring_water",
                            "rain",
                            "rooster",
                            "sea_waves",
                            "sheep",
                            "siren",
                            "sneezing",
                            "snoring",
                            "thunderstorm",
                            "toilet_flush",
                            "train",
                            "vacuum_cleaner",
                            "washing_machine",
                            "water_drops",
                            "wind",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    4: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (50,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 50,
                        "classes_names": [
                            "airplane",
                            "breathing",
                            "brushing_teeth",
                            "can_opening",
                            "car_horn",
                            "cat",
                            "chainsaw",
                            "chirping_birds",
                            "church_bells",
                            "clapping",
                            "clock_alarm",
                            "clock_tick",
                            "coughing",
                            "cow",
                            "crackling_fire",
                            "crickets",
                            "crow",
                            "crying_baby",
                            "dog",
                            "door_wood_creaks",
                            "door_wood_knock",
                            "drinking_sipping",
                            "engine",
                            "fireworks",
                            "footsteps",
                            "frog",
                            "glass_breaking",
                            "hand_saw",
                            "helicopter",
                            "hen",
                            "insects",
                            "keyboard_typing",
                            "laughing",
                            "mouse_click",
                            "pig",
                            "pouring_water",
                            "rain",
                            "rooster",
                            "sea_waves",
                            "sheep",
                            "siren",
                            "sneezing",
                            "snoring",
                            "thunderstorm",
                            "toilet_flush",
                            "train",
                            "vacuum_cleaner",
                            "washing_machine",
                            "water_drops",
                            "wind",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.audio.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "kvartiry",
                "name": "Квартиры",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Параметры",
                        "shape": (284,),
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "num_classes": 275,
                        "classes_names": [
                            "Шелепиха м.",
                            "Пятницкое шоссе м.",
                            "Планерная м.",
                            "Шаболовская м.",
                            "Бабушкинская м.",
                            "Улица Дмитриевского м.",
                            "Бульвар Рокоссовского м.",
                            "Марьина Роща м.",
                            "Марьино м.",
                            "Печатники м.",
                            "Красногвардейская м.",
                            "Площадь Ильича м.",
                            "Славянский бульвар м.",
                            "Раменки м.",
                            "Ботанический сад м.",
                            "Маяковская м.",
                            "Хорошево м. (МЦК)",
                            "Проспект Вернадского м.",
                            "Серпуховская м.",
                            "Улица Академика Янгеля м.",
                            "Крылатское м.",
                            "Первомайская м.",
                            "Измайловская м.",
                            "Мичуринский проспект м.",
                            "Бульвар Дмитрия Донского м.",
                            "Коптево м. (МЦК)",
                            "Ростокино м. (МЦК)",
                            "Саларьево м.",
                            "Октябрьское поле м.",
                            "Спортивная м.",
                            "Фрунзенская м.",
                            "Царицыно м.",
                            "Юго-Западная м.",
                            "Белокаменная м. (МЦК)",
                            "Молодежная м.",
                            "Медведково м.",
                            "Кунцевская м.",
                            "Авиамоторная м.",
                            "Тимирязевская м.",
                            "Столбово м.",
                            "Селигерская м.",
                            "Коньково м.",
                            "Бунинская аллея м.",
                            "Теплый стан м.",
                            "Ломоносовский проспект м.",
                            "Люблино м.",
                            "Электрозаводская м.",
                            "Перово м.",
                            "Бауманская м.",
                            "Автозаводская м.",
                            "Прокшино м.",
                            "Севастопольская м.",
                            "Новые Черемушки м.",
                            "Сходненская м.",
                            "Братиславская м.",
                            "Аннино м.",
                            "Ховрино м.",
                            "Преображенская площадь м.",
                            "Новокосино м.",
                            "Новопеределкино м.",
                            "Спартак м.",
                            "Беломорская м.",
                            "Тропарево м.",
                            "Академическая м.",
                            "Строгино м.",
                            "Выхино м.",
                            "Тульская м.",
                            "Говорово м.",
                            "Текстильщики м.",
                            "ЗИЛ м. (МЦК)",
                            "Домодедовская м.",
                            "Коломенская м.",
                            "Борисово м.",
                            "Волжская м.",
                            "Улица Скобелевская м.",
                            "Улица 1905 года м.",
                            "Андроновка м. (МЦК)",
                            "Нижегородская м. (МЦК)",
                            "Рассказовка м.",
                            "Отрадное м.",
                            "Окружная м.",
                            "Рязанский проспект м.",
                            "Свиблово м.",
                            "Солнцево м.",
                            "Сокол м.",
                            "Крымская м. (МЦК)",
                            "Выставочная м.",
                            "Румянцево м.",
                            "Ясенево м.",
                            "Смоленская м.",
                            "Новохохловская м. (МЦК)",
                            "Боровское шоссе м.",
                            "Шипиловская м.",
                            "Аэропорт м.",
                            "Щелковская м.",
                            "ВДНХ м.",
                            "Южная м.",
                            "Профсоюзная м.",
                            "Волгоградский проспект м.",
                            "Лесопарковая м.",
                            "Кропоткинская м.",
                            "Окская улица м.",
                            "Пролетарская м.",
                            "Стахановская м.",
                            "Озерная м.",
                            "Ольховая м.",
                            "Филатов луг м.",
                            "Новогиреево м.",
                            "Петровско-Разумовская м.",
                            "Некрасовка м.",
                            "Калужская м.",
                            "Площадь Гагарина м. (МЦК)",
                            "Лухмановская м.",
                            "Белорусская м.",
                            "Кантемировская м.",
                            "Бульвар Рокоссовского м. (МЦК)",
                            "Улица Горчакова м.",
                            "Красносельская м.",
                            "Бибирево м.",
                            "Фили м.",
                            "Владыкино м.",
                            "Алексеевская м.",
                            "Волоколамская м.",
                            "Новослободская м.",
                            "Угрешская м. (МЦК)",
                            "Курская м.",
                            "Лихоборы м. (МЦК)",
                            "Кузьминки м.",
                            "ЦСКА м.",
                            "Лермонтовский проспект м.",
                            "Алтуфьево м.",
                            "Динамо м.",
                            "Краснопресненская м.",
                            "Дмитровская м.",
                            "Соколиная Гора м. (МЦК)",
                            "Шоссе Энтузиастов м.",
                            "Семеновская м.",
                            "Чистые пруды м.",
                            "Красные ворота м.",
                            "Нахимовский проспект м.",
                            "Орехово м.",
                            "Технопарк м.",
                            "Бутырская м.",
                            "Студенческая м.",
                            "Щукинская м.",
                            "Жулебино м.",
                            "Чкаловская м.",
                            "Фонвизинская м.",
                            "Новоясеневская м.",
                            "Улица Старокачаловская м.",
                            "Речной вокзал м.",
                            "Митино м.",
                            "Юго-Восточная м.",
                            "Сокольники м.",
                            "Петровский парк м.",
                            "Пражская м.",
                            "Университет м.",
                            "Панфиловская м. (МЦК)",
                            "Автозаводская м. (МЦК)",
                            "Войковская м.",
                            "Арбатская м.",
                            "Беляево м.",
                            "Киевская м.",
                            "Черкизовская м.",
                            "Стрешнево м. (МЦК)",
                            "Тушинская м.",
                            "Тверская м.",
                            "Варшавская м.",
                            "Таганская м.",
                            "Китай-Город м.",
                            "Римская м.",
                            "Балтийская м. (МЦК)",
                            "Чертановская м.",
                            "Каховская м.",
                            "Бульвар Адмирала Ушакова м.",
                            "Полежаевская м.",
                            "Беговая м.",
                            "Дубровка м. (МЦК)",
                            "Парк культуры м.",
                            "Новокузнецкая м.",
                            "Парк Победы м.",
                            "Воробьевы Горы м.",
                            "Водный стадион м.",
                            "Победа станция",
                            "Достоевская м.",
                            "Кожуховская м.",
                            "Савеловская м.",
                            "Марксистская м.",
                            "Окружная м. (МЦК)",
                            "Алма-Атинская м.",
                            "Не Указано",
                            "Зорге м. (МЦК)",
                            "Менделеевская м.",
                            "Нагорная м.",
                            "Крекшино станция",
                            "Крестьянская Застава м.",
                            "Комсомольская м.",
                            "Партизанская м.",
                            "Локомотив м. (МЦК)",
                            "Октябрьская м.",
                            "Савеловская метро",
                            "Дубровка м.",
                            "Измайлово м. (МЦК)",
                            "Мичуринец станция",
                            "Верхние Лихоборы м.",
                            "Каширская м.",
                            "Пушкинская м.",
                            "Филевский парк м.",
                            "Павелецкая м.",
                            "Кутузовская м.",
                            "Минская м.",
                            "Баррикадная м.",
                            "Библиотека им.Ленина м.",
                            "Зябликово м.",
                            "Аэропорт Внуково станция",
                            "Пионерская м.",
                            "Котельники м.",
                            "Деловой центр м.",
                            "Рассудово станция",
                            "Ленинский проспект м.",
                            "Рижская м.",
                            "Шелепиха м. (МЦК)",
                            "Сухаревская м.",
                            "Сретенский бульвар м.",
                            "Цветной бульвар м.",
                            "Трубная м.",
                            "Нагатинская м.",
                            "Третьяковская м.",
                            "Дачная станция",
                            "Проспект Мира м.",
                            "Охотный ряд м.",
                            "Боровицкая м.",
                            "Нижегородская улица м.",
                            "Международная м.",
                            "Весенняя станция",
                            "Багратионовская м.",
                            "Шоссе Энтузиастов м. (МЦК)",
                            "Полянка м.",
                            "Добрынинская м.",
                            "Лужники м. (МЦК)",
                            "Ботанический сад м. (МЦК)",
                            "Тургеневская м.",
                            "Щербинка станция",
                            "Бекасово-1 станция",
                            "Верхние Котлы м. (МЦК)",
                            "Апрелевка станция",
                            "Толстопальцево станция",
                            "Аэропорт (старая) станция",
                            "Силикатная станция",
                            "Лубянка м.",
                            "Кокошкино станция",
                            "Гривно станция",
                            "Косино м.",
                            "Подольск станция",
                            "Хорошевское м.",
                            "Мякинино м.",
                            "Львовская станция",
                            "Внуково станция",
                            "Александровский Сад м.",
                            "Театральная м.",
                            "Кутузовская м. (МЦК)",
                            "Коммунарка м.",
                            "Битцевский парк м.",
                            "Колхозная станция",
                            "Чеховская м.",
                            "Алабушево станция",
                            "Кузнецкий мост м.",
                            "Монолитный",
                            "Панельный",
                            "Не указано",
                            "Кирпичный",
                            "Блочный",
                            "Не указано",
                            "Раздельный",
                            "Совмещенный",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "BoW",
                        "shape": (1000,),
                        "task": LayerInputTypeChoice.Text.value,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    3: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Стоимость",
                        "shape": (1,),
                        "task": LayerOutputTypeChoice.Regression.value,
                        "num_classes": 1,
                        "classes_names": ["flats.csv"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.classification.value,
                    Tags.text.value,
                    Tags.regression.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "rezjume",
                "name": "Резюме",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Вход 1 (Параметры)",
                        "shape": (33,),
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "num_classes": 31,
                        "classes_names": [
                            "М",
                            "Ж",
                            "Не указан",
                            "полная занятость",
                            "частичная занятость, полная занятость",
                            "частичная занятость, проектная работа, полная занятость",
                            "стажировка, частичная занятость, полная занятость",
                            "стажировка, полная занятость",
                            "проектная работа, полная занятость",
                            "стажировка, частичная занятость, проектная работа, полная занятость",
                            "частичная занятость",
                            "частичная занятость, проектная работа",
                            "стажировка, частичная занятость, проектная работа",
                            "стажировка, проектная работа",
                            "проектная работа",
                            "стажировка, частичная занятость",
                            "стажировка, проектная работа, полная занятость",
                            "стажировка",
                            "Не указано",
                            "среднее специальное",
                            "высшее",
                            "высшее, среднее специальное",
                            "среднее образование",
                            "высшее, неоконченное высшее",
                            "высшее, среднее специальное, неоконченное высшее",
                            "высшее, среднее образование",
                            "среднее специальное, среднее образование",
                            "высшее, среднее специальное, неоконченное высшее, среднее образование",
                            "высшее, неоконченное высшее, среднее образование",
                            "высшее, среднее специальное, среднее образование",
                            "Не указано",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Вход 2 (Профессия)",
                        "shape": (2000,),
                        "task": LayerInputTypeChoice.Text.value,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    3: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Выход 3 (ЗП)",
                        "shape": (1,),
                        "task": LayerOutputTypeChoice.Regression.value,
                        "num_classes": 1,
                        "classes_names": ["HeadHunter.csv"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.classification.value,
                    Tags.text.value,
                    Tags.regression.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "tsena_avtomobilej",
                "name": "Цена автомобилей",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Вход 1",
                        "shape": (195,),
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "num_classes": 190,
                        "classes_names": [
                            "LEXUS",
                            "CHEVROLET",
                            "HONDA",
                            "FORD",
                            "HYUNDAI",
                            "TOYOTA",
                            "MERCEDES-BENZ",
                            "OPEL",
                            "PORSCHE",
                            "BMW",
                            "JEEP",
                            "VOLKSWAGEN",
                            "AUDI",
                            "NISSAN",
                            "SUBARU",
                            "DAEWOO",
                            "KIA",
                            "MITSUBISHI",
                            "SSANGYONG",
                            "FIAT",
                            "MAZDA",
                            "DODGE",
                            "SUZUKI",
                            "RX 450",
                            "Equinox",
                            "FIT",
                            "Escape",
                            "Santa FE",
                            "Prius",
                            "Sonata",
                            "Camry",
                            "RX 350",
                            "E 350",
                            "Transit",
                            "Vectra",
                            "CHR",
                            "Elantra",
                            "RX 400",
                            "E 220",
                            "GX 470",
                            "Highlander",
                            "Vito",
                            "Cayenne",
                            "X5",
                            "Grand Cherokee",
                            "H1",
                            "Jetta",
                            "Prius C",
                            "Aqua",
                            "Civic",
                            "Q7",
                            "E 300",
                            "Q5",
                            "C 180",
                            "Juke",
                            "535",
                            "Fusion",
                            "Tucson",
                            "Vitz",
                            "Captiva",
                            "Mustang",
                            "ML 350",
                            "Cr-v",
                            "Cruze",
                            "Orlando",
                            "Forester",
                            "Lacetti",
                            "E 320",
                            "Genesis",
                            "GX 460",
                            "Sprinter",
                            "Picanto",
                            "328",
                            "Airtrek",
                            "Korando",
                            "Serena",
                            "RAV 4",
                            "Pajero",
                            "Volt",
                            "500",
                            "Legacy",
                            "REXTON",
                            "Tacoma",
                            "Passat",
                            "C 250",
                            "325",
                            "A6",
                            "Golf",
                            "A7",
                            "I30",
                            "Altima",
                            "CT 200h",
                            "Veloster",
                            "Ist",
                            "Corolla",
                            "GLA 250",
                            "530",
                            "Tiida",
                            "C 300",
                            "Actyon",
                            "Tundra",
                            "Zafira",
                            "C 200",
                            "Astra",
                            "Avalon",
                            "318",
                            "Outlander",
                            "Camry SE",
                            "E 200",
                            "GLE 350",
                            "Malibu",
                            "Insight",
                            "Colt",
                            "C-MAX",
                            "Aveo",
                            "X6",
                            "Optima",
                            "525",
                            "X-Trail",
                            "Fiesta",
                            "Combo",
                            "A4",
                            "320",
                            "Pajero IO",
                            "Odyssey",
                            "Focus",
                            "Corsa",
                            "Spark",
                            "March",
                            "Impala",
                            "Accent",
                            "Grandeur",
                            "CX-9",
                            "Compass",
                            "Transit Connect",
                            "XV",
                            "Sorento",
                            "ES 300",
                            "Sportage",
                            "Versa",
                            "335",
                            "X-Terra",
                            "Note",
                            "528",
                            "C 230",
                            "Caliber",
                            "SX4",
                            "ML 320",
                            "Jeep",
                            "Hatchback",
                            "Sedan",
                            "Microbus",
                            "Goods wagon",
                            "Universal",
                            "Coupe",
                            "Minivan",
                            "Cabriolet",
                            "Pickup",
                            "Yes",
                            "No",
                            "No Turbo",
                            "Turbo",
                            "Automatic",
                            "Tiptronic",
                            "Variator",
                            "Manual",
                            "4x4",
                            "Front",
                            "Rear",
                            "4-5",
                            "2-3",
                            ">5",
                            "Left wheel",
                            "Right-hand drive",
                            "Silver",
                            "Black",
                            "White",
                            "Grey",
                            "Blue",
                            "Green",
                            "Sky blue",
                            "Orange",
                            "Yellow",
                            "Brown",
                            "Red",
                            "Beige",
                            "Carnelian red",
                            "Purple",
                            "Golden",
                            "Pink",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Выход 2",
                        "shape": (1,),
                        "task": LayerOutputTypeChoice.Regression.value,
                        "num_classes": 1,
                        "classes_names": ["cars_price.csv"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.classification.value,
                    Tags.regression.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "spam_soobschenija",
                "name": "Спам сообщения",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Сообщение (bow)",
                        "shape": (2000,),
                        "task": LayerInputTypeChoice.Text.value,
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (2,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["ham", "spam"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "klassifikatsija_rezjume",
                "name": "Классификация резюме",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Параметры",
                        "shape": (300,),
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "classes_names": [
                            "Ж",
                            "М",
                            "Москва",
                            "Тюмень",
                            "Новосибирск",
                            "Якутск",
                            "Санкт-Петербург",
                            "Глазов",
                            "Омск",
                            "Новокузнецк",
                            "Ульяновск",
                            "Волжский(Волгоградская область)",
                            "Казань",
                            "Бишкек",
                            "Архангельск",
                            "Мытищи",
                            "Фрязино",
                            "Оренбург",
                            "Пенза",
                            "Луганск",
                            "Красногорск",
                            "Судак",
                            "Геленджик",
                            "Дрезна",
                            "Челябинск",
                            "Барнаул",
                            "Харьков",
                            "Ташкент",
                            "Чехов",
                            "Владимир",
                            "Самара",
                            "Орск",
                            "Бор",
                            "Ивантеевка",
                            "Тольятти",
                            "Уральск",
                            "Хабаровск",
                            "Екатеринбург",
                            "Бузулук",
                            "Магнитогорск",
                            "Ессентуки",
                            "Молодечно",
                            "Кубинка",
                            "Днепр (Днепропетровск)",
                            "Алматы",
                            "Ногинск",
                            "Череповец",
                            "Королев",
                            "Севастополь",
                            "Домодедово",
                            "Владикавказ",
                            "Шадринск",
                            "Сергиев Посад",
                            "Углич",
                            "Пушкино (Московская область)",
                            "Нахабино",
                            "Красноярск",
                            "Брянск",
                            "Чита",
                            "Нижний Новгород",
                            "Томск",
                            "Алушта",
                            "Астрахань",
                            "Химки",
                            "Брест",
                            "Донецк (Украина)",
                            "Черноголовка",
                            "Воронеж",
                            "Бугульма",
                            "Чебоксары",
                            "Энгельс",
                            "Краснодар",
                            "Египет",
                            "Гродно",
                            "Уфа",
                            "Сочи",
                            "Енакиево",
                            "Зеленоград",
                            "Верхняя Пышма",
                            "Ростов-на-Дону",
                            "Сургут",
                            "Лыткарино",
                            "Пермь",
                            "Тула",
                            "Красноармейск (Московская область)",
                            "Минск",
                            "Лобня",
                            "Щербинка",
                            "Воскресенск",
                            "Йошкар-Ола",
                            "Шымкент",
                            "Саратов",
                            "Вольск",
                            "Калининград",
                            "Новороссийск",
                            "Одинцово",
                            "Кировск (Ленинградская область)",
                            "Турция",
                            "Кишинёв",
                            "Солнечногорск",
                            "Белгород",
                            "Ставрополь",
                            "Ижевск",
                            "Люберцы",
                            "Симферополь",
                            "Балашиха",
                            "Набережные Челны",
                            "Индия",
                            "Черногория",
                            "Волгоград",
                            "Рязань",
                            "Киев",
                            "Иваново (Ивановская область)",
                            "Саранск",
                            "Гомель",
                            "Губкинский",
                            "Усть-Каменогорск",
                            "Одесса",
                            "Наро-Фоминск",
                            "Волоколамск",
                            "Ялта",
                            "Греция",
                            "Харцызск",
                            "Владивосток",
                            "Липецк",
                            "Долгопрудный",
                            "Воткинск",
                            "Обнинск",
                            "Белогорск",
                            "Чусовой",
                            "Лазаревское",
                            "Мурманск",
                            "Подольск (Московская область)",
                            "Дзержинский",
                            "Альметьевск",
                            "Вьетнам",
                            "Орел",
                            "не готов к переезду",
                            "готов к переезду",
                            "готов к командировкам",
                            "не готов к командировкам",
                            "Россия",
                            "Беларусь",
                            "Кыргызстан",
                            "Украина",
                            "Узбекистан",
                            "Россия, Украина",
                            "Китай, Россия",
                            "Казахстан",
                            "Беларусь, Россия",
                            "Россия, Узбекистан",
                            "Армения",
                            "Россия, Таджикистан",
                            "Нигерия",
                            "Индия",
                            "Ливан",
                            "Колумбия",
                            "Республика Северный Судан",
                            "Бангладеш",
                            "Азербайджан",
                            "Франция",
                            "Россия",
                            "no_data",
                            "Кыргызстан",
                            "Узбекистан",
                            "Казахстан, Россия",
                            "Беларусь",
                            "Украина",
                            "Казахстан",
                            "Россия, Украина",
                            "Беларусь, Россия",
                            "Беларусь, Россия, Украина",
                            "Беларусь, Германия, Россия",
                            "Турция",
                            "Великобритания, Италия, Россия, Франция",
                            "Великобритания, Россия",
                            "Колумбия, Россия",
                            "Россия, Турция",
                            "Русский Английский",
                            "Русский",
                            "Русский Английский Китайский",
                            "Русский Английский Корейский",
                            "Русский Английский Немецкий",
                            "Русский Английский Китайский Немецкий",
                            "Кыргызский Английский Турецкий Узбекский",
                            "Русский Армянский Немецкий",
                            "Русский Английский Итальянский",
                            "Русский Английский Французский",
                            "Русский Английский Иврит",
                            "Русский Английский Украинский",
                            "Русский Немецкий",
                            "Русский Английский Итальянский Немецкий",
                            "Русский Английский Сербский Украинский",
                            "Русский Английский Кумыкский",
                            "Русский Узбекский",
                            "Русский Английский Казахский",
                            "Китайский Английский Польский Русский",
                            "Русский Английский Испанский",
                            "Казахский Английский Русский",
                            "Русский Английский Армянский",
                            "Русский Английский Голландский",
                            "Русский Казахский",
                            "Русский Украинский",
                            "Казахский Русский",
                            "Английский Русский Испанский",
                            "Кыргызский Английский Русский Турецкий",
                            "Узбекский Английский Русский Турецкий",
                            "Русский Английский Татарский",
                            "Русский Английский Испанский Татарский",
                            "Белорусский Русский",
                            "Русский Английский Немецкий Украинский",
                            "Русский Английский Чешский",
                            "Казахский Английский Русский Турецкий",
                            "Белорусский Английский Русский",
                            "Русский Английский Белорусский",
                            "Русский Английский Турецкий",
                            "Русский Английский Румынский",
                            "Русский Английский Немецкий Французский",
                            "Таджикский Английский Персидский Русский Узбекский",
                            "Русский Английский Армянский Украинский",
                            "Русский Английский Арабский Турецкий",
                            "Русский Английский Норвежский",
                            "Русский Английский Греческий",
                            "Армянский",
                            "Казахский Английский",
                            "Английский Русский",
                            "Арабский Английский Французский Русский Испанский",
                            "Хинди Английский Тамильский",
                            "Хинди Английский Испанский Итальянский Немецкий Панджаби Русский Санскрит \
                             Урду Французский Японский",
                            "Арабский Английский Французский",
                            "Испанский Английский Русский",
                            "Русский Французский",
                            "Арабский Африкаанс Английский Французский Русский",
                            "Бенгальский Английский Русский",
                            "Русский Азербайджанский Английский Итальянский Немецкий Турецкий",
                            "Русский Английский Арабский Испанский Турецкий",
                            "Русский Армянский",
                            "Французский Английский Итальянский Русский Испанский",
                            "Русский Английский Немецкий Таджикский",
                            "Русский Английский Казахский Немецкий Украинский",
                            "Английский Немецкий",
                            "Русский Английский Испанский Французский",
                            "Английский",
                            "Русский Английский Греческий Испанский",
                            "Русский Английский Арабский Немецкий",
                            "Русский Английский Немецкий Турецкий",
                            "Русский Английский Украинский Французский",
                            "Русский Английский Испанский Итальянский Каталанский",
                            "Высшее образование",
                            "Среднее специальное образование",
                            "Среднее образование",
                            "no_data",
                            "не имеет значения",
                            "не более полутора часов",
                            "не более часа",
                            "полная занятость",
                            "проектная работа, полная занятость",
                            "частичная занятость, проектная работа, полная занятость",
                            "проектная работа, частичная занятость, полная занятость",
                            "частичная занятость, полная занятость",
                            "стажировка, полная занятость",
                            "стажировка, частичная занятость, полная занятость",
                            "стажировка, волонтерство, частичная занятость, проектная работа",
                            "частичная занятость",
                            "стажировка, частичная занятость, проектная работа, полная занятость",
                            "проектная работа, стажировка, частичная занятость, полная занятость",
                            "стажировка, волонтерство, частичная занятость, проектная работа, полная занятость",
                            "стажировка, частичная занятость",
                            "волонтерство, частичная занятость, проектная работа, полная занятость",
                            "частичная занятость, проектная работа",
                            "проектная работа, стажировка, волонтерство, частичная занятость, полная занятость",
                            "стажировка, проектная работа, полная занятость",
                            "проектная работа, волонтерство, частичная занятость, полная занятость",
                            "полный день",
                            "полный день, удаленная работа",
                            "гибкий график, полный день",
                            "гибкий график, полный день, сменный график, вахтовый метод, удаленная работа",
                            "удаленная работа, гибкий график, полный день, сменный график",
                            "полный день, сменный график, удаленная работа",
                            "гибкий график, полный день, сменный график, удаленная работа",
                            "удаленная работа",
                            "полный день, сменный график",
                            "гибкий график, полный день, удаленная работа",
                            "гибкий график, полный день, сменный график",
                            "удаленная работа, гибкий график, полный день",
                            "гибкий график, удаленная работа",
                            "гибкий график, сменный график, удаленная работа",
                            "удаленная работа, полный день",
                            "удаленная работа, гибкий график, сменный график",
                            "удаленная работа, сменный график",
                            "сменный график, удаленная работа",
                            "удаленная работа, гибкий график",
                            "удаленная работа, полный день, сменный график",
                            "вахтовый метод, удаленная работа, гибкий график, полный день, сменный график",
                            "гибкий график, сменный график, вахтовый метод, удаленная работа",
                            "гибкий график",
                            "полный день, вахтовый метод, удаленная работа",
                            "полный день, сменный график, вахтовый метод, удаленная работа",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "DIM",
                        "dtype": "int64",
                        "name": "Обязанности (embedding)",
                        "shape": (100,),
                        "task": LayerOutputTypeChoice.Text.value,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    3: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Метки классов",
                        "shape": (2,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["да", "нет"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "lukojl",
                "name": "Лукойл",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float64",
                        "name": "Вход 1",
                        "shape": (300, 4),
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Выход 2",
                        "shape": (5, 2),
                        "task": LayerOutputTypeChoice.Timeseries.value,
                        "num_classes": 2,
                        "classes_names": ["lukoil.csv", "lukoil.csv"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.timeseries.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "lukoil_trend",
                "name": "Лукойл (тренд)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float64",
                        "name": "Input 1",
                        "shape": (300, 4),
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Output 1",
                        "shape": (3,),
                        "task": LayerOutputTypeChoice.TimeseriesTrend.value,
                        "num_classes": 3,
                        "classes_names": ["Не изменился", "Вверх", "Вниз"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "tags": [
                    Tags.timeseriestrend.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "polimetall",
                "name": "Полиметалл",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float64",
                        "name": "Вход 1",
                        "shape": (30, 4),
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Выход 2",
                        "shape": (5, 2),
                        "task": LayerOutputTypeChoice.Timeseries.value,
                        "num_classes": 2,
                        "classes_names": ["POLYa_1d.csv", "POLYa_1d.csv"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.timeseries.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "trafik_sajta",
                "name": "Трафик сайта",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float64",
                        "name": "Вход 1",
                        "shape": (30, 1),
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "name": "Выход 2",
                        "shape": (2, 1),
                        "task": LayerOutputTypeChoice.Timeseries.value,
                        "num_classes": 1,
                        "classes_names": ["traff.csv"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.timeseries.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "bus_video_tracker",
                "name": "Видео для трекера",
                "architecture": ArchitectureChoice.Tracker.name,
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "3D",
                        "dtype": "uint8",
                        "name": "Input 1",
                        "shape": (480, 416, 416, 3),
                        "task": LayerInputTypeChoice.Video.value,
                        "num_classes": 1,
                        "classes_names": ["Videos"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "int64",
                        "name": "Tracker",
                        "shape": (1,),
                        "task": LayerOutputTypeChoice.Tracker.value,
                        "num_classes": 1,
                        "classes_names": ["Videos"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.video.value,
                    Tags.tracker.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "video_progulka_po_piteru",
                "name": "Видео_прогулка_по_Питеру",
                "architecture": ArchitectureChoice.Tracker.name,
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "3D",
                        "dtype": "uint8",
                        "name": "Вход 1",
                        "shape": (450, 480, 640, 3),
                        "task": LayerInputTypeChoice.Video.value,
                        "num_classes": 1,
                        "classes_names": ["video"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Выход 2",
                        "shape": (1,),
                        "task": LayerOutputTypeChoice.Tracker.value,
                        "num_classes": 1,
                        "classes_names": ["video"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.video.value,
                    Tags.tracker.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "audio_kniga_hobit_60sek",
                "name": "аудио_книга_Хобит_60сек",
                "architecture": ArchitectureChoice.Speech2Text.name,
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float32",
                        "name": "Вход 1",
                        "shape": (1323000,),
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 1,
                        "classes_names": ["audio"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Выход 2",
                        "shape": (1,),
                        "task": LayerOutputTypeChoice.Speech2Text.value,
                        "num_classes": 1,
                        "classes_names": ["audio"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.speech_to_text.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "teksty_pisatelej_1000",
                "name": "тексты_писателей_1000",
                "architecture": ArchitectureChoice.Text2Speech.name,
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "int32",
                        "name": "Вход 1",
                        "shape": (1000,),
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": 6,
                        "classes_names": [
                            "Бредбери",
                            "Булгаков",
                            "ОГенри",
                            "Саймак",
                            "Стругацкие",
                            "Фрай",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Выход 2",
                        "shape": (1,),
                        "task": LayerOutputTypeChoice.Text2Speech.value,
                        "num_classes": 6,
                        "classes_names": [
                            "Бредбери",
                            "Булгаков",
                            "ОГенри",
                            "Саймак",
                            "Стругацкие",
                            "Фрай",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.text.value,
                    Tags.text_to_speech.value,
                    Tags.terra_ai.value,
                ],
            },
            {
                "alias": "chess_tracker",
                "name": "Трекер шахматы",
                "architecture": ArchitectureChoice.Tracker.name,
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "3D",
                        "dtype": "uint8",
                        "name": "Вход 1",
                        "shape": (600, 480, 640, 3),
                        "task": LayerInputTypeChoice.Video.value,
                        "num_classes": 1,
                        "classes_names": ["video_chess"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "int32",
                        "name": "Выход 2",
                        "shape": (1,),
                        "task": LayerOutputTypeChoice.Tracker.value,
                        "num_classes": 1,
                        "classes_names": ["video_chess"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "tags": [
                    Tags.video.value,
                    Tags.tracker.value,
                    Tags.terra_ai.value,
                ],
            },
        ],
    },
    {
        "alias": "custom",
        "name": "Собственные",
    },
]
