"""
Предустановки датасетов
"""

from enum import Enum
from terra_ai.data.datasets.extra import (
    DatasetGroupChoice,
    LayerInputTypeChoice,
    LayerOutputTypeChoice,
    LayerEncodingChoice,
)
from terra_ai.data.modeling.extra import LayerTypeChoice
from terra_ai.data.modeling.layers.extra import ActivationChoice


class Tags(dict, Enum):
    image = {"alias": "image", "name": "Image"}
    classification = {"alias": "classification", "name": "Classification"}
    tensorflow_keras = {"alias": "tensorflow_keras", "name": "Tensorflow.keras"}
    text = {"alias": "text", "name": "Text"}
    english = {"alias": "english", "name": "English"}
    russian = {"alias": "russian", "name": "Russian"}
    regression = {"alias": "regression", "name": "Regression"}
    timeseries = {"alias": "timeseries", "name": "Timeseries"}
    terra_ai = {"alias": "terra_ai", "name": "Terra AI"}
    object_detection = {"alias": "object_detection", "name": "Object detection"}
    segmentation = {"alias": "segmentation", "name": "Segmentation"}
    text_segmentation = {"alias": "text_segmentation", "name": "Text Segmentation"}
    audio = {"alias": "audio", "name": "Audio"}
    smart_home = {"alias": "smart_home", "name": "Smart home"}
    trading = {"alias": "trading", "name": "Trading"}


OutputLayersDefaults = {
    LayerOutputTypeChoice.Classification: {
        "DIM": {
            "type": LayerTypeChoice.Dense.value,
            "activation": ActivationChoice.softmax.value,
        },
        "1D": {
            "type": LayerTypeChoice.Conv1D.value,
            "activation": ActivationChoice.softmax.value,
        },
    },
    LayerOutputTypeChoice.Segmentation: {
        "1D": {
            "type": LayerTypeChoice.Conv1D.value,
            "activation": ActivationChoice.softmax.value,
        },
        "2D": {
            "type": LayerTypeChoice.Conv2D.value,
            "activation": ActivationChoice.softmax.value,
        },
        "3D": {
            "type": LayerTypeChoice.Conv3D.value,
            "activation": ActivationChoice.softmax.value,
        },
    },
    LayerOutputTypeChoice.TextSegmentation: {
        "DIM": {
            "type": LayerTypeChoice.Dense.value,
            "activation": ActivationChoice.sigmoid.value,
        },
        "1D": {
            "type": LayerTypeChoice.Conv1D.value,
            "activation": ActivationChoice.sigmoid.value,
        },
    },
    LayerOutputTypeChoice.Regression: {
        "DIM": {
            "type": LayerTypeChoice.Dense.value,
            "activation": ActivationChoice.linear.value,
        }
    },
    LayerOutputTypeChoice.Timeseries: {
        "1D": {
            "type": LayerTypeChoice.Conv1D.value,
            "activation": ActivationChoice.linear.value,
        },
        "DIM": {
            "type": LayerTypeChoice.Dense.value,
            "activation": ActivationChoice.linear.value,
        },
    },
}

KerasInstructions = {
    "mnist": {
        1: {
            "1_image": {
                "cols_names": "1_image",
                "height": 28,
                "width": 28,
                "max_scaler": 1,
                "min_scaler": 0,
                "net": "convolutional",
                "put": 1,
                "put_type": "image",
                "scaler": "min_max_scaler",
            }
        },
        2: {
            "2_classification": {
                "one_hot_encoding": True,
                "type_processing": "categorical",
            }
        },
    },
    "fashion_mnist": {
        1: {
            "1_image": {
                "cols_names": "1_image",
                "height": 28,
                "width": 28,
                "max_scaler": 1,
                "min_scaler": 0,
                "net": "convolutional",
                "put": 1,
                "put_type": "image",
                "scaler": "min_max_scaler",
            }
        },
        2: {
            "2_classification": {
                "one_hot_encoding": True,
                "type_processing": "categorical",
            }
        },
    },
    "cifar10": {
        1: {
            "1_image": {
                "cols_names": "1_image",
                "height": 32,
                "width": 32,
                "max_scaler": 1,
                "min_scaler": 0,
                "net": "convolutional",
                "put": 1,
                "put_type": "image",
                "scaler": "min_max_scaler",
            }
        },
        2: {
            "2_classification": {
                "one_hot_encoding": True,
                "type_processing": "categorical",
            }
        },
    },
    "cifar100": {
        1: {
            "1_image": {
                "cols_names": "1_image",
                "height": 32,
                "width": 32,
                "max_scaler": 1,
                "min_scaler": 0,
                "net": "convolutional",
                "put": 1,
                "put_type": "image",
                "scaler": "min_max_scaler",
            }
        },
        2: {
            "2_classification": {
                "one_hot_encoding": True,
                "type_processing": "categorical",
            }
        },
    },
}
# Конфиги
DatasetsGroups = [
    {
        "alias": "keras",
        "name": "Keras",
        "datasets": [
            {
                "alias": "mnist",
                "name": "Mnist",
                "group": "keras",
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "name": "Вход 1",
                        "shape": (28, 28, 1),
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["mnist"],
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "name": "Выход 1",
                        "shape": (10,),
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 10,
                        "classes_names": [
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    }
                },
                "columns": {
                    1: {
                        "1_mnist": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "name": "Вход 1",
                            "shape": (28, 28, 1),
                            "task": LayerInputTypeChoice.Image.value,
                            "num_classes": 1,
                            "classes_names": ["mnist"],
                            "encoding": LayerEncodingChoice.none.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "name": "Выход 1",
                            "shape": (10,),
                            "task": LayerOutputTypeChoice.Classification.value,
                            "num_classes": 10,
                            "classes_names": [
                                "0",
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7",
                                "8",
                                "9",
                            ],
                            "encoding": LayerEncodingChoice.ohe.value,
                        }
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.tensorflow_keras.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "fashion_mnist",
                "name": "Fashion mnist",
                "group": DatasetGroupChoice.keras.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (28, 28, 1),
                        "name": "Вход 1",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["fashion_mnist"],
                        "num_classes": 1,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (10,),
                        "name": "Выход 1",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "T-shirt/top",
                            "Trouser",
                            "Pullover",
                            "Dress",
                            "Coat",
                            "Sandal",
                            "Shirt",
                            "Sneaker",
                            "Bag",
                            "Ankle boot",
                        ],
                        "num_classes": 10,
                        "encoding": "ohe",
                    }
                },
                "columns": {
                    1: {
                        "1_fashion_mnist": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "shape": (28, 28, 1),
                            "name": "Вход 1",
                            "task": LayerInputTypeChoice.Image.value,
                            "classes_names": ["fashion_mnist"],
                            "num_classes": 1,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "shape": (10,),
                            "name": "Выход 1",
                            "task": LayerOutputTypeChoice.Classification.value,
                            "classes_names": [
                                "T-shirt/top",
                                "Trouser",
                                "Pullover",
                                "Dress",
                                "Coat",
                                "Sandal",
                                "Shirt",
                                "Sneaker",
                                "Bag",
                                "Ankle boot",
                            ],
                            "num_classes": 10,
                            "encoding": "ohe",
                        }
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.tensorflow_keras.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "cifar10",
                "name": "Cifar 10",
                "group": DatasetGroupChoice.keras.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (32, 32, 3),
                        "name": "Вход 1",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["cifar10"],
                        "num_classes": 1,
                    }
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (10,),
                        "name": "Выход 1",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "airplane",
                            "automobile",
                            "bird",
                            "cat",
                            "deer",
                            "dog",
                            "frog",
                            "horse",
                            "ship",
                            "truck",
                        ],
                        "num_classes": 10,
                        "encoding": "ohe",
                    }
                },
                "columns": {
                    1: {
                        "1_cifar10": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "shape": (32, 32, 3),
                            "name": "Вход 1",
                            "task": LayerInputTypeChoice.Image.value,
                            "classes_names": ["cifar10"],
                            "num_classes": 1,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "shape": (10,),
                            "name": "Выход 1",
                            "task": LayerOutputTypeChoice.Classification.value,
                            "classes_names": [
                                "airplane",
                                "automobile",
                                "bird",
                                "cat",
                                "deer",
                                "dog",
                                "frog",
                                "horse",
                                "ship",
                                "truck",
                            ],
                            "num_classes": 10,
                            "encoding": "ohe",
                        }
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.tensorflow_keras.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "cifar100",
                "name": "Сifar 100",
                "group": DatasetGroupChoice.keras.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (32, 32, 3),
                        "name": "Вход 1",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["cifar100"],
                        "num_classes": 1,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (100,),
                        "name": "Выход 1",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "apple",
                            "aquarium_fish",
                            "baby",
                            "bear",
                            "beaver",
                            "bed",
                            "bee",
                            "beetle",
                            "bicycle",
                            "bottle",
                            "bowl",
                            "boy",
                            "bridge",
                            "bus",
                            "butterfly",
                            "camel",
                            "can",
                            "castle",
                            "caterpillar",
                            "cattle",
                            "chair",
                            "chimpanzee",
                            "clock",
                            "cloud",
                            "cockroach",
                            "couch",
                            "cra",
                            "crocodile",
                            "cup",
                            "dinosaur",
                            "dolphin",
                            "elephant",
                            "flatfish",
                            "forest",
                            "fox",
                            "girl",
                            "hamster",
                            "house",
                            "kangaroo",
                            "keyboard",
                            "lamp",
                            "lawn_mower",
                            "leopard",
                            "lion",
                            "lizard",
                            "lobster",
                            "man",
                            "maple_tree",
                            "motorcycle",
                            "mountain",
                            "mouse",
                            "mushroom",
                            "oak_tree",
                            "orange",
                            "orchid",
                            "otter",
                            "palm_tree",
                            "pear",
                            "pickup_truck",
                            "pine_tree",
                            "plain",
                            "plate",
                            "poppy",
                            "porcupine",
                            "possum",
                            "rabbit",
                            "raccoon",
                            "ray",
                            "road",
                            "rocket",
                            "rose",
                            "sea",
                            "seal",
                            "shark",
                            "shrew",
                            "skunk",
                            "skyscraper",
                            "snail",
                            "snake",
                            "spider",
                            "squirrel",
                            "streetcar",
                            "sunflower",
                            "sweet_pepper",
                            "table",
                            "tank",
                            "telephone",
                            "television",
                            "tiger",
                            "tractor",
                            "train",
                            "trout",
                            "tulip",
                            "turtle",
                            "wardrobe",
                            "whale",
                            "willow_tree",
                            "wolf",
                            "woman",
                            "worm",
                        ],
                        "num_classes": 100,
                        "encoding": "ohe",
                    }
                },
                "columns": {
                    1: {
                        "1_cifar100": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "shape": (32, 32, 3),
                            "name": "Вход 1",
                            "task": LayerInputTypeChoice.Image.value,
                            "classes_names": ["cifar100"],
                            "num_classes": 1,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "shape": (100,),
                            "name": "Выход 1",
                            "task": LayerOutputTypeChoice.Classification.value,
                            "classes_names": [
                                "apple",
                                "aquarium_fish",
                                "baby",
                                "bear",
                                "beaver",
                                "bed",
                                "bee",
                                "beetle",
                                "bicycle",
                                "bottle",
                                "bowl",
                                "boy",
                                "bridge",
                                "bus",
                                "butterfly",
                                "camel",
                                "can",
                                "castle",
                                "caterpillar",
                                "cattle",
                                "chair",
                                "chimpanzee",
                                "clock",
                                "cloud",
                                "cockroach",
                                "couch",
                                "cra",
                                "crocodile",
                                "cup",
                                "dinosaur",
                                "dolphin",
                                "elephant",
                                "flatfish",
                                "forest",
                                "fox",
                                "girl",
                                "hamster",
                                "house",
                                "kangaroo",
                                "keyboard",
                                "lamp",
                                "lawn_mower",
                                "leopard",
                                "lion",
                                "lizard",
                                "lobster",
                                "man",
                                "maple_tree",
                                "motorcycle",
                                "mountain",
                                "mouse",
                                "mushroom",
                                "oak_tree",
                                "orange",
                                "orchid",
                                "otter",
                                "palm_tree",
                                "pear",
                                "pickup_truck",
                                "pine_tree",
                                "plain",
                                "plate",
                                "poppy",
                                "porcupine",
                                "possum",
                                "rabbit",
                                "raccoon",
                                "ray",
                                "road",
                                "rocket",
                                "rose",
                                "sea",
                                "seal",
                                "shark",
                                "shrew",
                                "skunk",
                                "skyscraper",
                                "snail",
                                "snake",
                                "spider",
                                "squirrel",
                                "streetcar",
                                "sunflower",
                                "sweet_pepper",
                                "table",
                                "tank",
                                "telephone",
                                "television",
                                "tiger",
                                "tractor",
                                "train",
                                "trout",
                                "tulip",
                                "turtle",
                                "wardrobe",
                                "whale",
                                "willow_tree",
                                "wolf",
                                "woman",
                                "worm",
                            ],
                            "num_classes": 100,
                            "encoding": "ohe",
                        }
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.tensorflow_keras.value,
                ],
                "use_generator": False,
            },
        ],
    },
    {
        "alias": "terra",
        "name": "Terra",
        "datasets": [
            # {
            #     "alias": "sberbank_timeseries",
            #     "name": "Акции сбербанка",
            #     "group": DatasetGroupChoice.terra.value,
            #     "tags": [
            #         Tags.timeseries.value,
            #         Tags.terra_ai.value,
            #     ],
            #     "inputs": {
            #         1: {
            #             "datatype": "1D",
            #             "dtype": "float32",
            #             "shape": (4, 30),
            #             "name": "Вход 1",
            #             "task": LayerInputTypeChoice.Dataframe.value,
            #             "classes_names": [],
            #             "num_classes": 1,
            #             "encoding": LayerEncodingChoice.none.value,
            #         },
            #     },
            #     "outputs": {
            #         2: {
            #             "datatype": "1D",
            #             "dtype": "float32",
            #             "shape": (2, 2),
            #             "name": "Выход 1",
            #             "task": LayerOutputTypeChoice.Timeseries.value,
            #             "classes_names": [],
            #             "num_classes": 1,
            #         },
            #     },
            #     "columns": {
            #         1: {
            #             "1_1": {
            #                 "datatype": "DIM",
            #                 "dtype": "float64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Input 1",
            #                 "num_classes": 1,
            #                 "shape": (30,),
            #                 "task": "Scaler",
            #             },
            #             "1_2": {
            #                 "datatype": "DIM",
            #                 "dtype": "float64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Input 1",
            #                 "num_classes": 1,
            #                 "shape": (30,),
            #                 "task": "Scaler",
            #             },
            #             "1_3": {
            #                 "datatype": "DIM",
            #                 "dtype": "float64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Input 1",
            #                 "num_classes": 1,
            #                 "shape": (30,),
            #                 "task": "Scaler",
            #             },
            #             "1_4": {
            #                 "datatype": "DIM",
            #                 "dtype": "float64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Input 1",
            #                 "num_classes": 1,
            #                 "shape": (30,),
            #                 "task": "Scaler",
            #             },
            #         },
            #         2: {
            #             "2_3": {
            #                 "datatype": "DIM",
            #                 "dtype": "float64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Output 1",
            #                 "num_classes": 1,
            #                 "shape": (2,),
            #                 "task": "Scaler",
            #             },
            #             "2_4": {
            #                 "datatype": "DIM",
            #                 "dtype": "float64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Output 1",
            #                 "num_classes": 1,
            #                 "shape": (2,),
            #                 "task": "Scaler",
            #             },
            #         },
            #     },
            #     "use_generator": False,
            # },
            {
                "alias": "cars",
                "name": "Автомобили",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (120, 176, 3),
                        "name": "Изображения автомобилей",
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 3,
                        "classes_names": ["Мерседес", "Рено", "Феррари"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (3,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 3,
                        "classes_names": ["Мерседес", "Рено", "Феррари"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_image": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "name": "Изображения автомобилей",
                            "shape": (120, 176, 3),
                            "task": LayerInputTypeChoice.Image.value,
                            "num_classes": 3,
                            "classes_names": ["Мерседес", "Рено", "Феррари"],
                            "encoding": LayerEncodingChoice.ohe.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "name": "Метки классов",
                            "shape": (3,),
                            "task": LayerOutputTypeChoice.Classification.value,
                            "num_classes": 3,
                            "classes_names": ["Мерседес", "Рено", "Феррари"],
                            "encoding": LayerEncodingChoice.ohe.value,
                        }
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "cars_30",
                "name": "Автомобили (30 классов)",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (48, 96, 3),
                        "name": "Изображения автомобилей",
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 30,
                        "classes_names": [
                            "Audi",
                            "BMW",
                            "Bentley",
                            "Cadillac",
                            "Chevrolet",
                            "Citroen",
                            "Dodge",
                            "Fiat",
                            "Ford",
                            "GMC",
                            "Honda",
                            "Infiniti",
                            "Jaguar",
                            "Jeep",
                            "KIA",
                            "Land_Rover",
                            "Lexus",
                            "Mazda",
                            "Mercedes_Benz",
                            "Nissan",
                            "Opel",
                            "Peugeot",
                            "Porsche",
                            "Renault",
                            "Rolls_Royce",
                            "Skoda",
                            "Subaru",
                            "Toyota",
                            "Volkswagen",
                            "Volvo",
                        ],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (30,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 30,
                        "classes_names": [
                            "Audi",
                            "BMW",
                            "Bentley",
                            "Cadillac",
                            "Chevrolet",
                            "Citroen",
                            "Dodge",
                            "Fiat",
                            "Ford",
                            "GMC",
                            "Honda",
                            "Infiniti",
                            "Jaguar",
                            "Jeep",
                            "KIA",
                            "Land_Rover",
                            "Lexus",
                            "Mazda",
                            "Mercedes_Benz",
                            "Nissan",
                            "Opel",
                            "Peugeot",
                            "Porsche",
                            "Renault",
                            "Rolls_Royce",
                            "Skoda",
                            "Subaru",
                            "Toyota",
                            "Volkswagen",
                            "Volvo",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_image": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "name": "Изображения автомобилей",
                            "shape": (48, 96, 3),
                            "task": LayerInputTypeChoice.Image.value,
                            "num_classes": 30,
                            "classes_names": [
                                "Audi",
                                "BMW",
                                "Bentley",
                                "Cadillac",
                                "Chevrolet",
                                "Citroen",
                                "Dodge",
                                "Fiat",
                                "Ford",
                                "GMC",
                                "Honda",
                                "Infiniti",
                                "Jaguar",
                                "Jeep",
                                "KIA",
                                "Land_Rover",
                                "Lexus",
                                "Mazda",
                                "Mercedes_Benz",
                                "Nissan",
                                "Opel",
                                "Peugeot",
                                "Porsche",
                                "Renault",
                                "Rolls_Royce",
                                "Skoda",
                                "Subaru",
                                "Toyota",
                                "Volkswagen",
                                "Volvo",
                            ],
                            "encoding": LayerEncodingChoice.ohe.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "name": "Метки классов",
                            "shape": (30,),
                            "task": LayerOutputTypeChoice.Classification.value,
                            "num_classes": 30,
                            "classes_names": [
                                "Audi",
                                "BMW",
                                "Bentley",
                                "Cadillac",
                                "Chevrolet",
                                "Citroen",
                                "Dodge",
                                "Fiat",
                                "Ford",
                                "GMC",
                                "Honda",
                                "Infiniti",
                                "Jaguar",
                                "Jeep",
                                "KIA",
                                "Land_Rover",
                                "Lexus",
                                "Mazda",
                                "Mercedes_Benz",
                                "Nissan",
                                "Opel",
                                "Peugeot",
                                "Porsche",
                                "Renault",
                                "Rolls_Royce",
                                "Skoda",
                                "Subaru",
                                "Toyota",
                                "Volkswagen",
                                "Volvo",
                            ],
                            "encoding": LayerEncodingChoice.ohe.value,
                        }
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "airplane",
                "name": "Самолеты",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (128, 160, 3),
                        "name": "Изображения самолетов",
                        "task": LayerInputTypeChoice.Image.value,
                        "num_classes": 1,
                        "classes_names": ["Самолеты"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "2D",
                        "dtype": "uint8",
                        "shape": (128, 160, 2),
                        "name": "Маски сегментации",
                        "task": LayerOutputTypeChoice.Segmentation.value,
                        "num_classes": 2,
                        "classes_names": ["Небо", "Самолет"],
                        "classes_colors": ["black", "red"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "tags": [
                    Tags.image.value,
                    Tags.segmentation.value,
                    Tags.terra_ai.value,
                ],
                "columns": {
                    1: {
                        "1_image": {
                            "datatype": "2D",
                            "dtype": "float32",
                            "shape": (128, 160, 3),
                            "name": "Изображения самолетов",
                            "task": LayerInputTypeChoice.Image.value,
                            "num_classes": 1,
                            "classes_names": ["Самолеты"],
                            "encoding": LayerEncodingChoice.ohe.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "shape": (128, 160, 2),
                            "name": "Маски сегментации",
                            "task": LayerOutputTypeChoice.Segmentation.value,
                            "num_classes": 2,
                            "classes_names": ["Небо", "Самолет"],
                            "encoding": LayerEncodingChoice.ohe.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "guby",
                "name": "Губы",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.image.value,
                    Tags.segmentation.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (128, 160, 3),
                        "name": "Изображения",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["Оригинальные изображения"],
                        "num_classes": 1,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "2D",
                        "dtype": "uint8",
                        "shape": (128, 160, 2),
                        "name": "Маски сегментации",
                        "task": LayerOutputTypeChoice.Segmentation.value,
                        "classes_names": ["Фон", "Губы"],
                        "classes_colors": ["black", "lime"],
                        "num_classes": 2,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_image": {
                            "classes_names": ["Оригинальные изображения"],
                            "datatype": "2D",
                            "dtype": "float32",
                            "encoding": "none",
                            "name": "Изображения",
                            "num_classes": 1,
                            "shape": (128, 160, 3),
                            "task": LayerInputTypeChoice.Image.value,
                        }
                    },
                    2: {
                        "2_segmentation": {
                            "classes_colors": ["black", "lime"],
                            "classes_names": ["Лицо", "Губы"],
                            "datatype": "2D",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Маски сегментации",
                            "num_classes": 2,
                            "shape": (128, 160, 2),
                            "task": LayerOutputTypeChoice.Segmentation.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "ljudi",
                "name": "Люди",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.image.value,
                    Tags.segmentation.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (160, 128, 3),
                        "name": "Вход 1",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["Оригинальные"],
                        "num_classes": 1,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "2D",
                        "dtype": "uint8",
                        "shape": (160, 128, 2),
                        "name": "Выход 2",
                        "task": LayerOutputTypeChoice.Segmentation.value,
                        "classes_names": ["Окружение", "Человек"],
                        "classes_colors": ["black", "white"],
                        "num_classes": 2,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_image": {
                            "classes_names": ["Оригинальные"],
                            "datatype": "2D",
                            "dtype": "float32",
                            "encoding": "none",
                            "name": "Вход 1",
                            "num_classes": 1,
                            "shape": (160, 128, 3),
                            "task": LayerInputTypeChoice.Image.value,
                        }
                    },
                    2: {
                        "2_segmentation": {
                            "classes_colors": ["black", "white"],
                            "classes_names": ["Окружение", "Человек"],
                            "datatype": "2D",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Выход 2",
                            "num_classes": 2,
                            "shape": (160, 128, 2),
                            "task": LayerOutputTypeChoice.Segmentation.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "monety",
                "name": "Монеты",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.image.value,
                    Tags.segmentation.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (160, 160, 3),
                        "name": "Вход 1",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["Оригинальные"],
                        "num_classes": 1,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "2D",
                        "dtype": "uint8",
                        "shape": (160, 160, 2),
                        "name": "Выход 2",
                        "task": LayerOutputTypeChoice.Segmentation.value,
                        "classes_names": ["Окружение", "Человек"],
                        "classes_colors": ["#3e371a", "#47d535"],
                        "num_classes": 2,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_image": {
                            "classes_names": ["Оригинальные"],
                            "datatype": "2D",
                            "dtype": "float32",
                            "encoding": "none",
                            "name": "Вход 1",
                            "num_classes": 1,
                            "shape": (160, 160, 3),
                            "task": LayerInputTypeChoice.Image.value,
                        }
                    },
                    2: {
                        "2_segmentation": {
                            "classes_colors": ["#3e371a", "#47d535"],
                            "classes_names": ["Окружение", "Человек"],
                            "datatype": "2D",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Выход 2",
                            "num_classes": 2,
                            "shape": (160, 160, 2),
                            "task": LayerOutputTypeChoice.Segmentation.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "bus_passengers",
                "name": "Пассажиры автобусов",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (200, 100, 3),
                        "name": "Изображения",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["Входящий", "Выходящий"],
                        "num_classes": 2,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (2,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["Входящий", "Выходящий"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_image": {
                            "classes_names": ["Входящий", "Выходящий"],
                            "datatype": "2D",
                            "dtype": "float32",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Изображения",
                            "num_classes": 2,
                            "shape": (200, 100, 3),
                            "task": LayerInputTypeChoice.Image.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": ["Входящий", "Выходящий"],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 2,
                            "shape": (2,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "heads",
                "name": "Пассажиры автобусов (попарно)",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (100, 100, 3),
                        "name": "Пассажир 1",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["Heads.csv"],
                        "num_classes": 1,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (100, 100, 3),
                        "name": "Пассажир 2",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": ["Heads.csv"],
                        "num_classes": 1,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    3: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (2,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["Не совпадают", "Совпадают"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_First image": {
                            "classes_names": ["Heads.csv"],
                            "datatype": "2D",
                            "dtype": "float32",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Пассажир 1",
                            "num_classes": 1,
                            "shape": (100, 100, 3),
                            "task": LayerInputTypeChoice.Image.value,
                        }
                    },
                    2: {
                        "2_Second image": {
                            "classes_names": ["Heads.csv"],
                            "datatype": "2D",
                            "dtype": "float32",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Пассажир 2",
                            "num_classes": 1,
                            "shape": (100, 100, 3),
                            "task": LayerInputTypeChoice.Image.value,
                        }
                    },
                    3: {
                        "3_Label": {
                            "classes_names": ["Не совпадают", "Совпадают"],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метка класса",
                            "num_classes": 2,
                            "shape": (2,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "marki_moloka",
                "name": "Марки молока",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.image.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "2D",
                        "dtype": "float32",
                        "shape": (200, 100, 3),
                        "name": "Изображения",
                        "task": LayerInputTypeChoice.Image.value,
                        "classes_names": [
                            "Parmalat",
                            "Кубанская бурёнка",
                            "Семейный формат",
                        ],
                        "num_classes": 3,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (3,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": [
                            "Parmalat",
                            "Кубанская бурёнка",
                            "Семейный формат",
                        ],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_image": {
                            "classes_names": [
                                "Parmalat",
                                "Кубанская бурёнка",
                                "Семейный формат",
                            ],
                            "datatype": "2D",
                            "dtype": "float32",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Изображения",
                            "num_classes": 2,
                            "shape": (200, 100, 3),
                            "task": LayerInputTypeChoice.Image.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": [
                                "Parmalat",
                                "Кубанская бурёнка",
                                "Семейный формат",
                            ],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 3,
                            "shape": (3,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "symptoms",
                "name": "Симптомы",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "uint32",
                        "shape": (100,),
                        "name": "Симптомы",
                        "task": LayerInputTypeChoice.Text.value,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "num_classes": 10,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (10,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "num_classes": 10,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_text": {
                            "classes_names": [
                                "Аппендицит",
                                "Гастрит",
                                "Гепатит",
                                "Дуоденит",
                                "Колит",
                                "Панкреатит",
                                "Холецистит",
                                "Эзофагит",
                                "Энтерит",
                                "Язва",
                            ],
                            "datatype": "DIM",
                            "dtype": "int64",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Симптомы",
                            "num_classes": 10,
                            "shape": (100,),
                            "task": LayerInputTypeChoice.Text.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": [
                                "Аппендицит",
                                "Гастрит",
                                "Гепатит",
                                "Дуоденит",
                                "Колит",
                                "Панкреатит",
                                "Холецистит",
                                "Эзофагит",
                                "Энтерит",
                                "Язва",
                            ],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 10,
                            "shape": (10,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "writers",
                "name": "Тексты писателей",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "int64",
                        "shape": (1000,),
                        "name": "Тексты писателей",
                        "task": LayerInputTypeChoice.Text.value,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "num_classes": 6,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (6,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "num_classes": 6,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_text": {
                            "classes_names": [
                                "Булгаков",
                                "Клиффорд Саймак",
                                "Макс Фрай",
                                "О. Генри",
                                "Рэй Брэдберри",
                                "Стругацкие",
                            ],
                            "datatype": "DIM",
                            "dtype": "int64",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Тексты писателей",
                            "num_classes": 6,
                            "shape": (1000,),
                            "task": LayerInputTypeChoice.Text.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": [
                                "Булгаков",
                                "Клиффорд Саймак",
                                "Макс Фрай",
                                "О. Генри",
                                "Рэй Брэдберри",
                                "Стругацкие",
                            ],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 6,
                            "shape": (6,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "tesla",
                "name": "Отзывы на Теслу",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "int64",
                        "shape": (100,),
                        "name": "Отзывы",
                        "task": LayerInputTypeChoice.Text.value,
                        "classes_names": ["Негативные", "Позитивные"],
                        "num_classes": 2,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (2,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": ["Негативные", "Позитивные"],
                        "num_classes": 2,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_text": {
                            "classes_names": ["Негативные", "Позитивные"],
                            "datatype": "DIM",
                            "dtype": "int64",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Отзывы",
                            "num_classes": 2,
                            "shape": (100,),
                            "task": LayerInputTypeChoice.Text.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": ["Негативные", "Позитивные"],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 2,
                            "shape": (2,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "symptoms_bow",
                "name": "Симптомы (bow)",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (1200,),
                        "name": "Симптомы",
                        "task": LayerInputTypeChoice.Text.value,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "num_classes": 10,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (10,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "num_classes": 10,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_text": {
                            "classes_names": [
                                "Аппендицит",
                                "Гастрит",
                                "Гепатит",
                                "Дуоденит",
                                "Колит",
                                "Панкреатит",
                                "Холецистит",
                                "Эзофагит",
                                "Энтерит",
                                "Язва",
                            ],
                            "datatype": "DIM",
                            "dtype": "float64",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Симптомы",
                            "num_classes": 10,
                            "shape": (1200,),
                            "task": LayerInputTypeChoice.Text.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": [
                                "Аппендицит",
                                "Гастрит",
                                "Гепатит",
                                "Дуоденит",
                                "Колит",
                                "Панкреатит",
                                "Холецистит",
                                "Эзофагит",
                                "Энтерит",
                                "Язва",
                            ],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 10,
                            "shape": (10,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "writers_bow",
                "name": "Тексты писателей (bow)",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (50000,),
                        "name": "Тексты писателей",
                        "task": LayerInputTypeChoice.Text.value,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "num_classes": 6,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (6,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "num_classes": 6,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_text": {
                            "classes_names": [
                                "Булгаков",
                                "Клиффорд Саймак",
                                "Макс Фрай",
                                "О. Генри",
                                "Рэй Брэдберри",
                                "Стругацкие",
                            ],
                            "datatype": "DIM",
                            "dtype": "float64",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Тексты писателей",
                            "num_classes": 6,
                            "shape": (50000,),
                            "task": LayerInputTypeChoice.Text.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": [
                                "Булгаков",
                                "Клиффорд Саймак",
                                "Макс Фрай",
                                "О. Генри",
                                "Рэй Брэдберри",
                                "Стругацкие",
                            ],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 6,
                            "shape": (6,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "tesla_bow",
                "name": "Отзывы на Теслу (bow)",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (20000,),
                        "name": "Отзывы",
                        "task": LayerInputTypeChoice.Text.value,
                        "classes_names": ["Негативные", "Позитивные"],
                        "num_classes": 2,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (2,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": ["Негативные", "Позитивные"],
                        "num_classes": 2,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_text": {
                            "classes_names": ["Негативные", "Позитивные"],
                            "datatype": "DIM",
                            "dtype": "float64",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Отзывы",
                            "num_classes": 2,
                            "shape": (20000,),
                            "task": LayerInputTypeChoice.Text.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": ["Негативные", "Позитивные"],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 2,
                            "shape": (2,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "symptoms_w2v",
                "name": "Симптомы (w2v)",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "shape": (100, 200),
                        "name": "Симптомы",
                        "task": LayerInputTypeChoice.Text.value,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "num_classes": 10,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (10,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "Аппендицит",
                            "Гастрит",
                            "Гепатит",
                            "Дуоденит",
                            "Колит",
                            "Панкреатит",
                            "Холецистит",
                            "Эзофагит",
                            "Энтерит",
                            "Язва",
                        ],
                        "num_classes": 10,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_text": {
                            "classes_names": [
                                "Аппендицит",
                                "Гастрит",
                                "Гепатит",
                                "Дуоденит",
                                "Колит",
                                "Панкреатит",
                                "Холецистит",
                                "Эзофагит",
                                "Энтерит",
                                "Язва",
                            ],
                            "datatype": "1D",
                            "dtype": "float32",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Симптомы",
                            "num_classes": 10,
                            "shape": (100, 200),
                            "task": LayerInputTypeChoice.Text.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": [
                                "Аппендицит",
                                "Гастрит",
                                "Гепатит",
                                "Дуоденит",
                                "Колит",
                                "Панкреатит",
                                "Холецистит",
                                "Эзофагит",
                                "Энтерит",
                                "Язва",
                            ],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 10,
                            "shape": (10,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "writers_w2v",
                "name": "Тексты писателей (w2v)",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "shape": (1000, 200),
                        "name": "Тексты писателей",
                        "task": LayerInputTypeChoice.Text.value,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "num_classes": 6,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (6,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": [
                            "Булгаков",
                            "Клиффорд Саймак",
                            "Макс Фрай",
                            "О. Генри",
                            "Рэй Брэдберри",
                            "Стругацкие",
                        ],
                        "num_classes": 6,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_text": {
                            "classes_names": [
                                "Булгаков",
                                "Клиффорд Саймак",
                                "Макс Фрай",
                                "О. Генри",
                                "Рэй Брэдберри",
                                "Стругацкие",
                            ],
                            "datatype": "1D",
                            "dtype": "float32",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Тексты писателей",
                            "num_classes": 6,
                            "shape": (1000, 200),
                            "task": LayerInputTypeChoice.Text.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": [
                                "Булгаков",
                                "Клиффорд Саймак",
                                "Макс Фрай",
                                "О. Генри",
                                "Рэй Брэдберри",
                                "Стругацкие",
                            ],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 6,
                            "shape": (6,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "tesla_w2v",
                "name": "Отзывы на Теслу (w2v)",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "shape": (100, 200),
                        "name": "Отзывы",
                        "task": LayerInputTypeChoice.Text.value,
                        "classes_names": ["Негативные", "Позитивные"],
                        "num_classes": 2,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (2,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "classes_names": ["Негативные", "Позитивные"],
                        "num_classes": 2,
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {
                        "1_text": {
                            "classes_names": ["Негативные", "Позитивные"],
                            "datatype": "1D",
                            "dtype": "float32",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Отзывы",
                            "num_classes": 2,
                            "shape": (100, 200),
                            "task": LayerInputTypeChoice.Text.value,
                        }
                    },
                    2: {
                        "2_classification": {
                            "classes_names": ["Негативные", "Позитивные"],
                            "datatype": "DIM",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.ohe.value,
                            "name": "Метки классов",
                            "num_classes": 2,
                            "shape": (2,),
                            "task": LayerOutputTypeChoice.Classification.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "docs",
                "name": "Договоры",
                "group": DatasetGroupChoice.terra.value,
                "tags": [
                    Tags.text.value,
                    Tags.text_segmentation.value,
                    Tags.russian.value,
                    Tags.terra_ai.value,
                ],
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "int64",
                        "shape": (100,),
                        "name": "Договора",
                        "task": LayerInputTypeChoice.Text.value,
                        "encoding": LayerEncodingChoice.none.value,
                        "classes_names": ["Договора432"],
                        "num_classes": 1,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "1D",
                        "dtype": "uint8",
                        "shape": (100, 6),
                        "name": "Сегментация договоров",
                        "task": LayerOutputTypeChoice.TextSegmentation.value,
                        "encoding": LayerEncodingChoice.multi.value,
                        "classes_names": [
                            "<s1>",
                            "<s2>",
                            "<s3>",
                            "<s4>",
                            "<s5>",
                            "<s6>",
                        ],
                        "num_classes": 6,
                    },
                },
                "columns": {
                    1: {
                        "1_text": {
                            "classes_names": ["Договора432"],
                            "datatype": "DIM",
                            "dtype": "int64",
                            "encoding": LayerEncodingChoice.none.value,
                            "name": "Договора",
                            "num_classes": 1,
                            "shape": [100],
                            "task": LayerInputTypeChoice.Text.value,
                        }
                    },
                    "2": {
                        "2_text_segmentation": {
                            "classes_names": [
                                "<s1>",
                                "<s2>",
                                "<s3>",
                                "<s4>",
                                "<s5>",
                                "<s6>",
                            ],
                            "datatype": "1D",
                            "dtype": "uint8",
                            "encoding": LayerEncodingChoice.multi.value,
                            "name": "Сегментация договоров",
                            "num_classes": 6,
                            "shape": [100, 6],
                            "task": LayerOutputTypeChoice.TextSegmentation.value,
                        }
                    },
                },
                "use_generator": False,
            },
            {
                "alias": "smarthome",
                "name": "Умный дом",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "shape": (44, 20),
                        "name": "MFCC",
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 4,
                        "classes_names": ["1_Кондиционер", "2_Свет", "3_Телевизор", "4_Шум"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "shape": (44, 12),
                        "name": "Chroma STFT",
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 4,
                        "classes_names": ["1_Кондиционер", "2_Свет", "3_Телевизор", "4_Шум"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "shape": (44,),
                        "name": "RMS",
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 4,
                        "classes_names": ["1_Кондиционер", "2_Свет", "3_Телевизор", "4_Шум"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    4: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (4,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 4,
                        "classes_names": ["1_Кондиционер", "2_Свет", "3_Телевизор", "4_Шум"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {'1_audio': {'classes_colors': None,
                                    'classes_names': ["1_Кондиционер", "2_Свет", "3_Телевизор", "4_Шум"],
                                    'datatype': '1D',
                                    'dtype': 'float32',
                                    'encoding': 'none',
                                    'name': 'MFCC',
                                    'num_classes': 4,
                                    'shape': [44, 20],
                                    'task': 'Audio'}
                        },
                    2: {'2_audio': {'classes_colors': None,
                                    'classes_names': ["1_Кондиционер", "2_Свет", "3_Телевизор", "4_Шум"],
                                    'datatype': '1D',
                                    'dtype': 'float32',
                                    'encoding': 'none',
                                    'name': 'Chroma STFT',
                                    'num_classes': 4,
                                    'shape': [44, 12],
                                    'task': 'Audio'}
                        },
                    3: {'3_audio': {'classes_colors': None,
                                    'classes_names': ["1_Кондиционер", "2_Свет", "3_Телевизор", "4_Шум"],
                                    'datatype': 'DIM',
                                    'dtype': 'float32',
                                    'encoding': 'none',
                                    'name': 'RMS',
                                    'num_classes': 4,
                                    'shape': [44],
                                    'task': 'Audio'}
                        },
                    4: {'4_classification': {'classes_colors': None,
                                             'classes_names': ["1_Кондиционер", "2_Свет", "3_Телевизор", "4_Шум"],
                                             'datatype': 'DIM',
                                             'dtype': 'uint8',
                                             'encoding': 'ohe',
                                             'name': 'Метки классов',
                                             'num_classes': 4,
                                             'shape': [4],
                                             'task': 'Classification'}
                        }
                },
                "tags": [
                    Tags.audio.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "audio_genres",
                "name": "Жанры музыки",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "shape": (1292, 20),
                        "name": "MFCC",
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 10,
                        "classes_names": ["Блюз", "Джазз", "Диско", "Кантри", "Классика",
                                          "Металл", "Поп", "Регги", "Рок", "ХипХоп"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "shape": (1292, 12),
                        "name": "Chroma STFT",
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 10,
                        "classes_names": ["Блюз", "Джазз", "Диско", "Кантри", "Классика",
                                          "Металл", "Поп", "Регги", "Рок", "ХипХоп"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "DIM",
                        "dtype": "float32",
                        "shape": (1292,),
                        "name": "RMS",
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 10,
                        "classes_names": ["Блюз", "Джазз", "Диско", "Кантри", "Классика",
                                          "Металл", "Поп", "Регги", "Рок", "ХипХоп"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    4: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (10,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 10,
                        "classes_names": ["Блюз", "Джазз", "Диско", "Кантри", "Классика",
                                          "Металл", "Поп", "Регги", "Рок", "ХипХоп"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {'1_audio': {'classes_colors': None,
                                    'classes_names': ['Блюз', 'Джазз', 'Диско', 'Кантри', 'Классика',
                                                      'Металл', 'Поп', 'Регги', 'Рок', 'ХипХоп'],
                                    'datatype': '1D',
                                    'dtype': 'float32',
                                    'encoding': 'none',
                                    'name': 'MFCC',
                                    'num_classes': 10,
                                    'shape': [1292, 20],
                                    'task': 'Audio'}
                        },
                    2: {'2_audio': {'classes_colors': None,
                                    'classes_names': ['Блюз', 'Джазз', 'Диско', 'Кантри', 'Классика',
                                                      'Металл', 'Поп', 'Регги', 'Рок', 'ХипХоп'],
                                    'datatype': '1D',
                                    'dtype': 'float32',
                                    'encoding': 'none',
                                    'name': 'Chroma STFT',
                                    'num_classes': 10,
                                    'shape': [1292, 12],
                                    'task': 'Audio'}
                        },
                    3: {'3_audio': {'classes_colors': None,
                                    'classes_names': ['Блюз', 'Джазз', 'Диско', 'Кантри', 'Классика',
                                                      'Металл', 'Поп', 'Регги', 'Рок', 'ХипХоп'],
                                    'datatype': 'DIM',
                                    'dtype': 'float32',
                                    'encoding': 'none', 'name': 'RMS',
                                    'num_classes': 10,
                                    'shape': [1292],
                                    'task': 'Audio'}
                        },
                    4: {'4_classification': {'classes_colors': None,
                                             'classes_names': ['Блюз', 'Джазз', 'Диско', 'Кантри', 'Классика',
                                                               'Металл', 'Поп', 'Регги', 'Рок', 'ХипХоп'],
                                             'datatype': 'DIM',
                                             'dtype': 'uint8',
                                             'encoding': 'ohe',
                                             'name': 'Метки классов',
                                             'num_classes': 10,
                                             'shape': [10],
                                             'task': 'Classification'}
                        }
                },
                "tags": [
                    Tags.audio.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "esc_50",
                "name": "Окружающая среда",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "shape": (130, 20),
                        "name": "MFCC",
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 50,
                        "classes_names": ['airplane', 'breathing', 'brushing_teeth', 'can_opening', 'car_horn',
                                          'cat', 'chainsaw', 'chirping_birds', 'church_bells', 'clapping',
                                          'clock_alarm', 'clock_tick', 'coughing', 'cow', 'crackling_fire',
                                          'crickets', 'crow', 'crying_baby', 'dog', 'door_wood_creaks',
                                          'door_wood_knock', 'drinking_sipping', 'engine', 'fireworks', 'footsteps',
                                          'frog', 'glass_breaking', 'hand_saw', 'helicopter', 'hen', 'insects',
                                          'keyboard_typing', 'laughing', 'mouse_click', 'pig', 'pouring_water',
                                          'rain', 'rooster', 'sea_waves', 'sheep', 'siren', 'sneezing', 'snoring',
                                          'thunderstorm', 'toilet_flush', 'train', 'vacuum_cleaner', 'washing_machine',
                                          'water_drops', 'wind'],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "1D",
                        "dtype": "float32",
                        "shape": (130, 12),
                        "name": "Chroma STFT",
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 50,
                        "classes_names": ['airplane', 'breathing', 'brushing_teeth', 'can_opening', 'car_horn',
                                          'cat', 'chainsaw', 'chirping_birds', 'church_bells', 'clapping',
                                          'clock_alarm', 'clock_tick', 'coughing', 'cow', 'crackling_fire',
                                          'crickets', 'crow', 'crying_baby', 'dog', 'door_wood_creaks',
                                          'door_wood_knock', 'drinking_sipping', 'engine', 'fireworks', 'footsteps',
                                          'frog', 'glass_breaking', 'hand_saw', 'helicopter', 'hen', 'insects',
                                          'keyboard_typing', 'laughing', 'mouse_click', 'pig', 'pouring_water',
                                          'rain', 'rooster', 'sea_waves', 'sheep', 'siren', 'sneezing', 'snoring',
                                          'thunderstorm', 'toilet_flush', 'train', 'vacuum_cleaner', 'washing_machine',
                                          'water_drops', 'wind'],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    3: {
                        "datatype": "DIM",
                        "dtype": "float32",
                        "shape": (130,),
                        "name": "RMS",
                        "task": LayerInputTypeChoice.Audio.value,
                        "num_classes": 50,
                        "classes_names": ['airplane', 'breathing', 'brushing_teeth', 'can_opening', 'car_horn',
                                          'cat', 'chainsaw', 'chirping_birds', 'church_bells', 'clapping',
                                          'clock_alarm', 'clock_tick', 'coughing', 'cow', 'crackling_fire',
                                          'crickets', 'crow', 'crying_baby', 'dog', 'door_wood_creaks',
                                          'door_wood_knock', 'drinking_sipping', 'engine', 'fireworks', 'footsteps',
                                          'frog', 'glass_breaking', 'hand_saw', 'helicopter', 'hen', 'insects',
                                          'keyboard_typing', 'laughing', 'mouse_click', 'pig', 'pouring_water',
                                          'rain', 'rooster', 'sea_waves', 'sheep', 'siren', 'sneezing', 'snoring',
                                          'thunderstorm', 'toilet_flush', 'train', 'vacuum_cleaner', 'washing_machine',
                                          'water_drops', 'wind'],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    4: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (50,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 50,
                        "classes_names": ['airplane', 'breathing', 'brushing_teeth', 'can_opening', 'car_horn',
                                          'cat', 'chainsaw', 'chirping_birds', 'church_bells', 'clapping',
                                          'clock_alarm', 'clock_tick', 'coughing', 'cow', 'crackling_fire',
                                          'crickets', 'crow', 'crying_baby', 'dog', 'door_wood_creaks',
                                          'door_wood_knock', 'drinking_sipping', 'engine', 'fireworks', 'footsteps',
                                          'frog', 'glass_breaking', 'hand_saw', 'helicopter', 'hen', 'insects',
                                          'keyboard_typing', 'laughing', 'mouse_click', 'pig', 'pouring_water',
                                          'rain', 'rooster', 'sea_waves', 'sheep', 'siren', 'sneezing', 'snoring',
                                          'thunderstorm', 'toilet_flush', 'train', 'vacuum_cleaner', 'washing_machine',
                                          'water_drops', 'wind'],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {
                    1: {'1_audio': {'classes_colors': None,
                                    'classes_names': ['airplane', 'breathing', 'brushing_teeth', 'can_opening',
                                                      'car_horn', 'cat', 'chainsaw', 'chirping_birds', 'church_bells',
                                                      'clapping', 'clock_alarm', 'clock_tick', 'coughing', 'cow',
                                                      'crackling_fire', 'crickets', 'crow', 'crying_baby', 'dog',
                                                      'door_wood_creaks', 'door_wood_knock', 'drinking_sipping',
                                                      'engine', 'fireworks', 'footsteps', 'frog', 'glass_breaking',
                                                      'hand_saw', 'helicopter', 'hen', 'insects', 'keyboard_typing',
                                                      'laughing', 'mouse_click', 'pig', 'pouring_water', 'rain',
                                                      'rooster', 'sea_waves', 'sheep', 'siren', 'sneezing', 'snoring',
                                                      'thunderstorm', 'toilet_flush', 'train', 'vacuum_cleaner',
                                                      'washing_machine', 'water_drops', 'wind'],
                                    'datatype': '1D',
                                    'dtype': 'float32',
                                    'encoding': 'none',
                                    'name': 'MFCC',
                                    'num_classes': 50,
                                    'shape': [130, 20],
                                    'task': 'Audio'}
                        },
                    2: {'2_audio': {'classes_colors': None,
                                    'classes_names': ['airplane', 'breathing', 'brushing_teeth', 'can_opening',
                                                      'car_horn', 'cat', 'chainsaw', 'chirping_birds', 'church_bells',
                                                      'clapping', 'clock_alarm', 'clock_tick', 'coughing', 'cow',
                                                      'crackling_fire', 'crickets', 'crow', 'crying_baby', 'dog',
                                                      'door_wood_creaks', 'door_wood_knock', 'drinking_sipping',
                                                      'engine', 'fireworks', 'footsteps', 'frog', 'glass_breaking',
                                                      'hand_saw', 'helicopter', 'hen', 'insects', 'keyboard_typing',
                                                      'laughing', 'mouse_click', 'pig', 'pouring_water', 'rain',
                                                      'rooster', 'sea_waves', 'sheep', 'siren', 'sneezing', 'snoring',
                                                      'thunderstorm', 'toilet_flush', 'train', 'vacuum_cleaner',
                                                      'washing_machine', 'water_drops', 'wind'],
                                    'datatype': '1D',
                                    'dtype': 'float32',
                                    'encoding': 'none',
                                    'name': 'Chroma STFT',
                                    'num_classes': 50,
                                    'shape': [130, 12],
                                    'task': 'Audio'}
                        },
                    3: {'3_audio': {'classes_colors': None,
                                    'classes_names': ['airplane', 'breathing', 'brushing_teeth', 'can_opening',
                                                      'car_horn', 'cat', 'chainsaw', 'chirping_birds', 'church_bells',
                                                      'clapping', 'clock_alarm', 'clock_tick', 'coughing', 'cow',
                                                      'crackling_fire', 'crickets', 'crow', 'crying_baby', 'dog',
                                                      'door_wood_creaks', 'door_wood_knock', 'drinking_sipping',
                                                      'engine', 'fireworks', 'footsteps', 'frog', 'glass_breaking',
                                                      'hand_saw', 'helicopter', 'hen', 'insects', 'keyboard_typing',
                                                      'laughing', 'mouse_click', 'pig', 'pouring_water', 'rain',
                                                      'rooster', 'sea_waves', 'sheep', 'siren', 'sneezing', 'snoring',
                                                      'thunderstorm', 'toilet_flush', 'train', 'vacuum_cleaner',
                                                      'washing_machine', 'water_drops', 'wind'],
                                    'datatype': 'DIM',
                                    'dtype': 'float32',
                                    'encoding': 'none',
                                    'name': 'RMS',
                                    'num_classes': 50,
                                    'shape': [130],
                                    'task': 'Audio'}
                        },
                    4: {'4_classification': {'classes_colors': None,
                                             'classes_names': ['airplane', 'breathing', 'brushing_teeth', 'can_opening',
                                                               'car_horn', 'cat', 'chainsaw', 'chirping_birds',
                                                               'church_bells', 'clapping', 'clock_alarm', 'clock_tick',
                                                               'coughing', 'cow', 'crackling_fire', 'crickets', 'crow',
                                                               'crying_baby', 'dog', 'door_wood_creaks',
                                                               'door_wood_knock', 'drinking_sipping', 'engine',
                                                               'fireworks', 'footsteps', 'frog', 'glass_breaking',
                                                               'hand_saw', 'helicopter', 'hen', 'insects',
                                                               'keyboard_typing', 'laughing', 'mouse_click', 'pig',
                                                               'pouring_water', 'rain', 'rooster', 'sea_waves', 'sheep',
                                                               'siren', 'sneezing', 'snoring', 'thunderstorm',
                                                               'toilet_flush', 'train', 'vacuum_cleaner',
                                                               'washing_machine', 'water_drops', 'wind'],
                                             'datatype': 'DIM',
                                             'dtype': 'uint8',
                                             'encoding': 'ohe',
                                             'name': 'Метки классов',
                                             'num_classes': 50,
                                             'shape': [50],
                                             'task': 'Classification'}
                        }
                },
                "tags": [
                    Tags.audio.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
                "use_generator": False,
            },

            # {
            #     "alias": "trading",
            #     "name": "Трейдинг",
            #     "group": DatasetGroupChoice.terra.value,
            #     "tags": [
            #         Tags.trading.value,
            #         Tags.timeseries.value,
            #         Tags.terra_ai.value,
            #     ],
            #     "inputs": {
            #         1: {
            #             "datatype": "1D",
            #             "dtype": "float32",
            #             "shape": (4, 30),
            #             "name": "Вход 1",
            #             "task": LayerInputTypeChoice.Dataframe.value,
            #             "classes_names": [],
            #             "num_classes": 1,
            #             "encoding": LayerEncodingChoice.none.value,
            #         },
            #     },
            #     "outputs": {
            #         2: {
            #             "datatype": "DIM",
            #             "dtype": "int64",
            #             "shape": (1,),
            #             "name": "Выход 1",
            #             "task": LayerOutputTypeChoice.Timeseries.value,
            #             "num_classes": 3,
            #             "classes_names": ["Не изменился", "Вверх", "Вниз"],
            #         },
            #     },
            #     "columns": {
            #         1: {
            #             "1_<CLOSE>": {
            #                 "datatype": "DIM",
            #                 "dtype": "float64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Input 1",
            #                 "num_classes": 1,
            #                 "shape": (30,),
            #                 "task": "Scaler",
            #             },
            #             "1_<HIGH>": {
            #                 "datatype": "DIM",
            #                 "dtype": "float64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Input 1",
            #                 "num_classes": 1,
            #                 "shape": (30,),
            #                 "task": "Scaler",
            #             },
            #             "1_<LOW>": {
            #                 "datatype": "DIM",
            #                 "dtype": "float64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Input 1",
            #                 "num_classes": 1,
            #                 "shape": (30,),
            #                 "task": "Scaler",
            #             },
            #             "1_<OPEN>": {
            #                 "datatype": "DIM",
            #                 "dtype": "float64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Input 1",
            #                 "num_classes": 1,
            #                 "shape": (30,),
            #                 "task": "Scaler",
            #             },
            #         },
            #         2: {
            #             "2_<CLOSE>": {
            #                 "classes_names": ["Не изменился", "Вверх", "Вниз"],
            #                 "datatype": "DIM",
            #                 "dtype": "int64",
            #                 "encoding": LayerEncodingChoice.none.value,
            #                 "name": "Output 1",
            #                 "num_classes": 3,
            #                 "shape": (1,),
            #                 "task": LayerOutputTypeChoice.Timeseries.value,
            #             }
            #         },
            #     },
            #     "use_generator": False,
            # },
            {
                "alias": "kvartiry",
                "name": "Квартиры",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (315,),
                        "name": "Вход 1",
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "num_classes": None,
                        "classes_names": None,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (2000,),
                        "name": "Вход 2",
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": None,
                        "classes_names": None,
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    3: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (1,),
                        "name": "Выход 3",
                        "task": LayerOutputTypeChoice.Regression.value,
                        "num_classes": 1,
                        "classes_names": ["flats.csv"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "columns": {1: {'1_Балконы': {'name': 'Вход 1',
                                              'datatype': 'DIM',
                                              'dtype': 'uint8',
                                              'shape': (4,),
                                              'num_classes': 4,
                                              'classes_names': ['0', '1', '2', '3'],
                                              'classes_colors': None,
                                              'encoding': 'none',
                                              'task': LayerInputTypeChoice.Classification.value
                                              },
                                '1_Комнат': {'name': 'Вход 1',
                                             'datatype': 'DIM',
                                             'dtype': 'uint8',
                                             'shape': (17,),
                                             'num_classes': 17,
                                             'classes_names': ['1', '2', '5', '6', '7', '8', '10', '9', '14',
                                                               '13', '11', '15', '16', '12', '20', '30', '4'],
                                             'classes_colors': None,
                                             'encoding': 'none',
                                             'task': LayerInputTypeChoice.Classification.value
                                             },
                                '1_Лоджии': {'name': 'Вход 1',
                                             'datatype': 'DIM',
                                             'dtype': 'uint8',
                                             'shape': (5,),
                                             'num_classes': 5,
                                             'classes_names': ['0', '1', '2', '3', '4'],
                                             'classes_colors': None,
                                             'encoding': 'none',
                                             'task': LayerInputTypeChoice.Classification.value
                                             },
                                '1_Пешком или на транспорте': {'name': 'Вход 1',
                                                               'datatype': 'DIM',
                                                               'dtype': 'uint8',
                                                               'shape': (3,),
                                                               'num_classes': 3,
                                                               'classes_names': ['Пешком', 'На транспорте',
                                                                                 'Не указано'],
                                                               'classes_colors': None,
                                                               'encoding': 'none',
                                                               'task': LayerInputTypeChoice.Classification.value
                                                               },
                                '1_Площадь': {'name': 'Вход 1',
                                              'datatype': 'DIM',
                                              'dtype': 'float64',
                                              'shape': (1,),
                                              'num_classes': None,
                                              'classes_names': None,
                                              'classes_colors': None,
                                              'encoding': 'none',
                                              'task': LayerInputTypeChoice.Scaler.value
                                              },
                                '1_Санузел': {'name': 'Вход 1',
                                              'datatype': 'DIM',
                                              'dtype': 'uint8',
                                              'shape': (5,),
                                              'num_classes': 5,
                                              'classes_names': ['2', '1', '0', '4', '3'],
                                              'classes_colors': None,
                                              'encoding': 'none',
                                              'task': LayerInputTypeChoice.Classification.value
                                              },
                                '1_Станция метро': {'name': 'Вход 1',
                                                    'datatype': 'DIM',
                                                    'dtype': 'uint8',
                                                    'shape': (268,),
                                                    'num_classes': 268,
                                                    'classes_names': [],
                                                    'classes_colors': None,
                                                    'encoding': 'none',
                                                    'task': LayerInputTypeChoice.Classification.value
                                                    },
                                '1_Тип дома': {'name': 'Вход 1',
                                               'datatype': 'DIM',
                                               'dtype': 'uint8',
                                               'shape': (9,),
                                               'num_classes': 9,
                                               'classes_names': ['Монолитный', 'Панельный', 'Не указано',
                                                                 'Кирпичный', 'Блочный', 'Сталинка', 'Деревянный',
                                                                 'Железо-бетонный', 'Шлакоблочный'],
                                               'classes_colors': None,
                                               'encoding': 'none',
                                               'task': LayerInputTypeChoice.Classification.value
                                               },
                                '1_Тип санузла': {'name': 'Вход 1',
                                                  'datatype': 'DIM',
                                                  'dtype': 'uint8',
                                                  'shape': (3,),
                                                  'num_classes': 3,
                                                  'classes_names': ['Не указано', 'Раздельный', 'Совмещенный'],
                                                  'classes_colors': None,
                                                  'encoding': 'none',
                                                  'task': LayerInputTypeChoice.Classification.value
                                                  }
                                },
                            2: {
                                '2_Примечание': {'name': 'Вход 2',
                                                 'datatype': 'DIM',
                                                 'dtype': 'float64',
                                                 'shape': (2000,),
                                                 'num_classes': None,
                                                 'classes_names': None,
                                                 'classes_colors': None,
                                                 'encoding': 'none',
                                                 'task': LayerInputTypeChoice.Text.value
                                                 }
                            },
                            3: {'3_Цена, тыс.руб.': {'name': 'Выход 3',
                                                     'datatype': 'DIM',
                                                     'dtype': 'float64',
                                                     'shape': (1,),
                                                     'num_classes': 1,
                                                     'classes_names': ['flats.csv'],
                                                     'classes_colors': None,
                                                     'encoding': 'none',
                                                     'task': LayerOutputTypeChoice.Regression.value
                                                     }
                                }
                            },
                "tags": [
                    Tags.classification.value,
                    Tags.text.value,
                    Tags.regression.value,
                    Tags.terra_ai.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "rezjume",
                "name": "Резюме",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (65,),
                        "name": "Параметры",
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "num_classes": 63,
                        "classes_names": [],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (2000,),
                        "name": "Должность",
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": None,
                        "classes_names": None,
                        "encoding": LayerEncodingChoice.none.value,
                    }
                },
                "outputs": {
                    3: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (1,),
                        "name": "Зарплата",
                        "task": LayerOutputTypeChoice.Regression.value,
                        "num_classes": 1,
                        "classes_names": ["flats.csv"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "columns": {1: {'1_Возраст': {'name': 'Параметры',
                                              'datatype': 'DIM',
                                              'dtype': 'uint8',
                                              'shape': (1,),
                                              'num_classes': 4,
                                              'classes_names': None,
                                              'classes_colors': None,
                                              'encoding': 'none',
                                              'task': LayerInputTypeChoice.Scaler.value
                                              },
                                '1_Город': {'name': 'Параметры',
                                            'datatype': 'DIM',
                                            'dtype': 'uint8',
                                            'shape': (16,),
                                            'num_classes': 16,
                                            'classes_names': [],
                                            'classes_colors': None,
                                            'encoding': 'none',
                                            'task': LayerInputTypeChoice.Classification.value
                                            },
                                '1_График': {'name': 'Параметры',
                                             'datatype': 'DIM',
                                             'dtype': 'uint8',
                                             'shape': (16,),
                                             'num_classes': 16,
                                             'classes_names': [],
                                             'classes_colors': None,
                                             'encoding': 'none',
                                             'task': LayerInputTypeChoice.Classification.value
                                             },
                                '1_Занятость': {'name': 'Параметры',
                                                'datatype': 'DIM',
                                                'dtype': 'uint8',
                                                'shape': (16,),
                                                'num_classes': 3,
                                                'classes_names': [],
                                                'classes_colors': None,
                                                'encoding': 'none',
                                                'task': LayerInputTypeChoice.Classification.value
                                                },
                                '1_Образование и ВУЗ': {'name': 'Параметры',
                                                        'datatype': 'DIM',
                                                        'dtype': 'float64',
                                                        'shape': (12,),
                                                        'num_classes': None,
                                                        'classes_names': None,
                                                        'classes_colors': None,
                                                        'encoding': 'none',
                                                        'task': LayerInputTypeChoice.Classification.value
                                                        },
                                '1_Опыт (двойное нажатие для полной версии)': {'name': 'Параметры',
                                                                               'datatype': 'DIM',
                                                                               'dtype': 'uint8',
                                                                               'shape': (1,),
                                                                               'num_classes': None,
                                                                               'classes_names': None,
                                                                               'classes_colors': None,
                                                                               'encoding': 'none',
                                                                               'task': LayerInputTypeChoice.Scaler.value
                                                                               },
                                '1_Пол': {'name': 'Параметры',
                                          'datatype': 'DIM',
                                          'dtype': 'uint8',
                                          'shape': (3,),
                                          'num_classes': 3,
                                          'classes_names': ['М', 'Ж', 'Не указан'],
                                          'classes_colors': None,
                                          'encoding': 'none',
                                          'task': LayerInputTypeChoice.Classification.value
                                          },
                                },
                            2: {
                                '2_Ищет работу на должность': {'name': 'Должность',
                                                               'datatype': 'DIM',
                                                               'dtype': 'float64',
                                                               'shape': (2000,),
                                                               'num_classes': None,
                                                               'classes_names': None,
                                                               'classes_colors': None,
                                                               'encoding': 'none',
                                                               'task': LayerInputTypeChoice.Text.value
                                                               }
                            },
                            3: {'3_ЗП': {'name': 'Зарплата',
                                         'datatype': 'DIM',
                                         'dtype': 'float64',
                                         'shape': (1,),
                                         'num_classes': 1,
                                         'classes_names': ['HeadHunter.csv'],
                                         'classes_colors': None,
                                         'encoding': 'none',
                                         'task': LayerOutputTypeChoice.Regression.value
                                         }
                                }
                            },
                "tags": [
                    Tags.classification.value,
                    Tags.text.value,
                    Tags.regression.value,
                    Tags.terra_ai.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "tsena_avtomobilej",
                "name": "Цена автомобилей",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (1770,),
                        "name": "Вход 1",
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "num_classes": 1769,
                        "classes_names": [],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    3: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (1,),
                        "name": "Выход 2",
                        "task": LayerOutputTypeChoice.Regression.value,
                        "num_classes": 1,
                        "classes_names": ["car_price.csv"],
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "columns": {'1': {'1_Category': {'classes_colors': None,
                                                 'classes_names': [],
                                                 'datatype': 'DIM',
                                                 'dtype': 'uint8',
                                                 'encoding': 'ohe',
                                                 'name': 'Вход 1',
                                                 'num_classes': 11,
                                                 'shape': [11],
                                                 'task': 'Classification'},
                                  '1_Color': {'classes_colors': None,
                                              'classes_names': [],
                                              'datatype': 'DIM',
                                              'dtype': 'uint8',
                                              'encoding': 'ohe',
                                              'name': 'Вход 1',
                                              'num_classes': 16,
                                              'shape': [16],
                                              'task': 'Classification'},
                                  '1_Cylinders': {'classes_colors': None,
                                                  'classes_names': [],
                                                  'datatype': 'DIM',
                                                  'dtype': 'uint8',
                                                  'encoding': 'ohe',
                                                  'name': 'Вход 1',
                                                  'num_classes': 13,
                                                  'shape': [13],
                                                  'task': 'Classification'},
                                  '1_Drive wheels': {'classes_colors': None,
                                                     'classes_names': ['4x4', 'Front', 'Rear'],
                                                     'datatype': 'DIM',
                                                     'dtype': 'uint8',
                                                     'encoding': 'ohe',
                                                     'name': 'Вход 1',
                                                     'num_classes': 3,
                                                     'shape': [3],
                                                     'task': 'Classification'},
                                  '1_Engine type': {'classes_colors': None,
                                                    'classes_names': ['No Turbo', 'Turbo'],
                                                    'datatype': 'DIM',
                                                    'dtype': 'uint8',
                                                    'encoding': 'ohe',
                                                    'name': 'Вход 1',
                                                    'num_classes': 2,
                                                    'shape': [2],
                                                    'task': 'Classification'},
                                  '1_Fuel type': {'classes_colors': None,
                                                  'classes_names': [],
                                                  'datatype': 'DIM',
                                                  'dtype': 'uint8',
                                                  'encoding': 'ohe',
                                                  'name': 'Вход 1',
                                                  'num_classes': 7,
                                                  'shape': [7],
                                                  'task': 'Classification'},
                                  '1_Gear box type': {'classes_colors': None,
                                                      'classes_names': ['Automatic', 'Tiptronic', 'Variator', 'Manual'],
                                                      'datatype': 'DIM',
                                                      'dtype': 'uint8',
                                                      'encoding': 'ohe',
                                                      'name': 'Вход 1',
                                                      'num_classes': 4,
                                                      'shape': [4],
                                                      'task': 'Classification'},
                                  '1_Leather interior': {'classes_colors': None,
                                                         'classes_names': ['Yes', 'No'],
                                                         'datatype': 'DIM',
                                                         'dtype': 'uint8',
                                                         'encoding': 'ohe',
                                                         'name': 'Вход 1',
                                                         'num_classes': 2,
                                                         'shape': [2],
                                                         'task': 'Classification'},
                                  '1_Manufacturer': {'classes_colors': None,
                                                     'classes_names': [],
                                                     'datatype': 'DIM',
                                                     'dtype': 'uint8',
                                                     'encoding': 'ohe',
                                                     'name': 'Вход 1',
                                                     'num_classes': 65,
                                                     'shape': [65],
                                                     'task': 'Classification'},
                                  '1_Mileage, km': {'classes_colors': None,
                                                    'classes_names': None,
                                                    'datatype': 'DIM',
                                                    'dtype': 'float64',
                                                    'encoding': 'none',
                                                    'name': 'Вход 1',
                                                    'num_classes': None,
                                                    'shape': [1],
                                                    'task': 'Scaler'},
                                  '1_Model': {'classes_colors': None,
                                              'classes_names': [],
                                              'datatype': 'DIM',
                                              'dtype': 'uint8',
                                              'encoding': 'ohe',
                                              'name': 'Вход 1',
                                              'num_classes': 1590,
                                              'shape': [1590],
                                              'task': 'Classification'},
                                  '1_Prod. year': {'classes_colors': None,
                                                   'classes_names': [],
                                                   'datatype': 'DIM',
                                                   'dtype': 'uint8',
                                                   'encoding': 'ohe',
                                                   'name': 'Вход 1',
                                                   'num_classes': 54,
                                                   'shape': [54],
                                                   'task': 'Classification'},
                                  '1_Wheel': {'classes_colors': None,
                                              'classes_names': ['Left wheel', 'Right-hand drive'],
                                              'datatype': 'DIM',
                                              'dtype': 'uint8',
                                              'encoding': 'ohe',
                                              'name': 'Вход 1',
                                              'num_classes': 2,
                                              'shape': [2],
                                              'task': 'Classification'}
                                  },
                            2: {'2_Price': {'classes_colors': None,
                                            'classes_names': ['cars_price.csv'],
                                            'datatype': 'DIM',
                                            'dtype': 'float64',
                                            'encoding': 'none',
                                            'name': 'Выход 2',
                                            'num_classes': 1,
                                            'shape': [1],
                                            'task': 'Regression'
                                            }
                                }
                            },
                "tags": [
                    Tags.classification.value,
                    Tags.regression.value,
                    Tags.terra_ai.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "spam_soobschenija",
                "name": "Спам сообщения",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (2000,),
                        "name": "Сообщения (bow)",
                        "task": LayerInputTypeChoice.Text.value,
                        "num_classes": None,
                        "classes_names": None,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    2: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (2,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["ham", "spam"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {1: {'1_Message': {'name': 'Сообщение (bow)',
                                              'datatype': 'DIM',
                                              'dtype': 'float64',
                                              'shape': (2000,),
                                              'num_classes': None,
                                              'classes_names': None,
                                              'classes_colors': None,
                                              'encoding': 'none',
                                              'task': LayerInputTypeChoice.Text.value
                                              },
                                },
                            2: {'2_Category': {'name': 'Метки классов',
                                               'datatype': 'DIM',
                                               'dtype': 'uint8',
                                               'shape': (2,),
                                               'num_classes': 2,
                                               'classes_names': ['ham', 'spam'],
                                               'classes_colors': None,
                                               'encoding': LayerEncodingChoice.ohe.value,
                                               'task': LayerOutputTypeChoice.Classification.value
                                               }
                                }
                            },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
                "use_generator": False,
            },
            {
                "alias": "klassifikatsija_rezjume",
                "name": "Классификация резюме",
                "group": DatasetGroupChoice.terra.value,
                "inputs": {
                    1: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (300,),
                        "name": "Параметры",
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "num_classes": None,
                        "classes_names": None,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                    2: {
                        "datatype": "DIM",
                        "dtype": "float64",
                        "shape": (100,),
                        "name": "Обязанности (embedding)",
                        "task": LayerInputTypeChoice.Dataframe.value,
                        "num_classes": None,
                        "classes_names": None,
                        "encoding": LayerEncodingChoice.none.value,
                    },
                },
                "outputs": {
                    3: {
                        "datatype": "DIM",
                        "dtype": "uint8",
                        "shape": (2,),
                        "name": "Метки классов",
                        "task": LayerOutputTypeChoice.Classification.value,
                        "num_classes": 2,
                        "classes_names": ["да", "нет"],
                        "encoding": LayerEncodingChoice.ohe.value,
                    },
                },
                "columns": {'1': {'1_Возраст': {'classes_colors': None,
                                                'classes_names': None,
                                                'datatype': 'DIM',
                                                'dtype': 'float64',
                                                'encoding': 'none',
                                                'name': 'Параметры',
                                                'num_classes': None,
                                                'shape': [1],
                                                'task': 'Scaler'},
                                  '1_Время в пути до работы': {'classes_colors': None,
                                                               'classes_names': ['не имеет значения',
                                                                                 'не более полутора часов',
                                                                                 'не более часа'],
                                                               'datatype': 'DIM',
                                                               'dtype': 'uint8',
                                                               'encoding': 'ohe',
                                                               'name': 'Параметры',
                                                               'num_classes': 3,
                                                               'shape': [3],
                                                               'task': 'Classification'
                                                               },
                                  '1_Город': {'classes_colors': None,
                                              'classes_names': [],
                                              'datatype': 'DIM',
                                              'dtype': 'uint8',
                                              'encoding': 'ohe',
                                              'name': 'Параметры',
                                              'num_classes': 135,
                                              'shape': [135],
                                              'task': 'Classification'
                                              },
                                  '1_Готовность к командировкам': {'classes_colors': None,
                                                                   'classes_names': ['готов к командировкам',
                                                                                     'не готов к командировкам'],
                                                                   'datatype': 'DIM',
                                                                   'dtype': 'uint8',
                                                                   'encoding': 'ohe',
                                                                   'name': 'Параметры',
                                                                   'num_classes': 2,
                                                                   'shape': [2],
                                                                   'task': 'Classification'
                                                                   },
                                  '1_Готовность к переезду': {'classes_colors': None,
                                                              'classes_names': ['не готов к переезду',
                                                                                'готов к переезду'],
                                                              'datatype': 'DIM',
                                                              'dtype': 'uint8',
                                                              'encoding': 'ohe',
                                                              'name': 'Параметры',
                                                              'num_classes': 2,
                                                              'shape': [2],
                                                              'task': 'Classification'
                                                              },
                                  '1_Гражданство': {'classes_colors': None,
                                                    'classes_names': [],
                                                    'datatype': 'DIM',
                                                    'dtype': 'uint8',
                                                    'encoding': 'ohe',
                                                    'name': 'Параметры',
                                                    'num_classes': 20,
                                                    'shape': [20],
                                                    'task': 'Classification'
                                                    },
                                  '1_График': {'classes_colors': None,
                                               'classes_names': [],
                                               'datatype': 'DIM',
                                               'dtype': 'uint8',
                                               'encoding': 'ohe',
                                               'name': 'Параметры',
                                               'num_classes': 25,
                                               'shape': [25],
                                               'task': 'Classification'},
                                  '1_Занятость': {'classes_colors': None,
                                                  'classes_names': [],
                                                  'datatype': 'DIM',
                                                  'dtype': 'uint8',
                                                  'encoding': 'ohe',
                                                  'name': 'Параметры',
                                                  'num_classes': 18,
                                                  'shape': [18],
                                                  'task': 'Classification'},
                                  '1_Зарплата': {'classes_colors': None,
                                                 'classes_names': None,
                                                 'datatype': 'DIM',
                                                 'dtype': 'float64',
                                                 'encoding': 'none',
                                                 'name': 'Параметры',
                                                 'num_classes': None,
                                                 'shape': [1],
                                                 'task': 'Scaler'},
                                  '1_Знания языков': {'classes_colors': None,
                                                      'classes_names': [],
                                                      'datatype': 'DIM',
                                                      'dtype': 'uint8',
                                                      'encoding': 'ohe',
                                                      'name': 'Параметры',
                                                      'num_classes': 70,
                                                      'shape': [70],
                                                      'task': 'Classification'},
                                  '1_Образование': {'classes_colors': None,
                                                    'classes_names': ['Высшее образование',
                                                                      'Среднее специальное образование',
                                                                      'Среднее образование',
                                                                      'no_data'],
                                                    'datatype': 'DIM',
                                                    'dtype': 'uint8',
                                                    'encoding': 'ohe',
                                                    'name': 'Параметры',
                                                    'num_classes': 4,
                                                    'shape': [4],
                                                    'task': 'Classification'
                                                    },
                                  '1_Пол': {'classes_colors': None,
                                            'classes_names': ['Ж', 'М'],
                                            'datatype': 'DIM',
                                            'dtype': 'uint8',
                                            'encoding': 'ohe',
                                            'name': 'Параметры',
                                            'num_classes': 2,
                                            'shape': [2],
                                            'task': 'Classification'},
                                  '1_Разрешение на работу': {'classes_colors': None,
                                                             'classes_names': [],
                                                             'datatype': 'DIM',
                                                             'dtype': 'uint8',
                                                             'encoding': 'ohe',
                                                             'name': 'Параметры',
                                                             'num_classes': 17,
                                                             'shape': [17],
                                                             'task': 'Classification'
                                                             }
                                  },
                            2: {'2_Обязанности на пред.работе': {'classes_colors': None,
                                                                 'classes_names': None,
                                                                 'datatype': 'DIM',
                                                                 'dtype': 'int64',
                                                                 'encoding': 'none',
                                                                 'name': 'Обязанности (embedding)',
                                                                 'num_classes': None,
                                                                 'shape': [100],
                                                                 'task': 'Text'
                                                                 }
                                },
                            3: {'3_Этап сделки': {'classes_colors': None,
                                                  'classes_names': ['да', 'нет'],
                                                  'datatype': 'DIM',
                                                  'dtype': 'uint8',
                                                  'encoding': 'ohe',
                                                  'name': 'Метки классов',
                                                  'num_classes': 2,
                                                  'shape': [2],
                                                  'task': 'Classification'
                                                  }
                                }
                            },
                "tags": [
                    Tags.text.value,
                    Tags.classification.value,
                    Tags.terra_ai.value,
                ],
                "use_generator": False,
            },
        ],
    },
    {
        "alias": "custom",
        "name": "Собственные",
    },
]
